From 2690f0f0327802efd20b269d28a50ef0d9286af8 Mon Sep 17 00:00:00 2001
From: Maxime Thirouin <m@moox.io>
Date: Wed, 27 Aug 2014 08:45:13 +0200
Subject: [PATCH 021/186] fix nested custom properties usages

Close https://github.com/putaindecode/cssnext/issues/25
---
 CHANGELOG.md                                |  4 ++++
 README.md                                   |  2 +-
 index.js                                    | 16 +++++++++++++++-
 test/fixtures/substitution-defined.css      |  9 ++++++++-
 test/fixtures/substitution-defined.out.css  |  5 +++++
 test/fixtures/substitution-fallback.css     | 11 +++++++++++
 test/fixtures/substitution-fallback.out.css | 12 ++++++++++++
 7 files changed, 56 insertions(+), 3 deletions(-)

diff --git a/CHANGELOG.md b/CHANGELOG.md
index 941e283..484a71e 100755
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,3 +1,7 @@
+# 0.3.1 - 2014-08-26
+
+* nested custom properties usages are now correctly resolved
+
 # 0.3.0 - 2014-08-25
 
 * fallback now are always added by default ([see why](http://www.w3.org/TR/css-variables/#invalid-variables))
diff --git a/README.md b/README.md
index f186c39..f23298f 100755
--- a/README.md
+++ b/README.md
@@ -2,7 +2,7 @@
 
 > [PostCSS](https://github.com/postcss/postcss) plugin to transform [W3C CSS Custom Properties for cascading variables](http://www.w3.org/TR/css-variables/) syntax to more compatible CSS.
 
-**N.B.** For now the transformation _is not complete_. It currently just aims to provide a future-proof way of using a _limited subset_ of the features provided by native CSS variables.  
+**N.B.** For now the transformation _is not complete_. It currently just aims to provide a future-proof way of using a _limited subset (to `:root` selector)_ of the features provided by native CSS custom properties.  
 
 _[Checkout opened issue to know the state of this plugin](https://github.com/postcss/postcss-custom-properties/issues)._
 
diff --git a/index.js b/index.js
index e448afe..48ca71b 100755
--- a/index.js
+++ b/index.js
@@ -117,6 +117,8 @@ function resolveValue(value, variables, source) {
     if (!replacement && !fallback) {
       throw new Error(gnuMessage("variable '" + name + "' is undefined & don't have any fallback", source))
     }
+
+    // prepend with fallbacks
     if (fallback) {
       // resolve the end of the expression before the rest
       (matches.post ? resolveValue(matches.post, variables, source) : [""]).forEach(function(afterValue) {
@@ -127,10 +129,22 @@ function resolveValue(value, variables, source) {
       })
     }
 
+    // replace with computed custom properties
     if (replacement) {
       // resolve the end of the expression
       (matches.post ? resolveValue(matches.post, variables, source) : [""]).forEach(function(afterValue) {
-        results.push(value.slice(0, start) + replacement + afterValue)
+        // resolve replacement if it use a custom property
+        resolveValue(replacement, variables, source).forEach(function(replacementValue) {
+          results.push(value.slice(0, start) + replacementValue + afterValue)
+        })
+      })
+    }
+
+    // nothing, just keep original value
+    if (!replacement && !fallback) {
+      // resolve the end of the expression
+      (matches.post ? resolveValue(matches.post, variables, source) : [""]).forEach(function(afterValue) {
+        results.push(value.slice(0, start) + value + afterValue)
       })
     }
   })
diff --git a/test/fixtures/substitution-defined.css b/test/fixtures/substitution-defined.css
index 204b3e4..af44bfa 100755
--- a/test/fixtures/substitution-defined.css
+++ b/test/fixtures/substitution-defined.css
@@ -3,7 +3,9 @@
  */
 
 :root {
-  --test-one: green;
+  --test: green;
+  --test-one: var(--test);
+
   --test-two: blue;
   --test-three: yellow;
 }
@@ -15,14 +17,19 @@ span {
 
 div {
   --untouched: red;
+
   /* single variable */
   color: var(--test-one);
+
   /* single variable with tail */
   color: var(--test-one) !important;
+
   /* multiple variables */
   color: var(--test-one), var(--test-two);
+
   /* variable with function in fallback */
   border: var(--test-one, 1px solid rgba(0, 0, 0, 0.1));
+
   /* multiple variables within a function */
   background: linear-gradient(to top, var(--test-one), var(--test-two));
 }
diff --git a/test/fixtures/substitution-defined.out.css b/test/fixtures/substitution-defined.out.css
index b995db5..d330bfe 100755
--- a/test/fixtures/substitution-defined.out.css
+++ b/test/fixtures/substitution-defined.out.css
@@ -9,15 +9,20 @@ span {
 
 div {
   --untouched: red;
+
   /* single variable */
   color: green;
+
   /* single variable with tail */
   color: green !important;
+
   /* multiple variables */
   color: green, blue;
+
   /* variable with function in fallback */
   border: 1px solid rgba(0, 0, 0, 0.1);
   border: green;
+
   /* multiple variables within a function */
   background: linear-gradient(to top, green, blue);
 }
diff --git a/test/fixtures/substitution-fallback.css b/test/fixtures/substitution-fallback.css
index 13b4041..50cea75 100755
--- a/test/fixtures/substitution-fallback.css
+++ b/test/fixtures/substitution-fallback.css
@@ -5,20 +5,31 @@
 div {
   /* simple fallback */
   color: var(--missing, green);
+
   /* comma-separated fallback */
   color: var(--missing, green, blue);
+
   /* fallback is a function */
   background: var(--missing, linear-gradient(to top, #000, #111));
+
   /* fallback contains a function */
   background: var(--missing, 1px solid rgba(0, 0, 0, 0.1));
+
   /* fallback is a function containing a function */
   background: var(--missing, linear-gradient(to top, #000, rgba(0, 0, 0, 0.5)));
+
   /* fallback contains a defined variable */
   background: var(--missing, var(--nested));
+
   /* fallback contains a defined variable within a function */
   background: var(--missing, linear-gradient(to top, #000, var(--nested)));
+
   /* fallback contains an undefined variable with a fallack */
   background: var(--missing, var(--also-missing, green));
+
   /* fallback for invalid variables http://www.w3.org/TR/css-variables/#invalid-variables */
   font-size: var(--nested, 1rem);
+
+  /* fallback contains an defined variable with a fallack */
+  font-size: var(--missing, var(--nested, 1rem));
 }
diff --git a/test/fixtures/substitution-fallback.out.css b/test/fixtures/substitution-fallback.out.css
index 936b6d3..8f79a3a 100755
--- a/test/fixtures/substitution-fallback.out.css
+++ b/test/fixtures/substitution-fallback.out.css
@@ -1,21 +1,33 @@
 div {
   /* simple fallback */
   color: green;
+
   /* comma-separated fallback */
   color: green, blue;
+
   /* fallback is a function */
   background: linear-gradient(to top, #000, #111);
+
   /* fallback contains a function */
   background: 1px solid rgba(0, 0, 0, 0.1);
+
   /* fallback is a function containing a function */
   background: linear-gradient(to top, #000, rgba(0, 0, 0, 0.5));
+
   /* fallback contains a defined variable */
   background: green;
+
   /* fallback contains a defined variable within a function */
   background: linear-gradient(to top, #000, green);
+
   /* fallback contains an undefined variable with a fallack */
   background: green;
+
   /* fallback for invalid variables http://www.w3.org/TR/css-variables/#invalid-variables */
   font-size: 1rem;
   font-size: green;
+
+  /* fallback contains an defined variable with a fallack */
+  font-size: 1rem;
+  font-size: green;
 }
-- 
2.33.1

