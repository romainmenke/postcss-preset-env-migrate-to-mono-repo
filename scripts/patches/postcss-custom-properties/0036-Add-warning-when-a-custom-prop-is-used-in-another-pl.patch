From d39303bbd75ed961662a764f7a086cbe1f3f49a9 Mon Sep 17 00:00:00 2001
From: Maxime Thirouin <m@moox.io>
Date: Sun, 2 Nov 2014 07:27:29 +0100
Subject: [PATCH 036/186] Add warning when a custom prop is used in another
 place that :root

Close #13
---
 CHANGELOG.md | 18 +++++++++++-------
 index.js     |  3 ++-
 2 files changed, 13 insertions(+), 8 deletions(-)

diff --git a/CHANGELOG.md b/CHANGELOG.md
index 2ee1209..0d3fd54 100755
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,21 +1,25 @@
+# unreleased
+
+- Add warning when a custom prop is used in another place that :root
+
 # 0.4.0 - 2014-09-30
 
-* JS-defined properties override CSS-defined
+- JS-defined properties override CSS-defined
 
 # 0.3.1 - 2014-08-27
 
-* nested custom properties usages are now correctly resolved
-* undefined var doesn't throw error anymore (just a console warning) & are kept as is in the output
+- Nested custom properties usages are now correctly resolved
+- Undefined var doesn't throw error anymore (just a console warning) & are kept as is in the output
 
 # 0.3.0 - 2014-08-26
 
-* fallback now are always added by default ([see why](http://www.w3.org/TR/css-variables/#invalid-variables))
-* `map` option renamed to `variables`
+- Fallback now are always added by default ([see why](http://www.w3.org/TR/css-variables/#invalid-variables))
+- `map` option renamed to `variables`
 
 # 0.2.0 - 2014-08-22
 
-* Add `map` option
-* GNU style error message
+- Add `map` option
+- GNU style error message
 
 # 0.1.0 - 2014-08-01
 
diff --git a/index.js b/index.js
index 1972d43..4eba302 100755
--- a/index.js
+++ b/index.js
@@ -32,6 +32,7 @@ module.exports = function(options) {
 
       // only variables declared for `:root` are supported for now
       if (rule.selectors.length !== 1 || rule.selectors[0] !== ":root" || rule.parent.type !== "root") {
+        console.warn(gnuMessage("Non :root only custom properties in non root level are not supported (" +  rule.selectors + ")"))
         return
       }
 
@@ -165,5 +166,5 @@ function resolveValue(value, variables, source) {
  * @param {Object} source
  */
 function gnuMessage(message, source) {
-  return (source ? (source.file ? source.file : "<css input>") + ":" + source.start.line + ":" + source.start.column : "") + " " + message
+  return (source ? (source.file ? source.file : "<css input>") + ":" + source.start.line + ":" + source.start.column + " " : "") + message
 }
-- 
2.33.1

