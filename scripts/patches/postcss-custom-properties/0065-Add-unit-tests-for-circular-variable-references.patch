From d0082b22cda86be288c3e56d5d9c991626801f46 Mon Sep 17 00:00:00 2001
From: Glen Huang <hey.hgl@gmail.com>
Date: Sat, 4 Apr 2015 14:01:55 +0800
Subject: [PATCH 065/186] Add unit tests for circular variable references

---
 test/fixtures/circular-reference.css |  4 ++++
 test/fixtures/self-reference.css     |  3 +++
 test/index.js                        | 16 +++++++++++++++-
 3 files changed, 22 insertions(+), 1 deletion(-)
 create mode 100644 test/fixtures/circular-reference.css
 create mode 100644 test/fixtures/self-reference.css

diff --git a/test/fixtures/circular-reference.css b/test/fixtures/circular-reference.css
new file mode 100644
index 0000000..e49b0ad
--- /dev/null
+++ b/test/fixtures/circular-reference.css
@@ -0,0 +1,4 @@
+:root {
+    --color: var(--bg-color);
+    --bg-color: var(--color);
+}
diff --git a/test/fixtures/self-reference.css b/test/fixtures/self-reference.css
new file mode 100644
index 0000000..adf6bde
--- /dev/null
+++ b/test/fixtures/self-reference.css
@@ -0,0 +1,3 @@
+:root {
+	--color: var(--color);
+}
diff --git a/test/index.js b/test/index.js
index b7836d0..777ea3a 100755
--- a/test/index.js
+++ b/test/index.js
@@ -13,8 +13,12 @@ function fixture(name) {
   return fs.readFileSync(fixturePath(name), "utf8").trim()
 }
 
+function resolveFixture(name, options) {
+  return postcss(customProperties(options)).process(fixture(name), {from: fixturePath(name)}).css.trim()
+}
+
 function compareFixtures(t, name, options) {
-  var actual = postcss(customProperties(options)).process(fixture(name), {from: fixturePath(name)}).css.trim()
+  var actual = resolveFixture(name, options)
 
   // handy thing: checkout actual in the *.actual.css file
   fs.writeFile(fixturePath(name + ".actual"), actual)
@@ -102,3 +106,13 @@ test("preserves variables when `preserve` is `true`", function(t) {
   compareFixtures(t, "preserve-variables", {preserve: true})
   t.end()
 })
+
+test("throw error for circular variable references", function(t) {
+  t.throws(function() {
+    resolveFixture("self-reference", {preserve: true})
+  }, Error, "should throw error for self-referential variables")
+  t.throws(function() {
+    resolveFixture("circular-reference", {preserve: true})
+  }, Error, "should throw error for circular variable references")
+  t.end()
+})
-- 
2.33.1

