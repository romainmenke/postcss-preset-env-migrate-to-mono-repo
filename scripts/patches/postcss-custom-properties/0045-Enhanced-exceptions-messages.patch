From 7d3a6dd1850828e80904b8d21f98074e016441e2 Mon Sep 17 00:00:00 2001
From: Maxime Thirouin <m@moox.io>
Date: Tue, 25 Nov 2014 09:09:41 +0100
Subject: [PATCH 045/186] Enhanced exceptions & messages

---
 CHANGELOG.md |  4 ++++
 index.js     | 31 ++++++++++++-------------------
 package.json |  3 ++-
 3 files changed, 18 insertions(+), 20 deletions(-)
 mode change 100755 => 100644 package.json

diff --git a/CHANGELOG.md b/CHANGELOG.md
index f742e9c..5f499ab 100755
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,3 +1,7 @@
+# 2.1.0 - 2014-11-25
+
+- Enhanced exceptions & messages
+
 # 2.0.0 - 2014-11-12
 
 - Upgrade to postcss 3
diff --git a/index.js b/index.js
index 9a2083d..902f897 100755
--- a/index.js
+++ b/index.js
@@ -3,6 +3,7 @@
  */
 
 var balanced = require("balanced-match")
+var helpers = require("postcss-message-helpers")
 
 /**
  * Constants.
@@ -36,7 +37,7 @@ module.exports = function(options) {
         rule.each(function(decl) {
           var prop = decl.prop
           if (prop && prop.indexOf(VAR_PROP_IDENTIFIER) === 0) {
-            console.warn(gnuMessage("Custom property ignored: not scoped to the top-level :root element (" +  rule.selectors + " { ... " + prop + ": ... })" + (rule.parent.type !== "root" ? ", in " + rule.parent.type : "")))
+            console.warn(helpers.message("Custom property ignored: not scoped to the top-level :root element (" +  rule.selectors + " { ... " + prop + ": ... })" + (rule.parent.type !== "root" ? ", in " + rule.parent.type : ""), decl.source))
           }
         })
         return
@@ -80,11 +81,13 @@ module.exports = function(options) {
         return
       }
 
-      resolveValue(value, map, decl.source).forEach(function(resolvedValue) {
-        var clone = decl.clone()
-        clone.value = resolvedValue
-        decl.parent.insertBefore(decl, clone)
-      })
+      helpers.try(function resolve() {
+        resolveValue(value, map, decl.source).forEach(function(resolvedValue) {
+          var clone = decl.clone()
+          clone.value = resolvedValue
+          decl.parent.insertBefore(decl, clone)
+        })
+      }, decl.source)
 
       if (!preserve) {
         decl.removeSelf()
@@ -119,17 +122,17 @@ function resolveValue(value, variables, source) {
   var matches = balanced("(", ")", value.substring(start))
 
   if (!matches) {
-    throw new SyntaxError(gnuMessage("missing closing ')' in the value '" + value + "'", source))
+    throw new SyntaxError("missing closing ')' in the value '" + value + "'")
   }
 
   if (matches.body === "") {
-    throw new Error(gnuMessage("var() must contain a non-whitespace string", source))
+    throw new Error("var() must contain a non-whitespace string")
   }
 
   matches.body.replace(RE_VAR, function(_, name, fallback) {
     var replacement = variables[name]
     if (!replacement && !fallback) {
-      console.warn(gnuMessage("variable '" + name + "' is undefined and used without a fallback", source))
+      console.warn(helpers.message("variable '" + name + "' is undefined and used without a fallback", source))
     }
 
     // prepend with fallbacks
@@ -165,13 +168,3 @@ function resolveValue(value, variables, source) {
 
   return results
 }
-
-/**
- * return GNU style message
- *
- * @param {String} message
- * @param {Object} source
- */
-function gnuMessage(message, source) {
-  return (source ? (source.file ? source.file : "<css input>") + ":" + source.start.line + ":" + source.start.column + " " : "") + message
-}
diff --git a/package.json b/package.json
old mode 100755
new mode 100644
index 0ced6eb..e9d1397
--- a/package.json
+++ b/package.json
@@ -22,7 +22,8 @@
     "index.js"
   ],
   "dependencies": {
-    "balanced-match": "~0.1.0"
+    "balanced-match": "~0.1.0",
+    "postcss-message-helpers": "^1.1.0"
   },
   "devDependencies": {
     "jscs": "^1.6.2",
-- 
2.33.1

