From 4dbb3fcff8d4154587ed1b8d631df06161804711 Mon Sep 17 00:00:00 2001
From: bendobos <bendobos1@gmail.com>
Date: Fri, 18 Sep 2020 10:05:25 +0200
Subject: [PATCH 164/186] Export to SCSS file (#212)

---
 .tape.js                                      | 16 ++++++++++++++++
 README.md                                     |  5 +++--
 src/lib/write-custom-properties-to-exports.js | 19 +++++++++++++++++++
 test/export-properties.scss                   | 10 ++++++++++
 4 files changed, 48 insertions(+), 2 deletions(-)
 create mode 100644 test/export-properties.scss

diff --git a/.tape.js b/.tape.js
index c25b101..05f5597 100644
--- a/.tape.js
+++ b/.tape.js
@@ -176,6 +176,22 @@ module.exports = {
 		expect: 'basic.expect.css',
 		result: 'basic.result.css'
 	},
+	'basic:export-scss': {
+		message: 'supports { exportTo: "test/export-properties.scss" } usage',
+		options: {
+			exportTo: 'test/export-properties.scss'
+		},
+		expect: 'basic.expect.css',
+		result: 'basic.result.css',
+		before() {
+			global.__exportPropertiesString = require('fs').readFileSync('test/export-properties.scss', 'utf8');
+		},
+		after() {
+			if (global.__exportPropertiesString !== require('fs').readFileSync('test/export-properties.scss', 'utf8')) {
+				throw new Error('The original file did not match the freshly exported copy');
+			}
+		}
+	},
 	'basic:export-json': {
 		message: 'supports { exportTo: "test/export-properties.json" } usage',
 		options: {
diff --git a/README.md b/README.md
index d1d83b7..a327642 100755
--- a/README.md
+++ b/README.md
@@ -171,6 +171,7 @@ postcssCustomProperties({
     'and/then/this.js',   // module.exports = { customProperties: { '--color': 'red' } }
     'and/then/this.mjs',  // export const customProperties = { '--color': 'red' } }
     'and/then/that.json', // { "custom-properties": { "--color": "red" } }
+    'and/then/that.scss', // $color: red;
     cachedObject,
     customProperties => {
       customProperties    // { '--color': 'red' }
@@ -180,8 +181,8 @@ postcssCustomProperties({
 ```
 
 See example exports written to [CSS](test/export-properties.css),
-[JS](test/export-properties.js), [MJS](test/export-properties.mjs), and
-[JSON](test/export-properties.json).
+[JS](test/export-properties.js), [MJS](test/export-properties.mjs),
+[JSON](test/export-properties.json) and [SCSS](test/export-properties.scss).
 
 [cli-img]: https://img.shields.io/travis/postcss/postcss-custom-properties/master.svg
 [cli-url]: https://travis-ci.org/postcss/postcss-custom-properties
diff --git a/src/lib/write-custom-properties-to-exports.js b/src/lib/write-custom-properties-to-exports.js
index b67c5ee..e386452 100644
--- a/src/lib/write-custom-properties-to-exports.js
+++ b/src/lib/write-custom-properties-to-exports.js
@@ -15,6 +15,21 @@ async function writeCustomPropertiesToCssFile(to, customProperties) {
 	await writeFile(to, css);
 }
 
+/* Write Custom Properties to SCSS File
+/* ========================================================================== */
+
+async function writeCustomPropertiesToScssFile(to, customProperties) {
+	const scssContent = Object.keys(customProperties).reduce((scssLines, name) => {
+		const scssName = name.replace('--', '$');
+		scssLines.push(`${scssName}: ${customProperties[name]};`);
+
+		return scssLines;
+	}, []).join('\n');
+	const scss = `${scssContent}\n`;
+
+	await writeFile(to, scss);
+}
+
 /* Write Custom Properties to JSON file
 /* ========================================================================== */
 
@@ -89,6 +104,10 @@ export default function writeCustomPropertiesToExports(customProperties, destina
 					await writeCustomPropertiesToCssFile(to, customPropertiesJSON);
 				}
 
+				if (type === 'scss') {
+					await writeCustomPropertiesToScssFile(to, customPropertiesJSON);
+				}
+
 				if (type === 'js') {
 					await writeCustomPropertiesToCjsFile(to, customPropertiesJSON);
 				}
diff --git a/test/export-properties.scss b/test/export-properties.scss
new file mode 100644
index 0000000..ec34e80
--- /dev/null
+++ b/test/export-properties.scss
@@ -0,0 +1,10 @@
+$ref-color: var(--color);
+$color: rgb(255, 0, 0);
+$color-h: 0;
+$color-s: 100%;
+$color-l: 50%;
+$color-hsl: hsl(var(--color-h), var(--color-s), var(--color-l));
+$circular: var(--circular-2);
+$circular-2: var(--circular);
+$margin: 0 10px 20px 30px;
+$theme-color: #053;
-- 
2.33.1

