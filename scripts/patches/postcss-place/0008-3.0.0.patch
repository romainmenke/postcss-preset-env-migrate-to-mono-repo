From 55bcbd92fef8dd19bfb9ed129d10e0e70101f54f Mon Sep 17 00:00:00 2001
From: Jonathan Neal <jonathantneal@hotmail.com>
Date: Tue, 8 May 2018 01:36:11 -0400
Subject: [PATCH 08/26] 3.0.0

---
 .appveyor.yml                        |  18 +++
 .editorconfig                        |  15 +++
 .gitignore                           |  13 +-
 .rollup.js                           |  16 +++
 .tape.js                             |   6 +
 CHANGELOG.md                         |   7 +-
 CONTRIBUTING.md                      |  79 +++++------
 LICENSE.md                           | 138 +++++++++----------
 README.md                            | 190 ++++++++++++++++++---------
 index.js                             |  40 +++---
 package.json                         |  52 ++++----
 test/basic.expect.css                |  12 ++
 test/basic.preserve-false.expect.css |  35 +++++
 13 files changed, 396 insertions(+), 225 deletions(-)
 create mode 100644 .appveyor.yml
 create mode 100644 .editorconfig
 create mode 100644 .rollup.js
 create mode 100644 test/basic.preserve-false.expect.css

diff --git a/.appveyor.yml b/.appveyor.yml
new file mode 100644
index 0000000..acbf8a5
--- /dev/null
+++ b/.appveyor.yml
@@ -0,0 +1,18 @@
+# https://www.appveyor.com/docs/appveyor-yml
+
+environment:
+  matrix:
+    - nodejs_version: 4
+
+version: "{build}"
+build: off
+deploy: off
+
+install:
+  - ps: Install-Product node $env:nodejs_version
+  - npm install --ignore-scripts
+
+test_script:
+  - node --version
+  - npm --version
+  - cmd: "npm test"
diff --git a/.editorconfig b/.editorconfig
new file mode 100644
index 0000000..e06d798
--- /dev/null
+++ b/.editorconfig
@@ -0,0 +1,15 @@
+root = true
+
+[*]
+charset = utf-8
+end_of_line = lf
+indent_style = tab
+insert_final_newline = true
+trim_trailing_whitespace = true
+
+[*.md]
+trim_trailing_whitespace = false
+
+[*.{json,md,yml}]
+indent_size = 2
+indent_style = space
diff --git a/.gitignore b/.gitignore
index 091413e..de73e5a 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,3 +1,12 @@
 node_modules
-npm-debug.log
-test/*.result.css
+index.*.js
+package-lock.json
+*.log*
+*.result.css
+.*
+!.appveyor.yml
+!.editorconfig
+!.gitignore
+!.rollup.js
+!.tape.js
+!.travis.yml
diff --git a/.rollup.js b/.rollup.js
new file mode 100644
index 0000000..0436758
--- /dev/null
+++ b/.rollup.js
@@ -0,0 +1,16 @@
+import babel from 'rollup-plugin-babel';
+
+export default {
+	input: 'index.js',
+	output: [
+		{ file: 'index.cjs.js', format: 'cjs' },
+		{ file: 'index.es.js', format: 'es' }
+	],
+	plugins: [
+		babel({
+			presets: [
+				['env', { modules: false, targets: { node: 4 } }]
+			]
+		})
+	]
+};
diff --git a/.tape.js b/.tape.js
index 44e3eb5..a8cc739 100644
--- a/.tape.js
+++ b/.tape.js
@@ -2,6 +2,12 @@ module.exports = {
 	'postcss-place': {
 		'basic': {
 			message: 'supports basic usage'
+		},
+		'basic:preserve-false': {
+			message: 'supports { preserve: false } usage',
+			options: {
+				preserve: false
+			}
 		}
 	}
 };
diff --git a/CHANGELOG.md b/CHANGELOG.md
index 3ab2300..9b11bd5 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,4 +1,9 @@
-# Changes to Place
+# Changes to PostCSS Place Properties
+
+### 3.0.0 (May 8, 2018)
+
+- Updated: `postcss-selector-parser` to v4.0.0 (major)
+- Updated: `postcss` to v6.0.22 (patch)
 
 ### 2.0.0 (June 30, 2017)
 
diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
index 5e65704..3b65d9b 100644
--- a/CONTRIBUTING.md
+++ b/CONTRIBUTING.md
@@ -1,4 +1,4 @@
-# Contributing to Place
+# Contributing to PostCSS Place Properties
 
 You want to help? You rock! Now, take a moment to be sure your contributions
 make sense to everyone else.
@@ -14,51 +14,52 @@ Remember, a bug is a _demonstrable problem_ caused by _our_ code.
 
 ## Submitting Pull Requests
 
-Pull requests are the greatest contributions, so be sure they are focused in 
-scope, and do avoid unrelated commits.
+Pull requests are the greatest contributions, so be sure they are focused in
+scope and avoid unrelated commits.
 
-1. To begin, [fork this project], clone your fork, and add our upstream.
-	```bash
-	# Clone your fork of the repo into the current directory
-	git clone https://github.com/<your-username>/postcss-place
-	# Navigate to the newly cloned directory
-	cd postcss-place
-	# Assign the original repo to a remote called "upstream"
-	git remote add upstream https://github.com/jonathantneal/postcss-place
-	# Install the tools necessary for development
-	npm install
-	```
+1. To begin; [fork this project], clone your fork, and add our upstream.
+   ```bash
+   # Clone your fork of the repo into the current directory
+   git clone git@github.com:YOUR_USER/postcss-place.git
 
-2. Create a branch for your feature or fix:
-	```bash
-	# Move into a new branch for a feature
-	git checkout -b feature/thing
-	```
-	```bash
-	# Move into a new branch for a fix
-	git checkout -b fix/something
-	```
+   # Navigate to the newly cloned directory
+   cd postcss-place
+
+   # Assign the original repo to a remote called "upstream"
+   git remote add upstream git@github.com:jonathantneal/postcss-place.git
 
-3. Be sure your code follows our practices.
-	```bash
-	# Test current code
-	npm run test
-	```
+   # Install the tools necessary for testing
+   npm install
+   ```
+
+2. Create a branch for your feature or fix:
+   ```bash
+   # Move into a new branch for your feature
+   git checkout -b feature/thing
+   ```
+   ```bash
+   # Move into a new branch for your fix
+   git checkout -b fix/something
+   ```
 
-4. Push your branch up to your fork:
-	```bash
-	# Push a feature branch
-	git push origin feature/thing
-	```
-	```bash
-	# Push a fix branch
-	git push origin fix/something
-	```
+3. If your code follows our practices, then push your feature branch:
+   ```bash
+   # Test current code
+   npm test
+   ```
+   ```bash
+   # Push the branch for your new feature
+   git push origin feature/thing
+   ```
+   ```bash
+   # Or, push the branch for your update
+   git push origin update/something
+   ```
 
-5. Now [open a pull request] with a clear title and description.
+That’s it! Now [open a pull request] with a clear title and description.
 
 [already been reported]: issues
 [fork this project]:     fork
-[live example]:          http://codepen.io/pen
+[live example]:          https://codepen.io/pen
 [open a pull request]:   https://help.github.com/articles/using-pull-requests/
 [reduced test case]:     https://css-tricks.com/reduced-test-cases/
diff --git a/LICENSE.md b/LICENSE.md
index 34f902f..0bc1fa7 100644
--- a/LICENSE.md
+++ b/LICENSE.md
@@ -27,80 +27,82 @@ Copyright and Related Rights in the Work and the meaning and intended legal
 effect of CC0 on those rights.
 
 1. Copyright and Related Rights. A Work made available under CC0 may be
-	 protected by copyright and related or neighboring rights (“Copyright and
-	 Related Rights”). Copyright and Related Rights include, but are not limited
-	 to, the following:
-	1. the right to reproduce, adapt, distribute, perform, display,
-		 communicate, and translate a Work;
-	2. moral rights retained by the original author(s) and/or performer(s);
-	3. publicity and privacy rights pertaining to a person’s image or likeness
-		 depicted in a Work;
-	4. rights protecting against unfair competition in regards to a Work,
-		 subject to the limitations in paragraph 4(i), below;
-	5. rights protecting the extraction, dissemination, use and reuse of data
-		 in a Work;
-	6. database rights (such as those arising under Directive 96/9/EC of the
-		 European Parliament and of the Council of 11 March 1996 on the legal
-		 protection of databases, and under any national implementation thereof,
-		 including any amended or successor version of such directive); and
-	7. other similar, equivalent or corresponding rights throughout the world
-		 based on applicable law or treaty, and any national implementations
-		 thereof.
+   protected by copyright and related or neighboring rights (“Copyright and
+   Related Rights”). Copyright and Related Rights include, but are not limited
+   to, the following:
+   1. the right to reproduce, adapt, distribute, perform, display, communicate,
+      and translate a Work;
+   2. moral rights retained by the original author(s) and/or performer(s);
+   3. publicity and privacy rights pertaining to a person’s image or likeness
+      depicted in a Work;
+   4. rights protecting against unfair competition in regards to a Work,
+      subject to the limitations in paragraph 4(i), below;
+   5. rights protecting the extraction, dissemination, use and reuse of data in
+      a Work;
+   6. database rights (such as those arising under Directive 96/9/EC of the
+      European Parliament and of the Council of 11 March 1996 on the legal
+      protection of databases, and under any national implementation thereof,
+      including any amended or successor version of such directive); and
+   7. other similar, equivalent or corresponding rights throughout the world
+      based on applicable law or treaty, and any national implementations
+      thereof.
 
 2. Waiver. To the greatest extent permitted by, but not in contravention of,
-applicable law, Affirmer hereby overtly, fully, permanently, irrevocably and
-unconditionally waives, abandons, and surrenders all of Affirmer’s Copyright
-and Related Rights and associated claims and causes of action, whether now
-known or unknown (including existing as well as future claims and causes of
-action), in the Work (i) in all territories worldwide, (ii) for the maximum
-duration provided by applicable law or treaty (including future time
-extensions), (iii) in any current or future medium and for any number of
-copies, and (iv) for any purpose whatsoever, including without limitation
-commercial, advertising or promotional purposes (the “Waiver”). Affirmer makes
-the Waiver for the benefit of each member of the public at large and to the
-detriment of Affirmer’s heirs and successors, fully intending that such Waiver
-shall not be subject to revocation, rescission, cancellation, termination, or
-any other legal or equitable action to disrupt the quiet enjoyment of the Work
-by the public as contemplated by Affirmer’s express Statement of Purpose.
+   applicable law, Affirmer hereby overtly, fully, permanently, irrevocably and
+   unconditionally waives, abandons, and surrenders all of Affirmer’s Copyright
+   and Related Rights and associated claims and causes of action, whether now
+   known or unknown (including existing as well as future claims and causes of
+   action), in the Work (i) in all territories worldwide, (ii) for the maximum
+   duration provided by applicable law or treaty (including future time
+   extensions), (iii) in any current or future medium and for any number of
+   copies, and (iv) for any purpose whatsoever, including without limitation
+   commercial, advertising or promotional purposes (the “Waiver”). Affirmer
+   makes the Waiver for the benefit of each member of the public at large and
+   to the detriment of Affirmer’s heirs and successors, fully intending that
+   such Waiver shall not be subject to revocation, rescission, cancellation,
+   termination, or any other legal or equitable action to disrupt the quiet
+   enjoyment of the Work by the public as contemplated by Affirmer’s express
+   Statement of Purpose.
 
 3. Public License Fallback. Should any part of the Waiver for any reason be
-judged legally invalid or ineffective under applicable law, then the Waiver
-shall be preserved to the maximum extent permitted taking into account
-Affirmer’s express Statement of Purpose. In addition, to the extent the Waiver
-is so judged Affirmer hereby grants to each affected person a royalty-free, non
-transferable, non sublicensable, non exclusive, irrevocable and unconditional
-license to exercise Affirmer’s Copyright and Related Rights in the Work (i) in
-all territories worldwide, (ii) for the maximum duration provided by applicable
-law or treaty (including future time extensions), (iii) in any current or
-future medium and for any number of copies, and (iv) for any purpose
-whatsoever, including without limitation commercial, advertising or promotional
-purposes (the “License”). The License shall be deemed effective as of the date
-CC0 was applied by Affirmer to the Work. Should any part of the License for any
-reason be judged legally invalid or ineffective under applicable law, such
-partial invalidity or ineffectiveness shall not invalidate the remainder of the
-License, and in such case Affirmer hereby affirms that he or she will not (i)
-exercise any of his or her remaining Copyright and Related Rights in the Work
-or (ii) assert any associated claims and causes of action with respect to the
-Work, in either case contrary to Affirmer’s express Statement of Purpose.
+   judged legally invalid or ineffective under applicable law, then the Waiver
+   shall be preserved to the maximum extent permitted taking into account
+   Affirmer’s express Statement of Purpose. In addition, to the extent the
+   Waiver is so judged Affirmer hereby grants to each affected person a
+   royalty-free, non transferable, non sublicensable, non exclusive,
+   irrevocable and unconditional license to exercise Affirmer’s Copyright and
+   Related Rights in the Work (i) in all territories worldwide, (ii) for the
+   maximum duration provided by applicable law or treaty (including future time
+   extensions), (iii) in any current or future medium and for any number of
+   copies, and (iv) for any purpose whatsoever, including without limitation
+   commercial, advertising or promotional purposes (the “License”). The License
+   shall be deemed effective as of the date CC0 was applied by Affirmer to the
+   Work. Should any part of the License for any reason be judged legally
+   invalid or ineffective under applicable law, such partial invalidity or
+   ineffectiveness shall not invalidate the remainder of the License, and in
+   such case Affirmer hereby affirms that he or she will not (i) exercise any
+   of his or her remaining Copyright and Related Rights in the Work or (ii)
+   assert any associated claims and causes of action with respect to the Work,
+   in either case contrary to Affirmer’s express Statement of Purpose.
 
 4. Limitations and Disclaimers.
-		1. No trademark or patent rights held by Affirmer are waived, abandoned,
-			 surrendered, licensed or otherwise affected by this document.
-		2. Affirmer offers the Work as-is and makes no representations or
-			 warranties of any kind concerning the Work, express, implied, statutory
-			 or otherwise, including without limitation warranties of title,
-			 merchantability, fitness for a particular purpose, non infringement, or
-			 the absence of latent or other defects, accuracy, or the present or
-			 absence of errors, whether or not discoverable, all to the greatest
-			 extent permissible under applicable law.
-		3. Affirmer disclaims responsibility for clearing rights of other persons
-			 that may apply to the Work or any use thereof, including without
-			 limitation any person’s Copyright and Related Rights in the Work.
-			 Further, Affirmer disclaims responsibility for obtaining any necessary
-			 consents, permissions or other rights required for any use of the Work.
-		4. Affirmer understands and acknowledges that Creative Commons is not a
-			 party to this document and has no duty or obligation with respect to
-			 this CC0 or use of the Work.
+   1. No trademark or patent rights held by Affirmer are waived, abandoned,
+      surrendered, licensed or otherwise affected by this document.
+   2. Affirmer offers the Work as-is and makes no representations or warranties
+      of any kind concerning the Work, express, implied, statutory or
+      otherwise, including without limitation warranties of title,
+      merchantability, fitness for a particular purpose, non infringement, or
+      the absence of latent or other defects, accuracy, or the present or
+      absence of errors, whether or not discoverable, all to the greatest
+      extent permissible under applicable law.
+   3. Affirmer disclaims responsibility for clearing rights of other persons
+      that may apply to the Work or any use thereof, including without
+      limitation any person’s Copyright and Related Rights in the Work.
+      Further, Affirmer disclaims responsibility for obtaining any necessary
+      consents, permissions or other rights required for any use of the Work.
+   4. Affirmer understands and acknowledges that Creative Commons is not a
+      party to this document and has no duty or obligation with respect to this
+      CC0 or use of the Work.
 
 For more information, please see
 http://creativecommons.org/publicdomain/zero/1.0/.
diff --git a/README.md b/README.md
index 191d189..18052c2 100644
--- a/README.md
+++ b/README.md
@@ -1,52 +1,48 @@
-# Place <a href="https://github.com/postcss/postcss"><img src="https://postcss.github.io/postcss/logo.svg" alt="PostCSS Logo" width="90" height="90" align="right"></a>
+# PostCSS Place Properties [<img src="https://postcss.github.io/postcss/logo.svg" alt="PostCSS Logo" width="90" height="90" align="right">][postcss]
 
 [![NPM Version][npm-img]][npm-url]
+[![CSS Standard Status][css-img]][css-url]
 [![Build Status][cli-img]][cli-url]
-[![Licensing][lic-image]][lic-url]
-[![Changelog][log-image]][log-url]
-[![Gitter Chat][git-image]][git-url]
+[![Windows Build Status][win-img]][win-url]
+[![Support Chat][git-img]][git-url]
 
-[Place] lets you use `place-*` properties as shorthands for `align-*` and `justify-*` per the [CSS Box Alignment Module Level 3].
-
-```css
-/* before */
+[PostCSS Place Properties] lets you use `place-*` properties as shorthands for `align-*`
+and `justify-*`, following the [CSS Box Alignment] specification.
 
+```pcss
 .example {
-	place-self: center;
-	place-content: space-between center;
+  place-self: center;
+  place-content: space-between center;
 }
 
-/* after */
+/* becomes */
 
 .example {
-	align-self: center;
-	justify-self: center;
-	align-content: space-between;
-	justify-content: center;
+  align-self: center;
+  justify-self: center;
+  place-self: center;
+  align-content: space-between;
+  justify-content: center;
+  place-content: space-between center;
 }
 ```
 
-## Options
-
-#### `prefix`
-
-Type: `String`  
-Default: `null`
-
-Specifies a prefix to be surrounded by dashes before the declaration (e.g. `prefix: 'x'` changes the detected property to `-x-place-content`).
-
 ## Usage
 
-Add [Place] to your build tool:
+Add [PostCSS Place Properties] to your build tool:
 
 ```bash
-npm install jonathantneal/postcss-place --save-dev
+npm install postcss-place --save-dev
 ```
 
 #### Node
 
+Use [PostCSS Place Properties] to process your CSS:
+
 ```js
-require('postcss-place').process(YOUR_CSS, { /* options */ });
+import postcssPlace from 'postcss-place';
+
+postcssPlace.process(YOUR_CSS, /* processOptions */, /* pluginOptions */);
 ```
 
 #### PostCSS
@@ -57,12 +53,49 @@ Add [PostCSS] to your build tool:
 npm install postcss --save-dev
 ```
 
-Load [Place] as a PostCSS plugin:
+Use [PostCSS Place Properties] as a plugin:
 
 ```js
+import postcss from 'gulp-postcss';
+import postcssPlace from 'postcss-place';
+
 postcss([
-	require('postcss-place')({ /* options */ })
-]).process(YOUR_CSS, /* options */);
+  postcssPlace(/* pluginOptions */)
+]).process(YOUR_CSS);
+```
+
+#### Webpack
+
+Add [PostCSS Loader] to your build tool:
+
+```bash
+npm install postcss-loader --save-dev
+```
+
+Use [PostCSS Place Properties] in your Webpack configuration:
+
+```js
+import postcssPlace from 'postcss-place';
+
+module.exports = {
+  module: {
+    rules: [
+      {
+        test: /\.css$/,
+        use: [
+          'style-loader',
+          { loader: 'css-loader', options: { importLoaders: 1 } },
+          { loader: 'postcss-loader', options: {
+            ident: 'postcss',
+            plugins: () => [
+              postcssPlace(/* pluginOptions */)
+            ]
+          } }
+        ]
+      }
+    ]
+  }
+}
 ```
 
 #### Gulp
@@ -73,20 +106,19 @@ Add [Gulp PostCSS] to your build tool:
 npm install gulp-postcss --save-dev
 ```
 
-Enable [Place] within your Gulpfile:
+Use [PostCSS Place Properties] in your Gulpfile:
 
 ```js
-var postcss = require('gulp-postcss');
-
-gulp.task('css', function () {
-	return gulp.src('./src/*.css').pipe(
-		postcss([
-			require('postcss-place')({ /* options */ })
-		])
-	).pipe(
-		gulp.dest('.')
-	);
-});
+import postcss from 'gulp-postcss';
+import postcssPlace from 'postcss-place';
+
+gulp.task('css', () => gulp.src('./src/*.css').pipe(
+  postcss([
+    postcssPlace(/* pluginOptions */)
+  ])
+).pipe(
+  gulp.dest('.')
+));
 ```
 
 #### Grunt
@@ -97,38 +129,68 @@ Add [Grunt PostCSS] to your build tool:
 npm install grunt-postcss --save-dev
 ```
 
-Enable [Place] within your Gruntfile:
+Use [PostCSS Place Properties] in your Gruntfile:
 
 ```js
+import postcssPlace from 'postcss-place';
+
 grunt.loadNpmTasks('grunt-postcss');
 
 grunt.initConfig({
-	postcss: {
-		options: {
-			use: [
-				require('postcss-place')({ /* options */ })
-			]
-		},
-		dist: {
-			src: '*.css'
-		}
-	}
+  postcss: {
+    options: {
+      use: [
+       postcssPlace(/* pluginOptions */)
+      ]
+    },
+    dist: {
+      src: '*.css'
+    }
+  }
 });
 ```
 
-[npm-url]: https://www.npmjs.com/package/postcss-place
-[npm-img]: https://img.shields.io/npm/v/postcss-place.svg
-[cli-url]: https://travis-ci.org/jonathantneal/postcss-place
+## Options
+
+### preserve
+
+The `preserve` option determines whether the original place declaration is
+preserved. By default, it is preserved.
+
+```js
+postcssPlace({ preserve: false })
+```
+
+```pcss
+.example {
+  place-self: center;
+  place-content: space-between center;
+}
+
+/* becomes */
+
+.example {
+  align-self: center;
+  justify-self: center;
+  align-content: space-between;
+  justify-content: center;
+}
+```
+
 [cli-img]: https://img.shields.io/travis/jonathantneal/postcss-place.svg
-[lic-url]: LICENSE.md
-[lic-image]: https://img.shields.io/npm/l/postcss-place.svg
-[log-url]: CHANGELOG.md
-[log-image]: https://img.shields.io/badge/changelog-md-blue.svg
+[cli-url]: https://travis-ci.org/jonathantneal/postcss-place
+[css-img]: https://cssdb.org/badge/place-properties.svg
+[css-url]: https://cssdb.org/#place-properties
+[git-img]: https://img.shields.io/badge/support-chat-blue.svg
 [git-url]: https://gitter.im/postcss/postcss
-[git-image]: https://img.shields.io/badge/chat-gitter-blue.svg
+[npm-img]: https://img.shields.io/npm/v/postcss-place.svg
+[npm-url]: https://www.npmjs.com/package/postcss-place
+[win-img]: https://img.shields.io/appveyor/ci/jonathantneal/postcss-place.svg
+[win-url]: https://ci.appveyor.com/project/jonathantneal/postcss-place
 
-[Place]: https://github.com/jonathantneal/postcss-place
-[CSS Box Alignment Module Level 3]: https://drafts.csswg.org/css-align/#propdef-place-content
-[PostCSS]: https://github.com/postcss/postcss
+[CSS Box Alignment]: https://www.w3.org/TR/css-align-3/#place-content
 [Gulp PostCSS]: https://github.com/postcss/gulp-postcss
 [Grunt PostCSS]: https://github.com/nDmitry/grunt-postcss
+[PostCSS]: https://github.com/postcss/postcss
+[PostCSS Loader]: https://github.com/postcss/postcss-loader
+[PostCSS Place Properties]: https://github.com/jonathantneal/postcss-place
diff --git a/index.js b/index.js
index 364fb36..6f9be9e 100644
--- a/index.js
+++ b/index.js
@@ -1,20 +1,17 @@
-// tooling
-const postcss = require('postcss');
-const parser  = require('postcss-value-parser');
+import postcss from 'postcss';
+import parser from 'postcss-value-parser';
 
-// plugin
-module.exports = postcss.plugin('postcss-place', (opts) => {
-	// dashed prefix
-	const dashedPrefix = opts && opts.prefix ? `-${ opts.prefix }-` : '';
+const placeMatch = /^place-(content|items|self)/;
 
-	// property matcher
-	const propertyMatch = new RegExp(`^${ dashedPrefix }place-(content|items|self)`);
+export default postcss.plugin('postcss-place', opts => {
+	// prepare options
+	const preserve = 'preserve' in Object(opts) ? Boolean(opts.prefix) : true;
 
-	return (root) => {
+	return root => {
 		// walk each matching declaration
-		root.walkDecls(propertyMatch, (decl) => {
+		root.walkDecls(placeMatch, decl => {
 			// alignment
-			const alignment = decl.prop.match(propertyMatch)[1];
+			const alignment = decl.prop.match(placeMatch)[1];
 
 			// value
 			const value = parser(decl.value);
@@ -25,28 +22,23 @@ module.exports = postcss.plugin('postcss-place', (opts) => {
 			).indexOf('space');
 
 			// new justify-[alignment] and align-[alignment] declarations
-			const alignValue   = index === -1 ? decl.value : parser.stringify(value.nodes.slice(0, index));
+			const alignValue = index === -1 ? decl.value : parser.stringify(value.nodes.slice(0, index));
 			const justifyValue = index === -1 ? decl.value : parser.stringify(value.nodes.slice(index + 1));
 
 			decl.cloneBefore({
-				prop: `align-${ alignment }`,
+				prop: `align-${alignment}`,
 				value: alignValue
 			});
 
 			decl.cloneBefore({
-				prop: `justify-${ alignment }`,
+				prop: `justify-${alignment}`,
 				value: justifyValue
 			});
 
-			// remove place-[alignment]
-			decl.remove();
+			// conditionally remove place-[alignment]
+			if (!preserve) {
+				decl.remove();
+			}
 		});
 	};
 });
-
-// override plugin#process
-module.exports.process = function (cssString, pluginOptions, processOptions) {
-	return postcss([
-		0 in arguments ? module.exports(pluginOptions) : module.exports()
-	]).process(cssString, processOptions);
-};
diff --git a/package.json b/package.json
index 8b12e48..e1480e3 100644
--- a/package.json
+++ b/package.json
@@ -1,49 +1,47 @@
 {
   "name": "postcss-place",
-  "version": "2.0.0",
-  "description": "`place-[alignment] shorthand for align-[alignment] and justify-[alignment]",
-  "author": "Jonathan Neal <jonathantneal@hotmail.com> (http://jonathantneal.com)",
+  "version": "3.0.0",
+  "description": "Use a place-* shorthand for align-* and justify-* in CSS",
+  "author": "Jonathan Neal <jonathantneal@hotmail.com>",
   "license": "CC0-1.0",
   "repository": "jonathantneal/postcss-place",
   "homepage": "https://github.com/jonathantneal/postcss-place#readme",
   "bugs": "https://github.com/jonathantneal/postcss-place/issues",
-  "main": "index.js",
+  "main": "index.cjs.js",
+  "module": "index.es.js",
   "files": [
-    "index.js"
+    "index.cjs.js",
+    "index.es.js"
   ],
   "scripts": {
-    "lint": "echint && eslint index.js && jscs index.js",
-    "prepublish": "npm test",
-    "tape": "postcss-tape",
-    "test": "npm run lint && postcss-tape"
+    "prepublishOnly": "npm test",
+    "pretest": "rollup -c .rollup.js --silent",
+    "test": "echo 'Running tests...'; npm run test:js && npm run test:tape",
+    "test:ec": "echint --ignore index.*.js test",
+    "test:js": "eslint *.js --cache --ignore-path .gitignore --quiet",
+    "test:tape": "postcss-tape"
   },
   "engines": {
-    "node": ">=6.9.1"
+    "node": ">=4.0.0"
   },
   "dependencies": {
-    "postcss": "^6.0.4",
+    "postcss": "^6.0.22",
     "postcss-value-parser": "^3.3.0"
   },
   "devDependencies": {
-    "echint": "^4.0.1",
-    "echint-config-dev": "1.0.0",
-    "eslint": "^4.1.1",
-    "eslint-config-dev": "2.0.0",
-    "jscs": "^3.0.7",
-    "jscs-config-dev": "1.0.1",
-    "postcss-tape": "2.0.1"
-  },
-  "echint": {
-    "extends": "dev"
+    "babel-core": "^6.26.3",
+    "babel-eslint": "^8.2.3",
+    "babel-preset-env": "^1.6.1",
+    "eslint": "^4.19.1",
+    "eslint-config-dev": "^2.0.0",
+    "postcss-tape": "^2.2.0",
+    "pre-commit": "^1.2.2",
+    "rollup": "^0.58.2",
+    "rollup-plugin-babel": "^3.0.4"
   },
   "eslintConfig": {
     "extends": "dev",
-    "parserOptions": {
-      "sourceType": "module"
-    }
-  },
-  "jscsConfig": {
-    "preset": "dev"
+    "parser": "babel-eslint"
   },
   "keywords": [
     "postcss",
diff --git a/test/basic.expect.css b/test/basic.expect.css
index 92214f4..f94f52a 100644
--- a/test/basic.expect.css
+++ b/test/basic.expect.css
@@ -1,35 +1,47 @@
 a {
 	align-content: first;
 	justify-content: second;
+	place-content: first second;
 	align-items: first;
 	justify-items: second;
+	place-items: first second;
 	align-self: first;
 	justify-self: second;
+	place-self: first second;
 }
 
 b {
 	align-content: first;
 	justify-content: first;
+	place-content: first;
 	align-items: first;
 	justify-items: first;
+	place-items: first;
 	align-self: first;
 	justify-self: first;
+	place-self: first;
 }
 
 c {
 	align-content: var(--first);
 	justify-content: second;
+	place-content: var(--first) second;
 	align-items: var(--first);
 	justify-items: second;
+	place-items: var(--first) second;
 	align-self: var(--first);
 	justify-self: second;
+	place-self: var(--first) second;
 }
 
 d {
 	align-content: first;
 	justify-content: var(--second);
+	place-content: first var(--second);
 	align-items: first;
 	justify-items: var(--second);
+	place-items: first var(--second);
 	align-self: first;
 	justify-self: var(--second);
+	place-self: first var(--second);
 }
diff --git a/test/basic.preserve-false.expect.css b/test/basic.preserve-false.expect.css
new file mode 100644
index 0000000..92214f4
--- /dev/null
+++ b/test/basic.preserve-false.expect.css
@@ -0,0 +1,35 @@
+a {
+	align-content: first;
+	justify-content: second;
+	align-items: first;
+	justify-items: second;
+	align-self: first;
+	justify-self: second;
+}
+
+b {
+	align-content: first;
+	justify-content: first;
+	align-items: first;
+	justify-items: first;
+	align-self: first;
+	justify-self: first;
+}
+
+c {
+	align-content: var(--first);
+	justify-content: second;
+	align-items: var(--first);
+	justify-items: second;
+	align-self: var(--first);
+	justify-self: second;
+}
+
+d {
+	align-content: first;
+	justify-content: var(--second);
+	align-items: first;
+	justify-items: var(--second);
+	align-self: first;
+	justify-self: var(--second);
+}
-- 
2.33.1

