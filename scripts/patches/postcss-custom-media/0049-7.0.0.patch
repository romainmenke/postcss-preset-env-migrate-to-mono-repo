From b7806565adab9093eb3f9ea67ad85d659ab88373 Mon Sep 17 00:00:00 2001
From: Jonathan Neal <jonathantneal@hotmail.com>
Date: Thu, 13 Sep 2018 21:35:17 -0400
Subject: [PATCH 49/62] 7.0.0

---
 .editorconfig                                 |   13 +-
 .gitignore                                    |   11 +-
 .rollup.js                                    |   19 +
 .tape.js                                      |    7 +
 .travis.yml                                   |   11 +-
 CHANGELOG.md                                  |   34 +-
 CONTRIBUTING.md                               |   65 +
 INSTALL.md                                    |  170 ++
 LICENSE => LICENSE.md                         |   21 +-
 README.md                                     |  160 +-
 index.js                                      |  163 +-
 lib/custom-media-from-root.js                 |   34 +
 lib/export-to.js                              |  129 ++
 lib/import-from.js                            |  120 +
 lib/media-ast-from-string.js                  |  134 ++
 lib/transform-atrules.js                      |   21 +
 lib/transform-params-by-custom-params.js      |   62 +
 package-lock.json                             | 2035 -----------------
 package.json                                  |   73 +-
 test/basic.css                                |   33 +
 test/basic.expect.css                         |   27 +
 test/fixtures/append.css                      |    3 -
 test/fixtures/append.expected.css             |    4 -
 test/fixtures/js-defined.css                  |   15 -
 test/fixtures/js-defined.expected.css         |   15 -
 test/fixtures/preserve.css                    |    4 -
 test/fixtures/preserve.expected.css           |    4 -
 test/fixtures/transform-all.css               |    8 -
 test/fixtures/transform-all.expected.css      |    7 -
 .../fixtures/transform-circular-reference.css |   16 -
 .../transform-circular-reference.expected.css |    1 -
 test/fixtures/transform-reference.css         |    8 -
 .../fixtures/transform-reference.expected.css |    7 -
 test/fixtures/transform-self-reference.css    |    9 -
 .../transform-self-reference.expected.css     |    1 -
 test/fixtures/transform.css                   |   16 -
 test/fixtures/transform.expected.css          |   15 -
 test/fixtures/undefined.css                   |    5 -
 test/fixtures/undefined.expected.css          |    1 -
 test/index.js                                 |  117 -
 40 files changed, 1064 insertions(+), 2534 deletions(-)
 create mode 100644 .rollup.js
 create mode 100644 .tape.js
 create mode 100644 CONTRIBUTING.md
 create mode 100644 INSTALL.md
 rename LICENSE => LICENSE.md (51%)
 mode change 100755 => 100644
 create mode 100644 lib/custom-media-from-root.js
 create mode 100644 lib/export-to.js
 create mode 100644 lib/import-from.js
 create mode 100644 lib/media-ast-from-string.js
 create mode 100644 lib/transform-atrules.js
 create mode 100644 lib/transform-params-by-custom-params.js
 delete mode 100644 package-lock.json
 create mode 100644 test/basic.css
 create mode 100644 test/basic.expect.css
 delete mode 100644 test/fixtures/append.css
 delete mode 100644 test/fixtures/append.expected.css
 delete mode 100755 test/fixtures/js-defined.css
 delete mode 100755 test/fixtures/js-defined.expected.css
 delete mode 100644 test/fixtures/preserve.css
 delete mode 100644 test/fixtures/preserve.expected.css
 delete mode 100644 test/fixtures/transform-all.css
 delete mode 100644 test/fixtures/transform-all.expected.css
 delete mode 100644 test/fixtures/transform-circular-reference.css
 delete mode 100644 test/fixtures/transform-circular-reference.expected.css
 delete mode 100644 test/fixtures/transform-reference.css
 delete mode 100644 test/fixtures/transform-reference.expected.css
 delete mode 100644 test/fixtures/transform-self-reference.css
 delete mode 100644 test/fixtures/transform-self-reference.expected.css
 delete mode 100755 test/fixtures/transform.css
 delete mode 100755 test/fixtures/transform.expected.css
 delete mode 100755 test/fixtures/undefined.css
 delete mode 100755 test/fixtures/undefined.expected.css
 delete mode 100755 test/index.js

diff --git a/.editorconfig b/.editorconfig
index 8978b44..e06d798 100644
--- a/.editorconfig
+++ b/.editorconfig
@@ -1,16 +1,15 @@
-# editorconfig.org
 root = true
 
 [*]
-end_of_line = lf
 charset = utf-8
-trim_trailing_whitespace = true
+end_of_line = lf
+indent_style = tab
 insert_final_newline = true
-indent_style = space
-indent_size = 2
+trim_trailing_whitespace = true
 
 [*.md]
 trim_trailing_whitespace = false
 
-[Makefile]
-indent_style = tab
+[*.{json,md,yml}]
+indent_size = 2
+indent_style = space
diff --git a/.gitignore b/.gitignore
index 7ab649f..d920b78 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,2 +1,11 @@
 node_modules
-test/fixtures/*.actual.css
+index.*.*
+package-lock.json
+*.log*
+*.result.css
+.*
+!.editorconfig
+!.gitignore
+!.rollup.js
+!.tape.js
+!.travis.yml
diff --git a/.rollup.js b/.rollup.js
new file mode 100644
index 0000000..eab5c0d
--- /dev/null
+++ b/.rollup.js
@@ -0,0 +1,19 @@
+import babel from 'rollup-plugin-babel';
+
+export default {
+	input: 'index.js',
+	output: [
+		{ file: 'index.cjs.js', format: 'cjs' },
+		{ file: 'index.es.mjs', format: 'es' }
+	],
+	plugins: [
+		babel({
+			plugins: [
+				'@babel/plugin-syntax-dynamic-import'
+			],
+			presets: [
+				['@babel/env', { modules: false, targets: { node: 6 } }]
+			]
+		})
+	]
+};
diff --git a/.tape.js b/.tape.js
new file mode 100644
index 0000000..ee6d7a3
--- /dev/null
+++ b/.tape.js
@@ -0,0 +1,7 @@
+module.exports = {
+	'postcss-custom-media': {
+		'basic': {
+			message: 'supports basic usage'
+		}
+	}
+};
diff --git a/.travis.yml b/.travis.yml
index ebea37e..e1f11a5 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,6 +1,9 @@
-sudo: false
+# https://docs.travis-ci.com/user/travis-lint
+
 language: node_js
+
 node_js:
-  - "stable"
-  - "8"
-  - "6"
+  - 6
+
+install:
+  - npm install --ignore-scripts
diff --git a/CHANGELOG.md b/CHANGELOG.md
index 70d4c04..666301d 100755
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,23 +1,33 @@
-# 6.0.0 - 2017-05-12
+# Changes to PostCSS Custom Media
+
+### 7.0.0 (September 12, 2018)
+
+- Added: New `preserve` option to preserve custom media and atrules using them
+- Added: New `exportTo` function to specify where to export custom media
+- Added: New `importFrom` option to specify where to import custom media
+- Added: Support for PostCSS v7
+- Added: Support for Node v6+
+
+# 6.0.0 (May 12, 2017)
 
 - Added: compatibility with postcss v6.x
 
-# 5.0.1 - 2016-02-03
+# 5.0.1 (February 3, 2016)
 
 - Fixed: circular dependencies are properly detected
 ([#17](https://github.com/postcss/postcss-custom-media/pull/17))
 
-# 5.0.0 - 2015-08-25
+# 5.0.0 (August 25, 2015)
 
 - Removed: compatibility with postcss v4.x
 - Added: compatibility with postcss v5.x
 
-# 4.1.0 - 2015-06-30
+# 4.1.0 (06 30, 2015)
 
 - Added: Allow custom media to reference each other
 ([#10](https://github.com/postcss/postcss-custom-media/pull/10))
 
-# 4.0.0 - 2015-05-17
+# 4.0.0 (May 17, 2015)
 
 - Changed: warning messages are now sent via postcss messages api (^4.1.0)
 - Added: automatic custom media `--` prefixing
@@ -25,7 +35,7 @@
 - Added: `preserve` allows you to preserve custom media query defintions
 - Added: `appendExtensions` allows you (when `preserve` is truthy) to append your extensions as media queries
 
-# 3.0.0 - 2015-01-29
+# 3.0.0 (January 29, 2015)
 
 - Added: compatibility with postcss v4.x
 - Removed: compatibility with postcss v3.x
@@ -34,26 +44,26 @@
 
 _You never saw this version (this is a bad release that points to 1.0.0)._
 
-# 1.3.0 - 2014-11-25
+# 1.3.0 (November 25, 2014)
 
 - Changed: better gnu message
 
-# 1.2.1 - 2014-10-09
+# 1.2.1 (October 9, 2014)
 
 - Fixed: npm description
 
-# 1.2.0 - 2014-10-01
+# 1.2.0 (October 1, 2014)
 
 - Added: support for multiples media in query list (ref [#rework-custom-media/5](https://github.com/reworkcss/rework-custom-media/pull/5))
 
-# 1.1.0 - 2014-09-30
+# 1.1.0 (September 30, 2014)
 
 - Added: support for js-defined media queries (fix [#3](https://github.com/postcss/postcss-custom-media/issues/3))
 
-# 1.0.1 - 2014-09-16
+# 1.0.1 (September 16, 2014)
 
 - Added: Allow whitespace around custom media name (fix [#2](https://github.com/postcss/postcss-custom-media/issues/2))
 
-# 1.0.0 - 2014-08-12
+# 1.0.0 (August 12, 2014)
 
 âœ¨ First release based on [rework-custom-media](https://github.com/reworkcss/rework-custom-media) v0.1.1
diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
new file mode 100644
index 0000000..bce2ffa
--- /dev/null
+++ b/CONTRIBUTING.md
@@ -0,0 +1,65 @@
+# Contributing to PostCSS Custom Media
+
+You want to help? You rock! Now, take a moment to be sure your contributions
+make sense to everyone else.
+
+## Reporting Issues
+
+Found a problem? Want a new feature?
+
+- See if your issue or idea has [already been reported].
+- Provide a [reduced test case] or a [live example].
+
+Remember, a bug is a _demonstrable problem_ caused by _our_ code.
+
+## Submitting Pull Requests
+
+Pull requests are the greatest contributions, so be sure they are focused in
+scope and avoid unrelated commits.
+
+1. To begin; [fork this project], clone your fork, and add our upstream.
+   ```bash
+   # Clone your fork of the repo into the current directory
+   git clone git@github.com:YOUR_USER/postcss-custom-media.git
+
+   # Navigate to the newly cloned directory
+   cd postcss-custom-media
+
+   # Assign the original repo to a remote called "upstream"
+   git remote add upstream git@github.com:postcss/postcss-custom-media.git
+
+   # Install the tools necessary for testing
+   npm install
+   ```
+
+2. Create a branch for your feature or fix:
+   ```bash
+   # Move into a new branch for your feature
+   git checkout -b feature/thing
+   ```
+   ```bash
+   # Move into a new branch for your fix
+   git checkout -b fix/something
+   ```
+
+3. If your code follows our practices, then push your feature branch:
+   ```bash
+   # Test current code
+   npm test
+   ```
+   ```bash
+   # Push the branch for your new feature
+   git push origin feature/thing
+   ```
+   ```bash
+   # Or, push the branch for your update
+   git push origin update/something
+   ```
+
+Thatâ€™s it! Now [open a pull request] with a clear title and description.
+
+[already been reported]: issues
+[fork this project]:     fork
+[live example]:          https://codepen.io/pen
+[open a pull request]:   https://help.github.com/articles/using-pull-requests/
+[reduced test case]:     https://css-tricks.com/reduced-test-cases/
diff --git a/INSTALL.md b/INSTALL.md
new file mode 100644
index 0000000..a5b16bd
--- /dev/null
+++ b/INSTALL.md
@@ -0,0 +1,170 @@
+# Installing PostCSS Custom Media
+
+[PostCSS Custom Media] runs in all Node environments, with special instructions for:
+
+| [Node](#node) | [PostCSS CLI](#postcss-cli) | [Webpack](#webpack) | [Create React App](#create-react-app) | [Gulp](#gulp) | [Grunt](#grunt) |
+| --- | --- | --- | --- | --- | --- |
+
+## Node
+
+Add [PostCSS Custom Media] to your project:
+
+```bash
+npm install postcss-custom-media --save-dev
+```
+
+Use [PostCSS Custom Media] to process your CSS:
+
+```js
+const postcssCustomMedia = require('postcss-custom-media');
+
+postcssCustomMedia.process(YOUR_CSS /*, processOptions, pluginOptions */);
+```
+
+Or use it as a [PostCSS] plugin:
+
+```js
+const postcss = require('postcss');
+const postcssCustomMedia = require('postcss-custom-media');
+
+postcss([
+  postcssCustomMedia(/* pluginOptions */)
+]).process(YOUR_CSS /*, processOptions */);
+```
+
+## PostCSS CLI
+
+Add [PostCSS CLI] to your project:
+
+```bash
+npm install postcss-cli --save-dev
+```
+
+Use [PostCSS Custom Media] in your `postcss.config.js` configuration file:
+
+```js
+const postcssCustomMedia = require('postcss-custom-media');
+
+module.exports = {
+  plugins: [
+    postcssCustomMedia(/* pluginOptions */)
+  ]
+}
+```
+
+## Webpack
+
+Add [PostCSS Loader] to your project:
+
+```bash
+npm install postcss-loader --save-dev
+```
+
+Use [PostCSS Custom Media] in your Webpack configuration:
+
+```js
+const postcssCustomMedia = require('postcss-custom-media');
+
+module.exports = {
+  module: {
+    rules: [
+      {
+        test: /\.css$/,
+        use: [
+          'style-loader',
+          { loader: 'css-loader', options: { importLoaders: 1 } },
+          { loader: 'postcss-loader', options: {
+            ident: 'postcss',
+            plugins: () => [
+              postcssCustomMedia(/* pluginOptions */)
+            ]
+          } }
+        ]
+      }
+    ]
+  }
+}
+```
+
+## Create React App
+
+Add [React App Rewired] and [React App Rewire PostCSS] to your project:
+
+```bash
+npm install react-app-rewired react-app-rewire-postcss --save-dev
+```
+
+Use [React App Rewire PostCSS] and [PostCSS Custom Media] in your
+`config-overrides.js` file:
+
+```js
+const reactAppRewirePostcss = require('react-app-rewire-postcss');
+const postcssCustomMedia = require('postcss-custom-media');
+
+module.exports = config => reactAppRewirePostcss(config, {
+  plugins: () => [
+    postcssCustomMedia(/* pluginOptions */)
+  ]
+});
+```
+
+## Gulp
+
+Add [Gulp PostCSS] to your project:
+
+```bash
+npm install gulp-postcss --save-dev
+```
+
+Use [PostCSS Custom Media] in your Gulpfile:
+
+```js
+const postcss = require('gulp-postcss');
+const postcssCustomMedia = require('postcss-custom-media');
+
+gulp.task('css', () => gulp.src('./src/*.css').pipe(
+  postcss([
+    postcssCustomMedia(/* pluginOptions */)
+  ])
+).pipe(
+  gulp.dest('.')
+));
+```
+
+## Grunt
+
+Add [Grunt PostCSS] to your project:
+
+```bash
+npm install grunt-postcss --save-dev
+```
+
+Use [PostCSS Custom Media] in your Gruntfile:
+
+```js
+const postcssCustomMedia = require('postcss-custom-media');
+
+grunt.loadNpmTasks('grunt-postcss');
+
+grunt.initConfig({
+  postcss: {
+    options: {
+      use: [
+       postcssCustomMedia(/* pluginOptions */)
+      ]
+    },
+    dist: {
+      src: '*.css'
+    }
+  }
+});
+```
+
+[Gulp PostCSS]: https://github.com/postcss/gulp-postcss
+[Grunt PostCSS]: https://github.com/nDmitry/grunt-postcss
+[PostCSS]: https://github.com/postcss/postcss
+[PostCSS CLI]: https://github.com/postcss/postcss-cli
+[PostCSS Loader]: https://github.com/postcss/postcss-loader
+[PostCSS Custom Media]: https://github.com/postcss/postcss-custom-media
+[React App Rewire PostCSS]: https://github.com/csstools/react-app-rewire-postcss
+[React App Rewired]: https://github.com/timarney/react-app-rewired
diff --git a/LICENSE b/LICENSE.md
old mode 100755
new mode 100644
similarity index 51%
rename from LICENSE
rename to LICENSE.md
index f559d05..6d70470
--- a/LICENSE
+++ b/LICENSE.md
@@ -1,20 +1,21 @@
-The MIT License (MIT)
+# The MIT License (MIT)
 
-Copyright (c) 2017 Maxime Thirouin & Nicolas Gallagher
+Copyright Â© PostCSS
 
 Permission is hereby granted, free of charge, to any person obtaining a copy of
 this software and associated documentation files (the "Software"), to deal in
 the Software without restriction, including without limitation the rights to
-use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-the Software, and to permit persons to whom the Software is furnished to do so,
-subject to the following conditions:
+use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
+of the Software, and to permit persons to whom the Software is furnished to do
+so, subject to the following conditions:
 
 The above copyright notice and this permission notice shall be included in all
 copies or substantial portions of the Software.
 
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+SOFTWARE.
diff --git a/README.md b/README.md
index 0ec621d..eb9551c 100755
--- a/README.md
+++ b/README.md
@@ -1,13 +1,12 @@
-# PostCSS Custom Media [<img src="https://postcss.github.io/postcss/logo.svg" alt="PostCSS Logo" width="90" height="90" align="right">][postcss]
+# PostCSS Custom Media [<img src="https://postcss.github.io/postcss/logo.svg" alt="PostCSS" width="90" height="90" align="right">][postcss]
 
 [![NPM Version][npm-img]][npm-url]
 [![CSS Standard Status][css-img]][css-url]
 [![Build Status][cli-img]][cli-url]
 [![Support Chat][git-img]][git-url]
 
-> [PostCSS Custom Media] lets you use Custom Media Queries in CSS, following
-the [CSS Media Queries](https://drafts.csswg.org/mediaqueries-5/#custom-mq)
-specification.
+[PostCSS Custom Media] lets you use Custom Media Queries in CSS, following the
+[CSS Media Queries] specification.
 
 ```pcss
 @custom-media --small-viewport (max-width: 30em);
@@ -23,67 +22,143 @@ specification.
 }
 ```
 
-## Installation
+## Usage
+
+Add [PostCSS Custom Media] to your project:
 
-```console
-$ npm install postcss-custom-media
+```bash
+npm install postcss-custom-media --save-dev
 ```
 
-## Usage
+Use [PostCSS Custom Media] to process your CSS:
+
+```js
+const postcssCustomMedia = require('postcss-custom-media');
+
+postcssCustomMedia.process(YOUR_CSS /*, processOptions, pluginOptions */);
+```
+
+Or use it as a [PostCSS] plugin:
 
 ```js
-// dependencies
-var postcss = require("postcss")
-var customMedia = require("postcss-custom-media")
-
-// css to be processed
-var css = fs.readFileSync("input.css", "utf8")
-
-// process css using postcss-custom-media
-var out = postcss()
-  .use(customMedia())
-  .process(css)
-  .css
+const postcss = require('postcss');
+const postcssCustomMedia = require('postcss-custom-media');
+
+postcss([
+  postcssCustomMedia(/* pluginOptions */)
+]).process(YOUR_CSS /*, processOptions */);
 ```
 
-Checkout [tests](test) for more examples.
+[PostCSS Custom Media] runs in all Node environments, with special instructions for:
 
-### Options
+| [Node](INSTALL.md#node) | [PostCSS CLI](INSTALL.md#postcss-cli) | [Webpack](INSTALL.md#webpack) | [Create React App](INSTALL.md#create-react-app) | [Gulp](INSTALL.md#gulp) | [Grunt](INSTALL.md#grunt) |
+| --- | --- | --- | --- | --- | --- |
 
-#### `extensions`
+## Options
 
-(default: `{}`)
+### preserve
 
-Allows you to pass an object to define the `<media-query-list>` for each
-`<extension-name>`. These definitions will override any that exist in the CSS.
+The `preserve` option determines whether custom media and atrules using custom
+media should be preserved in their original form.
+
+```pcss
+@custom-media --small-viewport (max-width: 30em);
 
-```javascript
-{
-  '--phone': '(min-width: 544px)',
-  '--tablet': '(min-width: 768px)',
-  '--desktop': '(min-width: 992px)',
-  '--large-desktop': '(min-width: 1200px)',
+@media (--small-viewport) {
+  /* styles for small viewport */
+}
+
+/* becomes */
+
+@custom-media --small-viewport (max-width: 30em);
+
+@media (max-width: 30em) {
+  /* styles for small viewport */
+}
+
+@media (--small-viewport) {
+  /* styles for small viewport */
 }
 ```
 
-#### `preserve`
+### importFrom
+
+The `importFrom` option specifies sources where custom media can be imported
+from, which might be CSS, JS, and JSON files, functions, and directly passed
+objects.
+
+```js
+postcssCustomMedia({
+  importFrom: 'path/to/file.css' // => @custom-selector --small-viewport (max-width: 30em);
+});
+```
+
+```pcss
+@media (max-width: 30em) {
+  /* styles for small viewport */
+}
 
-(default: `false`)
+@media (--small-viewport) {
+  /* styles for small viewport */
+}
+```
 
-Allows you to preserve custom media query definitions in output.
+Multiple sources can be passed into this option, and they will be parsed in the
+order they are received. JavaScript files, JSON files, functions, and objects
+will need to namespace custom media using the `customProperties` or
+`custom-properties` key.
 
-#### `appendExtensions`
+```js
+postcssCustomMedia({
+  importFrom: [
+    'path/to/file.css',
+    'and/then/this.js',
+    'and/then/that.json',
+    {
+      customMedia: { '--small-viewport': '(max-width: 30em)' }
+    },
+    () => {
+      const customProperties = { '--small-viewport': '(max-width: 30em)' };
+
+      return { customProperties };
+    }
+  ]
+});
+```
 
-(default: `false`)
+### exportTo
 
-**This option only works if `preserve` is truthy**.
-Allows you to append your extensions at end of your CSS.
+The `exportTo` option specifies destinations where custom media can be exported
+to, which might be CSS, JS, and JSON files, functions, and directly passed
+objects.
 
----
+```js
+postcssCustomMedia({
+  exportTo: 'path/to/file.css' // @custom-media --small-viewport (max-width: 30em);
+});
+```
 
-## [Changelog](CHANGELOG.md)
+Multiple destinations can be passed into this option, and they will be parsed
+in the order they are received. JavaScript files, JSON files, and objects will
+need to namespace custom media using the `customProperties` or
+`custom-properties` key.
 
-## [License](LICENSE)
+```js
+const cachedObject = { customMedia: {} };
+
+postcssCustomMedia({
+  exportTo: [
+    'path/to/file.css',   // @custom-media --small-viewport (max-width: 30em);
+    'and/then/this.js',   // module.exports = { customMedia: { '--small-viewport': '(max-width: 30em)' } }
+    'and/then/this.mjs',  // export const customMedia = { '--small-viewport': '(max-width: 30em)' } }
+    'and/then/that.json', // { "custom-media": { "--small-viewport": "(max-width: 30em)" } }
+    cachedObject,
+    customProperties => {
+      customProperties    // { '--small-viewport': '(max-width: 30em)' }
+    }
+  ]
+});
+```
 
 [cli-img]: https://img.shields.io/travis/postcss/postcss-custom-media.svg
 [cli-url]: https://travis-ci.org/postcss/postcss-custom-media
@@ -94,5 +169,6 @@ Allows you to append your extensions at end of your CSS.
 [npm-img]: https://img.shields.io/npm/v/postcss-custom-media.svg
 [npm-url]: https://www.npmjs.com/package/postcss-custom-media
 
+[CSS Media Queries]: https://drafts.csswg.org/mediaqueries-5/#custom-mq
 [PostCSS]: https://github.com/postcss/postcss
 [PostCSS Custom Media]: https://github.com/postcss/postcss-custom-media
diff --git a/index.js b/index.js
index 5531f75..7547790 100755
--- a/index.js
+++ b/index.js
@@ -1,147 +1,30 @@
-var postcss = require("postcss")
+import postcss from 'postcss';
+import getCustomMedia from './lib/custom-media-from-root';
+import transformAtrules from './lib/transform-atrules';
+import importCustomMediaFromSources from './lib/import-from';
+import exportCustomMediaToDestinations from './lib/export-to';
 
-var EXTENSION_RE = /\(\s*(--[\w-]+)\s*\)/g
+export default postcss.plugin('postcss-custom-media', opts => {
+	// whether to preserve custom selectors and rules using them
+	const preserve = Boolean(Object(opts).preserve);
 
-/*
- * Resolve custom media values.
- */
-function resolveValue(query, depChain, map, result) {
-  if (!EXTENSION_RE.test(query.value)) {
-    return query.value
-  }
-  var val = query.value.replace(EXTENSION_RE, function(orig, name) {
-    if (!map[name]) {
-      return orig
-    }
+	// sources to import custom selectors from
+	const importFrom = [].concat(Object(opts).importFrom || []);
 
-    var mq = map[name]
-    if (mq.resolved) {
-      return mq.value
-    }
+	// destinations to export custom selectors to
+	const exportTo = [].concat(Object(opts).exportTo || []);
 
-    if (depChain.indexOf(name) !== -1) {
-      mq.circular = true
-      return orig
-    }
-    depChain.push(name)
-    mq.value = resolveValue(mq, depChain, map, result)
-    return mq.value
-  })
-  if (val === query.value) {
-    query.circular = true
-  }
-  return val
-}
+	// promise any custom selectors are imported
+	const customMediaPromise = importCustomMediaFromSources(importFrom);
 
-/*
- * read & replace custom media queries by standard media queries
- */
-function customMedia(options) {
-  return function(styles, result) {
-    options = options || {}
-    var extensions = {}
-    if (options.extensions) {
-      Object.keys(options.extensions).forEach(function(name) {
-        var val = options.extensions[name]
-        if (name.slice(0, 2) !== "--") {
-          name = "--" + name
-        }
-        extensions[name] = val
-      })
-    }
-    var appendExtensions = options.appendExtensions
-    var preserve = options.preserve
-    var map = {}
-    var toRemove = []
+	return async root => {
+		const customMedia = Object.assign(
+			await customMediaPromise,
+			getCustomMedia(root, { preserve })
+		);
 
-    // read custom media queries
-    styles.walkAtRules(function(rule) {
-      if (rule.name !== "custom-media") {
-        return
-      }
+		await exportCustomMediaToDestinations(customMedia, exportTo);
 
-      var params = rule.params.split(" ")
-      // @custom-media <extension-name> <media-query-list>;
-      // map[<extension-name>] = <media-query-list>
-      map[params.shift()] = {
-        value: params.join(" "),
-        circular: false,
-        resolved: false,
-      }
-
-      if (!preserve) {
-        toRemove.push(rule)
-      }
-    })
-
-    // apply js-defined media queries
-    Object.keys(extensions).forEach(function(name) {
-      map[name] = {
-        value: extensions[name],
-        circular: false,
-        resolved: false,
-      }
-    })
-
-    Object.keys(map).forEach(function(name) {
-      map[name].value = resolveValue(map[name], [ name ], map, result)
-      map[name].resolved = true
-    })
-
-    // transform custom media query aliases
-    styles.walkAtRules(function(rule) {
-      if (rule.name !== "media") {
-        return
-      }
-
-      rule.params = rule.params.replace(EXTENSION_RE, function(_, name) {
-        if (map[name]) {
-          if (map[name].circular) {
-            result.warn(
-              "Circular @custom-media definition for '" + name +
-                "'. The entire rule has been removed from the output.",
-              { node: rule }
-            )
-            toRemove.push(rule)
-          }
-          return map[name].value
-        }
-
-        result.warn(
-          "Missing @custom-media definition for '" + name +
-            "'. The entire rule has been removed from the output.",
-          { node: rule }
-        )
-        toRemove.push(rule)
-      })
-    })
-
-    if (appendExtensions) {
-      var names = Object.keys(map)
-      if (names.length) {
-        names.forEach(function(name) {
-          if (map[name].circular) {
-            return
-          }
-          var atRule = postcss.atRule({
-            name: "custom-media",
-            params: name + " " + map[name].value,
-            raws: {
-              afterName: " ",
-            },
-          })
-          styles.append(atRule)
-        })
-        styles.raws.semicolon = true
-        styles.raws.after = "\n"
-      }
-    }
-
-    // remove @custom-media
-    toRemove.forEach(function(rule) {
-      rule.remove()
-    })
-  }
-}
-
-module.exports = postcss.plugin("postcss-custom-media", customMedia)
+		transformAtrules(root, customMedia, { preserve });
+	};
+});
diff --git a/lib/custom-media-from-root.js b/lib/custom-media-from-root.js
new file mode 100644
index 0000000..ff4fb4d
--- /dev/null
+++ b/lib/custom-media-from-root.js
@@ -0,0 +1,34 @@
+import mediaASTFromString from './media-ast-from-string';
+
+// return custom selectors from the css root, conditionally removing them
+export default (root, opts) => {
+	// initialize custom selectors
+	const customMedias = {};
+
+	// for each custom selector atrule that is a child of the css root
+	root.nodes.slice().forEach(node => {
+		if (isCustomMedia(node)) {
+			// extract the name and selectors from the params of the custom selector
+			const [, name, selectors] = node.params.match(customMediaParamsRegExp);
+
+			// write the parsed selectors to the custom selector
+			customMedias[name] = mediaASTFromString(selectors);
+
+			// conditionally remove the custom selector atrule
+			if (!Object(opts).preserve) {
+				node.remove();
+			}
+		}
+	});
+
+	return customMedias;
+};
+
+// match the custom selector name
+const customMediaNameRegExp = /^custom-media$/i;
+
+// match the custom selector params
+const customMediaParamsRegExp = /^(--[A-z][\w-]*)\s+([\W\w]+)\s*$/;
+
+// whether the atrule is a custom selector
+const isCustomMedia = node => node.type === 'atrule' && customMediaNameRegExp.test(node.name) && customMediaParamsRegExp.test(node.params);
diff --git a/lib/export-to.js b/lib/export-to.js
new file mode 100644
index 0000000..0059757
--- /dev/null
+++ b/lib/export-to.js
@@ -0,0 +1,129 @@
+import fs from 'fs';
+import path from 'path';
+
+/* Import Custom Media from CSS File
+/* ========================================================================== */
+
+async function exportCustomMediaToCssFile(to, customMedia) {
+	const cssContent = Object.keys(customMedia).reduce((cssLines, name) => {
+		cssLines.push(`@custom-media ${name} ${customMedia[name]};`);
+
+		return cssLines;
+	}, []).join('\n');
+	const css = `${cssContent}\n`;
+
+	await writeFile(to, css);
+}
+
+/* Import Custom Media from JSON file
+/* ========================================================================== */
+
+async function exportCustomMediaToJsonFile(to, customMedia) {
+	const jsonContent = JSON.stringify({
+		'custom-media': customMedia
+	}, null, '  ');
+	const json = `${jsonContent}\n`;
+
+	await writeFile(to, json);
+}
+
+/* Import Custom Media from Common JS file
+/* ========================================================================== */
+
+async function exportCustomMediaToCjsFile(to, customMedia) {
+	const jsContents = Object.keys(customMedia).reduce((jsLines, name) => {
+		jsLines.push(`\t\t'${escapeForJS(name)}': '${escapeForJS(customMedia[name])}'`);
+
+		return jsLines;
+	}, []).join(',\n');
+	const js = `module.exports = {\n\tcustomMedia: {\n${jsContents}\n\t}\n};\n`;
+
+	await writeFile(to, js);
+}
+
+/* Import Custom Media from Module JS file
+/* ========================================================================== */
+
+async function exportCustomMediaToMjsFile(to, customMedia) {
+	const mjsContents = Object.keys(customMedia).reduce((mjsLines, name) => {
+		mjsLines.push(`\t'${escapeForJS(name)}': '${escapeForJS(customMedia[name])}'`);
+
+		return mjsLines;
+	}, []).join(',\n');
+	const mjs = `export const customMedia = {\n${mjsContents}\n};\n`;
+
+	await writeFile(to, mjs);
+}
+
+/* Export Custom Media to Destinations
+/* ========================================================================== */
+
+export default function exportCustomMediaToDestinations(customMedia, destinations) {
+	return Promise.all(destinations.map(async destination => {
+		if (destination instanceof Function) {
+			await destination(defaultCustomMediaToJSON(customMedia));
+		} else {
+			// read the destination as an object
+			const opts = destination === Object(destination) ? destination : { to: String(destination) };
+
+			// transformer for custom media into a JSON-compatible object
+			const toJSON = opts.toJSON || defaultCustomMediaToJSON;
+
+			if ('customMedia' in opts) {
+				// write directly to an object as customMedia
+				opts.customMedia = toJSON(customMedia);
+			} else if ('custom-media' in opts) {
+				// write directly to an object as custom-media
+				opts['custom-media'] = toJSON(customMedia);
+			} else {
+				// destination pathname
+				const to = String(opts.to || '');
+
+				// type of file being written to
+				const type = (opts.type || path.extname(opts.to).slice(1)).toLowerCase();
+
+				// transformed custom media
+				const customMediaJSON = toJSON(customMedia);
+
+				if (type === 'css') {
+					await exportCustomMediaToCssFile(to, customMediaJSON);
+				}
+
+				if (type === 'js') {
+					await exportCustomMediaToCjsFile(to, customMediaJSON);
+				}
+
+				if (type === 'json') {
+					await exportCustomMediaToJsonFile(to, customMediaJSON);
+				}
+
+				if (type === 'mjs') {
+					await exportCustomMediaToMjsFile(to, customMediaJSON);
+				}
+			}
+		}
+	}));
+}
+
+/* Helper utilities
+/* ========================================================================== */
+
+const defaultCustomMediaToJSON = customMedia => {
+	return Object.keys(customMedia).reduce((customMediaJSON, key) => {
+		customMediaJSON[key] = String(customMedia[key]);
+
+		return customMediaJSON;
+	}, {});
+};
+
+const writeFile = (to, text) => new Promise((resolve, reject) => {
+	fs.writeFile(to, text, error => {
+		if (error) {
+			reject(error);
+		} else {
+			resolve();
+		}
+	});
+});
+
+const escapeForJS = string => string.replace(/\\([\s\S])|(')/g, '\\$1$2').replace(/\n/g, '\\n').replace(/\r/g, '\\r');
diff --git a/lib/import-from.js b/lib/import-from.js
new file mode 100644
index 0000000..41030d4
--- /dev/null
+++ b/lib/import-from.js
@@ -0,0 +1,120 @@
+import fs from 'fs';
+import path from 'path';
+import postcss from 'postcss';
+import getMediaAstFromMediaString from './media-ast-from-string';
+import getCustomMedia from './custom-media-from-root';
+
+/* Import Custom Media from CSS AST
+/* ========================================================================== */
+
+function importCustomMediaFromCSSAST(root) {
+	return getCustomMedia(root);
+}
+
+/* Import Custom Media from CSS File
+/* ========================================================================== */
+
+async function importCustomMediaFromCSSFile(from) {
+	const css = await readFile(path.resolve(from));
+	const root = postcss.parse(css, { from: path.resolve(from) });
+
+	return importCustomMediaFromCSSAST(root);
+}
+
+/* Import Custom Media from Object
+/* ========================================================================== */
+
+function importCustomMediaFromObject(object) {
+	const customMedia = Object.assign(
+		{},
+		Object(object).customMedia || Object(object)['custom-media']
+	);
+
+	for (const key in customMedia) {
+		customMedia[key] = getMediaAstFromMediaString(customMedia[key]);
+	}
+
+	return customMedia;
+}
+
+/* Import Custom Media from JSON file
+/* ========================================================================== */
+
+async function importCustomMediaFromJSONFile(from) {
+	const object = await readJSON(path.resolve(from));
+
+	return importCustomMediaFromObject(object);
+}
+
+/* Import Custom Media from JS file
+/* ========================================================================== */
+
+async function importCustomMediaFromJSFile(from) {
+	const object = await import(path.resolve(from));
+
+	return importCustomMediaFromObject(object);
+}
+
+/* Import Custom Media from Sources
+/* ========================================================================== */
+
+export default function importCustomMediaFromSources(sources) {
+	return sources.map(source => {
+		if (source instanceof Promise) {
+			return source;
+		} else if (source instanceof Function) {
+			return source();
+		}
+
+		// read the source as an object
+		const opts = source === Object(source) ? source : { from: String(source) };
+
+		// skip objects with custom media
+		if (Object(opts).customMedia || Object(opts)['custom-media']) {
+			return opts
+		}
+
+		// source pathname
+		const from = String(opts.from || '');
+
+		// type of file being read from
+		const type = (opts.type || path.extname(opts.from).slice(1)).toLowerCase();
+
+		return { type, from };
+	}).reduce(async (customMedia, source) => {
+		const { type, from } = await source;
+
+		if (type === 'ast') {
+			return Object.assign(customMedia, importCustomMediaFromCSSAST(from));
+		}
+
+		if (type === 'css') {
+			return Object.assign(customMedia, await importCustomMediaFromCSSFile(from));
+		}
+
+		if (type === 'js') {
+			return Object.assign(customMedia, await importCustomMediaFromJSFile(from));
+		}
+
+		if (type === 'json') {
+			return Object.assign(customMedia, await importCustomMediaFromJSONFile(from));
+		}
+
+		return Object.assign(customMedia, importCustomMediaFromObject(await source));
+	}, {});
+}
+
+/* Helper utilities
+/* ========================================================================== */
+
+const readFile = from => new Promise((resolve, reject) => {
+	fs.readFile(from, 'utf8', (error, result) => {
+		if (error) {
+			reject(error);
+		} else {
+			resolve(result);
+		}
+	});
+});
+
+const readJSON = async from => JSON.parse(await readFile(from));
diff --git a/lib/media-ast-from-string.js b/lib/media-ast-from-string.js
new file mode 100644
index 0000000..38e3b63
--- /dev/null
+++ b/lib/media-ast-from-string.js
@@ -0,0 +1,134 @@
+function parse(string, splitByAnd) {
+	const array = [];
+	let buffer = '';
+	let split = false;
+	let func = 0;
+	let i = -1;
+
+	while (++i < string.length) {
+		const char = string[i];
+
+		if (char === '(') {
+			func += 1;
+		} else if (char === ')') {
+			if (func > 0) {
+				func -= 1;
+			}
+		} else if (func === 0) {
+			if (splitByAnd && andRegExp.test(buffer + char)) {
+				split = true;
+			} else if (!splitByAnd && char === ',') {
+				split = true;
+			}
+		}
+
+		if (split) {
+			array.push(splitByAnd ? new MediaExpression(buffer + char) : new MediaQuery(buffer));
+
+			buffer = '';
+			split = false;
+		} else {
+			buffer += char
+		}
+	}
+
+	if (buffer !== '') {
+		array.push(splitByAnd ? new MediaExpression(buffer) : new MediaQuery(buffer));
+	}
+
+	return array;
+}
+
+class MediaQueryList {
+	constructor(string) {
+		this.nodes = parse(string);
+	}
+
+	invert() {
+		this.nodes.forEach(node => {
+			node.invert();
+		})
+
+		return this;
+	}
+
+	clone() {
+		return new MediaQueryList(String(this));
+	}
+
+	toString() {
+		return this.nodes.join(',');
+	}
+}
+
+class MediaQuery {
+	constructor(string) {
+		const [, before, media, after ] = string.match(spaceWrapRegExp);
+		const [, modifier = '', afterModifier = ' ', type = '', beforeAnd = '', and = '', beforeExpression = '', expression1 = '', expression2 = ''] = media.match(mediaRegExp) || [];
+		const raws = { before, after, afterModifier, originalModifier: modifier || 'not', beforeAnd, and, beforeExpression };
+		const nodes = parse(expression1 || expression2, true);
+
+		Object.assign(this, {
+			modifier,
+			type,
+			raws,
+			nodes
+		});
+	}
+
+	clone(overrides) {
+		const instance = new MediaQuery(String(this));
+
+		Object.assign(instance, overrides);
+
+		return instance;
+	}
+
+	invert() {
+		this.modifier = this.modifier ? '' : this.raws.originalModifier;
+
+		return this;
+	}
+
+	toString() {
+		const { raws } = this;
+
+		return `${raws.before}${this.modifier}${this.modifier ? `${raws.afterModifier}` : ''}${this.type}${raws.beforeAnd}${raws.and}${raws.beforeExpression}${this.nodes.join('')}${this.raws.after}`;
+	}
+}
+
+class MediaExpression {
+	constructor(string) {
+		const [, value, after = '', and = '', afterAnd = '' ] = string.match(andRegExp) || [null, string];
+		const raws = { after, and, afterAnd };
+
+		Object.assign(this, { value, raws });
+	}
+
+	clone(overrides) {
+		const instance = new MediaExpression(String(this));
+
+		Object.assign(instance, overrides);
+
+		return instance;
+	}
+
+	toString() {
+		const { raws } = this;
+
+		return `${this.value}${raws.after}${raws.and}${raws.afterAnd}`;
+	}
+}
+
+const modifierRE = '(not|only)';
+const typeRE = '(all|print|screen|speech)';
+const noExpressionRE = '([\\W\\w]*)';
+const expressionRE = '([\\W\\w]+)';
+const noSpaceRE = '(\\s*)';
+const spaceRE = '(\\s+)';
+const andRE = '(?:(\\s+)(and))';
+const andRegExp = new RegExp(`^${expressionRE}(?:${andRE}${spaceRE})$`, 'i');
+const spaceWrapRegExp = new RegExp(`^${noSpaceRE}${noExpressionRE}${noSpaceRE}$`);
+const mediaRegExp = new RegExp(`^(?:${modifierRE}${spaceRE})?(?:${typeRE}(?:${andRE}${spaceRE}${expressionRE})?|${expressionRE})$`, 'i');
+
+export default string => new MediaQueryList(string);
diff --git a/lib/transform-atrules.js b/lib/transform-atrules.js
new file mode 100644
index 0000000..74f5431
--- /dev/null
+++ b/lib/transform-atrules.js
@@ -0,0 +1,21 @@
+import transformParamsByCustomParams from './transform-params-by-custom-params';
+import mediaASTFromString from './media-ast-from-string';
+
+// transform custom pseudo selectors with custom selectors
+export default (root, customMedia, opts) => {
+	root.walkAtRules(mediaAtRuleRegExp, atrule => {
+		if (customPseudoRegExp.test(atrule.params)) {
+			const mediaAST = mediaASTFromString(atrule.params);
+			const params = transformParamsByCustomParams(mediaAST, customMedia, opts);
+
+			if (opts.preserve) {
+				atrule.cloneBefore({ params });
+			} else {
+				atrule.params = params;
+			}
+		}
+	});
+};
+
+const mediaAtRuleRegExp = /^media$/i;
+const customPseudoRegExp = /\(--[A-z][\w-]*\)/;
diff --git a/lib/transform-params-by-custom-params.js b/lib/transform-params-by-custom-params.js
new file mode 100644
index 0000000..b9a6cf5
--- /dev/null
+++ b/lib/transform-params-by-custom-params.js
@@ -0,0 +1,62 @@
+// return transformed medias, replacing custom pseudo medias with custom medias
+export default function transformMediaList(mediaList, customMedias) {
+	let index = mediaList.nodes.length - 1;
+
+	while (index >= 0) {
+		const transformedMedias = transformMedia(mediaList.nodes[index], customMedias);
+
+		if (transformedMedias.length) {
+			mediaList.nodes.splice(index, 1, ...transformedMedias);
+		}
+
+		--index;
+	}
+
+	return mediaList;
+}
+
+// return custom pseudo medias replaced with custom medias
+function transformMedia(media, customMedias) {
+	const transpiledMedias = [];
+
+	for (const index in media.nodes) {
+		const { value, nodes } = media.nodes[index];
+		const key = value.replace(customPseudoRegExp, '$1');
+
+		if (key in customMedias) {
+			for (const replacementMedia of customMedias[key].nodes) {
+				const mediaClone = media.clone({
+					modifier: replacementMedia.modifier === media.modifier && modifierRegExp.test(media.modifier)
+						? ''
+					: replacementMedia.modifier
+				});
+
+				mediaClone.nodes.splice(index, 1, ...replacementMedia.clone().nodes.map(node => {
+					// use spacing from the current usage
+					node.spaces = { ...media.nodes[index].spaces };
+
+					return node;
+				}));
+
+				const retranspiledMedias = String(mediaClone) === String(customMedias[key])
+					? []
+				: transformMedia(mediaClone, customMedias);
+
+				if (retranspiledMedias.length) {
+					transpiledMedias.push(...retranspiledMedias);
+				} else {
+					transpiledMedias.push(mediaClone);
+				}
+			}
+
+			return transpiledMedias;
+		} else if (nodes && nodes.length) {
+			transformMediaList(media.nodes[index], customMedias);
+		}
+	}
+
+	return transpiledMedias;
+}
+
+const modifierRegExp = /^not$/i;
+const customPseudoRegExp = /\((--[A-z][\w-]*)\)/;
diff --git a/package-lock.json b/package-lock.json
deleted file mode 100644
index 8330f0a..0000000
--- a/package-lock.json
+++ /dev/null
@@ -1,2035 +0,0 @@
-{
-  "name": "postcss-custom-media",
-  "version": "6.0.0",
-  "lockfileVersion": 1,
-  "requires": true,
-  "dependencies": {
-    "@octokit/rest": {
-      "version": "14.0.9",
-      "resolved": "https://registry.npmjs.org/@octokit/rest/-/rest-14.0.9.tgz",
-      "integrity": "sha512-irP9phKfTXEZIcW2R+VNCtGHZJrXMWmSYp6RRfFn4BtAqtDRXF5z9JxCEQlAhNBf6X1koNi5k49tIAAAEJNlVQ==",
-      "dev": true,
-      "requires": {
-        "before-after-hook": "^1.1.0",
-        "debug": "^3.1.0",
-        "is-array-buffer": "^1.0.0",
-        "is-stream": "^1.1.0",
-        "lodash": "^4.17.4",
-        "url-template": "^2.0.8"
-      },
-      "dependencies": {
-        "debug": {
-          "version": "3.1.0",
-          "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
-          "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
-          "dev": true,
-          "requires": {
-            "ms": "2.0.0"
-          }
-        }
-      }
-    },
-    "@sindresorhus/df": {
-      "version": "2.1.0",
-      "resolved": "https://registry.npmjs.org/@sindresorhus/df/-/df-2.1.0.tgz",
-      "integrity": "sha1-0gjPJ+BvC7R20U197M19cm6ao4k=",
-      "dev": true,
-      "requires": {
-        "execa": "^0.2.2"
-      }
-    },
-    "acorn": {
-      "version": "5.7.1",
-      "resolved": "https://registry.npmjs.org/acorn/-/acorn-5.7.1.tgz",
-      "integrity": "sha512-d+nbxBUGKg7Arpsvbnlq61mc12ek3EY8EQldM3GPAhWJ1UVxC6TDGbIvUMNU6obBX3i1+ptCIzV4vq0gFPEGVQ==",
-      "dev": true
-    },
-    "acorn-jsx": {
-      "version": "3.0.1",
-      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-3.0.1.tgz",
-      "integrity": "sha1-r9+UiPsezvyDSPb7IvRk4ypYs2s=",
-      "dev": true,
-      "requires": {
-        "acorn": "^3.0.4"
-      },
-      "dependencies": {
-        "acorn": {
-          "version": "3.3.0",
-          "resolved": "https://registry.npmjs.org/acorn/-/acorn-3.3.0.tgz",
-          "integrity": "sha1-ReN/s56No/JbruP/U2niu18iAXo=",
-          "dev": true
-        }
-      }
-    },
-    "ajv": {
-      "version": "4.11.8",
-      "resolved": "https://registry.npmjs.org/ajv/-/ajv-4.11.8.tgz",
-      "integrity": "sha1-gv+wKynmYq5TvcIK8VlHcGc5xTY=",
-      "dev": true,
-      "requires": {
-        "co": "^4.6.0",
-        "json-stable-stringify": "^1.0.1"
-      }
-    },
-    "ajv-keywords": {
-      "version": "1.5.1",
-      "resolved": "https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-1.5.1.tgz",
-      "integrity": "sha1-MU3QpLM2j609/NxU7eYXG4htrzw=",
-      "dev": true
-    },
-    "ansi-escapes": {
-      "version": "1.4.0",
-      "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-1.4.0.tgz",
-      "integrity": "sha1-06ioOzGapneTZisT52HHkRQiMG4=",
-      "dev": true
-    },
-    "ansi-regex": {
-      "version": "2.1.1",
-      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
-      "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8=",
-      "dev": true
-    },
-    "ansi-styles": {
-      "version": "3.2.1",
-      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
-      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
-      "requires": {
-        "color-convert": "^1.9.0"
-      }
-    },
-    "argparse": {
-      "version": "1.0.10",
-      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
-      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
-      "dev": true,
-      "requires": {
-        "sprintf-js": "~1.0.2"
-      }
-    },
-    "array-union": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/array-union/-/array-union-1.0.2.tgz",
-      "integrity": "sha1-mjRBDk9OPaI96jdb5b5w8kd47Dk=",
-      "dev": true,
-      "requires": {
-        "array-uniq": "^1.0.1"
-      }
-    },
-    "array-uniq": {
-      "version": "1.0.3",
-      "resolved": "https://registry.npmjs.org/array-uniq/-/array-uniq-1.0.3.tgz",
-      "integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY=",
-      "dev": true
-    },
-    "arrify": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/arrify/-/arrify-1.0.1.tgz",
-      "integrity": "sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0=",
-      "dev": true
-    },
-    "babel-code-frame": {
-      "version": "6.26.0",
-      "resolved": "https://registry.npmjs.org/babel-code-frame/-/babel-code-frame-6.26.0.tgz",
-      "integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",
-      "dev": true,
-      "requires": {
-        "chalk": "^1.1.3",
-        "esutils": "^2.0.2",
-        "js-tokens": "^3.0.2"
-      },
-      "dependencies": {
-        "ansi-styles": {
-          "version": "2.2.1",
-          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
-          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
-          "dev": true
-        },
-        "chalk": {
-          "version": "1.1.3",
-          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
-          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
-          "dev": true,
-          "requires": {
-            "ansi-styles": "^2.2.1",
-            "escape-string-regexp": "^1.0.2",
-            "has-ansi": "^2.0.0",
-            "strip-ansi": "^3.0.0",
-            "supports-color": "^2.0.0"
-          }
-        },
-        "supports-color": {
-          "version": "2.0.0",
-          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
-          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
-          "dev": true
-        }
-      }
-    },
-    "balanced-match": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz",
-      "integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c=",
-      "dev": true
-    },
-    "before-after-hook": {
-      "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/before-after-hook/-/before-after-hook-1.1.0.tgz",
-      "integrity": "sha512-VOMDtYPwLbIncTxNoSzRyvaMxtXmLWLUqr8k5AfC1BzLk34HvBXaQX8snOwQZ4c0aX8aSERqtJSiI9/m2u5kuA==",
-      "dev": true
-    },
-    "brace-expansion": {
-      "version": "1.1.11",
-      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
-      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
-      "dev": true,
-      "requires": {
-        "balanced-match": "^1.0.0",
-        "concat-map": "0.0.1"
-      }
-    },
-    "buffer-from": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.1.tgz",
-      "integrity": "sha512-MQcXEUbCKtEo7bhqEs6560Hyd4XaovZlO/k9V3hjVUF/zwW7KBVdSK4gIt/bzwS9MbR5qob+F5jusZsb0YQK2A==",
-      "dev": true
-    },
-    "builtin-modules": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/builtin-modules/-/builtin-modules-1.1.1.tgz",
-      "integrity": "sha1-Jw8HbFpywC9bZaR9+Uxf46J4iS8=",
-      "dev": true
-    },
-    "caller-path": {
-      "version": "0.1.0",
-      "resolved": "https://registry.npmjs.org/caller-path/-/caller-path-0.1.0.tgz",
-      "integrity": "sha1-lAhe9jWB7NPaqSREqP6U6CV3dR8=",
-      "dev": true,
-      "requires": {
-        "callsites": "^0.2.0"
-      }
-    },
-    "callsites": {
-      "version": "0.2.0",
-      "resolved": "https://registry.npmjs.org/callsites/-/callsites-0.2.0.tgz",
-      "integrity": "sha1-r6uWJikQp/M8GaV3WCXGnzTjUMo=",
-      "dev": true
-    },
-    "chalk": {
-      "version": "2.4.1",
-      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.1.tgz",
-      "integrity": "sha512-ObN6h1v2fTJSmUXoS3nMQ92LbDK9be4TV+6G+omQlGJFdcUX5heKi1LZ1YnRMIgwTLEj3E24bT6tYni50rlCfQ==",
-      "requires": {
-        "ansi-styles": "^3.2.1",
-        "escape-string-regexp": "^1.0.5",
-        "supports-color": "^5.3.0"
-      }
-    },
-    "checkup": {
-      "version": "1.3.0",
-      "resolved": "https://registry.npmjs.org/checkup/-/checkup-1.3.0.tgz",
-      "integrity": "sha1-04ACdv6l0PJH/8lRvnjIsC+ODXY=",
-      "dev": true
-    },
-    "circular-json": {
-      "version": "0.3.3",
-      "resolved": "https://registry.npmjs.org/circular-json/-/circular-json-0.3.3.tgz",
-      "integrity": "sha512-UZK3NBx2Mca+b5LsG7bY183pHWt5Y1xts4P3Pz7ENTwGVnJOUWbRb3ocjvX7hx9tq/yTAdclXm9sZ38gNuem4A==",
-      "dev": true
-    },
-    "cli-cursor": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-1.0.2.tgz",
-      "integrity": "sha1-ZNo/fValRBLll5S9Ytw1KV6PKYc=",
-      "dev": true,
-      "requires": {
-        "restore-cursor": "^1.0.1"
-      }
-    },
-    "cli-width": {
-      "version": "2.2.0",
-      "resolved": "https://registry.npmjs.org/cli-width/-/cli-width-2.2.0.tgz",
-      "integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk=",
-      "dev": true
-    },
-    "co": {
-      "version": "4.6.0",
-      "resolved": "https://registry.npmjs.org/co/-/co-4.6.0.tgz",
-      "integrity": "sha1-bqa989hTrlTMuOR7+gvz+QMfsYQ=",
-      "dev": true
-    },
-    "code-point-at": {
-      "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz",
-      "integrity": "sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c=",
-      "dev": true
-    },
-    "color-convert": {
-      "version": "1.9.2",
-      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.2.tgz",
-      "integrity": "sha512-3NUJZdhMhcdPn8vJ9v2UQJoH0qqoGUkYTgFEPZaPjEtwmmKUfNV46zZmgB2M5M4DCEQHMaCfWHCxiBflLm04Tg==",
-      "requires": {
-        "color-name": "1.1.1"
-      }
-    },
-    "color-name": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.1.tgz",
-      "integrity": "sha1-SxQVMEz1ACjqgWQ2Q72C6gWANok="
-    },
-    "concat-map": {
-      "version": "0.0.1",
-      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
-      "integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=",
-      "dev": true
-    },
-    "concat-stream": {
-      "version": "1.6.2",
-      "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.2.tgz",
-      "integrity": "sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==",
-      "dev": true,
-      "requires": {
-        "buffer-from": "^1.0.0",
-        "inherits": "^2.0.3",
-        "readable-stream": "^2.2.2",
-        "typedarray": "^0.0.6"
-      }
-    },
-    "contains-path": {
-      "version": "0.1.0",
-      "resolved": "https://registry.npmjs.org/contains-path/-/contains-path-0.1.0.tgz",
-      "integrity": "sha1-/ozxhP9mcLa67wGp1IYaXL7EEgo=",
-      "dev": true
-    },
-    "core-util-is": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
-      "integrity": "sha1-tf1UIgqivFq1eqtxQMlAdUUDwac=",
-      "dev": true
-    },
-    "cross-spawn-async": {
-      "version": "2.2.5",
-      "resolved": "https://registry.npmjs.org/cross-spawn-async/-/cross-spawn-async-2.2.5.tgz",
-      "integrity": "sha1-hF/wwINKPe2dFg2sptOQkGuyiMw=",
-      "dev": true,
-      "requires": {
-        "lru-cache": "^4.0.0",
-        "which": "^1.2.8"
-      }
-    },
-    "d": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/d/-/d-1.0.0.tgz",
-      "integrity": "sha1-dUu1v+VUUdpppYuU1F9MWwRi1Y8=",
-      "dev": true,
-      "requires": {
-        "es5-ext": "^0.10.9"
-      }
-    },
-    "debug": {
-      "version": "2.6.9",
-      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
-      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
-      "dev": true,
-      "requires": {
-        "ms": "2.0.0"
-      }
-    },
-    "deep-equal": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/deep-equal/-/deep-equal-1.0.1.tgz",
-      "integrity": "sha1-9dJgKStmDghO/0zbyfCK0yR0SLU=",
-      "dev": true
-    },
-    "deep-is": {
-      "version": "0.1.3",
-      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.3.tgz",
-      "integrity": "sha1-s2nW+128E+7PUk+RsHD+7cNXzzQ=",
-      "dev": true
-    },
-    "define-properties": {
-      "version": "1.1.2",
-      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.1.2.tgz",
-      "integrity": "sha1-g6c/L+pWmJj7c3GTyPhzyvbUXJQ=",
-      "dev": true,
-      "requires": {
-        "foreach": "^2.0.5",
-        "object-keys": "^1.0.8"
-      }
-    },
-    "defined": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/defined/-/defined-1.0.0.tgz",
-      "integrity": "sha1-yY2bzvdWdBiOEQlpFRGZ45sfppM=",
-      "dev": true
-    },
-    "del": {
-      "version": "2.2.2",
-      "resolved": "https://registry.npmjs.org/del/-/del-2.2.2.tgz",
-      "integrity": "sha1-wSyYHQZ4RshLyvhiz/kw2Qf/0ag=",
-      "dev": true,
-      "requires": {
-        "globby": "^5.0.0",
-        "is-path-cwd": "^1.0.0",
-        "is-path-in-cwd": "^1.0.0",
-        "object-assign": "^4.0.1",
-        "pify": "^2.0.0",
-        "pinkie-promise": "^2.0.0",
-        "rimraf": "^2.2.8"
-      }
-    },
-    "doctrine": {
-      "version": "2.1.0",
-      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",
-      "integrity": "sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==",
-      "dev": true,
-      "requires": {
-        "esutils": "^2.0.2"
-      }
-    },
-    "es-abstract": {
-      "version": "1.12.0",
-      "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.12.0.tgz",
-      "integrity": "sha512-C8Fx/0jFmV5IPoMOFPA9P9G5NtqW+4cOPit3MIuvR2t7Ag2K15EJTpxnHAYTzL+aYQJIESYeXZmDBfOBE1HcpA==",
-      "dev": true,
-      "requires": {
-        "es-to-primitive": "^1.1.1",
-        "function-bind": "^1.1.1",
-        "has": "^1.0.1",
-        "is-callable": "^1.1.3",
-        "is-regex": "^1.0.4"
-      }
-    },
-    "es-to-primitive": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.1.1.tgz",
-      "integrity": "sha1-RTVSSKiJeQNLZ5Lhm7gfK3l13Q0=",
-      "dev": true,
-      "requires": {
-        "is-callable": "^1.1.1",
-        "is-date-object": "^1.0.1",
-        "is-symbol": "^1.0.1"
-      }
-    },
-    "es5-ext": {
-      "version": "0.10.45",
-      "resolved": "https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.45.tgz",
-      "integrity": "sha512-FkfM6Vxxfmztilbxxz5UKSD4ICMf5tSpRFtDNtkAhOxZ0EKtX6qwmXNyH/sFyIbX2P/nU5AMiA9jilWsUGJzCQ==",
-      "dev": true,
-      "requires": {
-        "es6-iterator": "~2.0.3",
-        "es6-symbol": "~3.1.1",
-        "next-tick": "1"
-      }
-    },
-    "es6-iterator": {
-      "version": "2.0.3",
-      "resolved": "https://registry.npmjs.org/es6-iterator/-/es6-iterator-2.0.3.tgz",
-      "integrity": "sha1-p96IkUGgWpSwhUQDstCg+/qY87c=",
-      "dev": true,
-      "requires": {
-        "d": "1",
-        "es5-ext": "^0.10.35",
-        "es6-symbol": "^3.1.1"
-      }
-    },
-    "es6-map": {
-      "version": "0.1.5",
-      "resolved": "https://registry.npmjs.org/es6-map/-/es6-map-0.1.5.tgz",
-      "integrity": "sha1-kTbgUD3MBqMBaQ8LsU/042TpSfA=",
-      "dev": true,
-      "requires": {
-        "d": "1",
-        "es5-ext": "~0.10.14",
-        "es6-iterator": "~2.0.1",
-        "es6-set": "~0.1.5",
-        "es6-symbol": "~3.1.1",
-        "event-emitter": "~0.3.5"
-      }
-    },
-    "es6-set": {
-      "version": "0.1.5",
-      "resolved": "https://registry.npmjs.org/es6-set/-/es6-set-0.1.5.tgz",
-      "integrity": "sha1-0rPsXU2ADO2BjbU40ol02wpzzLE=",
-      "dev": true,
-      "requires": {
-        "d": "1",
-        "es5-ext": "~0.10.14",
-        "es6-iterator": "~2.0.1",
-        "es6-symbol": "3.1.1",
-        "event-emitter": "~0.3.5"
-      }
-    },
-    "es6-symbol": {
-      "version": "3.1.1",
-      "resolved": "https://registry.npmjs.org/es6-symbol/-/es6-symbol-3.1.1.tgz",
-      "integrity": "sha1-vwDvT9q2uhtG7Le2KbTH7VcVzHc=",
-      "dev": true,
-      "requires": {
-        "d": "1",
-        "es5-ext": "~0.10.14"
-      }
-    },
-    "es6-weak-map": {
-      "version": "2.0.2",
-      "resolved": "https://registry.npmjs.org/es6-weak-map/-/es6-weak-map-2.0.2.tgz",
-      "integrity": "sha1-XjqzIlH/0VOKH45f+hNXdy+S2W8=",
-      "dev": true,
-      "requires": {
-        "d": "1",
-        "es5-ext": "^0.10.14",
-        "es6-iterator": "^2.0.1",
-        "es6-symbol": "^3.1.1"
-      }
-    },
-    "escape-string-applescript": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/escape-string-applescript/-/escape-string-applescript-1.0.0.tgz",
-      "integrity": "sha1-bxwilCRdgsY7wDM43BmpSqhCiJI=",
-      "dev": true
-    },
-    "escape-string-regexp": {
-      "version": "1.0.5",
-      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
-      "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="
-    },
-    "escope": {
-      "version": "3.6.0",
-      "resolved": "https://registry.npmjs.org/escope/-/escope-3.6.0.tgz",
-      "integrity": "sha1-4Bl16BJ4GhY6ba392AOY3GTIicM=",
-      "dev": true,
-      "requires": {
-        "es6-map": "^0.1.3",
-        "es6-weak-map": "^2.0.1",
-        "esrecurse": "^4.1.0",
-        "estraverse": "^4.1.1"
-      }
-    },
-    "eslint": {
-      "version": "3.19.0",
-      "resolved": "https://registry.npmjs.org/eslint/-/eslint-3.19.0.tgz",
-      "integrity": "sha1-yPxiAcf0DdCJQbh8CFdnOGpnmsw=",
-      "dev": true,
-      "requires": {
-        "babel-code-frame": "^6.16.0",
-        "chalk": "^1.1.3",
-        "concat-stream": "^1.5.2",
-        "debug": "^2.1.1",
-        "doctrine": "^2.0.0",
-        "escope": "^3.6.0",
-        "espree": "^3.4.0",
-        "esquery": "^1.0.0",
-        "estraverse": "^4.2.0",
-        "esutils": "^2.0.2",
-        "file-entry-cache": "^2.0.0",
-        "glob": "^7.0.3",
-        "globals": "^9.14.0",
-        "ignore": "^3.2.0",
-        "imurmurhash": "^0.1.4",
-        "inquirer": "^0.12.0",
-        "is-my-json-valid": "^2.10.0",
-        "is-resolvable": "^1.0.0",
-        "js-yaml": "^3.5.1",
-        "json-stable-stringify": "^1.0.0",
-        "levn": "^0.3.0",
-        "lodash": "^4.0.0",
-        "mkdirp": "^0.5.0",
-        "natural-compare": "^1.4.0",
-        "optionator": "^0.8.2",
-        "path-is-inside": "^1.0.1",
-        "pluralize": "^1.2.1",
-        "progress": "^1.1.8",
-        "require-uncached": "^1.0.2",
-        "shelljs": "^0.7.5",
-        "strip-bom": "^3.0.0",
-        "strip-json-comments": "~2.0.1",
-        "table": "^3.7.8",
-        "text-table": "~0.2.0",
-        "user-home": "^2.0.0"
-      },
-      "dependencies": {
-        "ansi-styles": {
-          "version": "2.2.1",
-          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
-          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
-          "dev": true
-        },
-        "chalk": {
-          "version": "1.1.3",
-          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
-          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
-          "dev": true,
-          "requires": {
-            "ansi-styles": "^2.2.1",
-            "escape-string-regexp": "^1.0.2",
-            "has-ansi": "^2.0.0",
-            "strip-ansi": "^3.0.0",
-            "supports-color": "^2.0.0"
-          }
-        },
-        "supports-color": {
-          "version": "2.0.0",
-          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
-          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
-          "dev": true
-        }
-      }
-    },
-    "eslint-config-i-am-meticulous": {
-      "version": "6.0.1",
-      "resolved": "https://registry.npmjs.org/eslint-config-i-am-meticulous/-/eslint-config-i-am-meticulous-6.0.1.tgz",
-      "integrity": "sha1-M3/z/T/delhHp0fxejjY9spxfDk=",
-      "dev": true,
-      "requires": {
-        "eslint-plugin-import": "^1.7.0"
-      }
-    },
-    "eslint-import-resolver-node": {
-      "version": "0.2.3",
-      "resolved": "https://registry.npmjs.org/eslint-import-resolver-node/-/eslint-import-resolver-node-0.2.3.tgz",
-      "integrity": "sha1-Wt2BBujJKNssuiMrzZ76hG49oWw=",
-      "dev": true,
-      "requires": {
-        "debug": "^2.2.0",
-        "object-assign": "^4.0.1",
-        "resolve": "^1.1.6"
-      }
-    },
-    "eslint-plugin-import": {
-      "version": "1.16.0",
-      "resolved": "https://registry.npmjs.org/eslint-plugin-import/-/eslint-plugin-import-1.16.0.tgz",
-      "integrity": "sha1-svoH68xTUE0PKkR3WC7Iv/GHG58=",
-      "dev": true,
-      "requires": {
-        "builtin-modules": "^1.1.1",
-        "contains-path": "^0.1.0",
-        "debug": "^2.2.0",
-        "doctrine": "1.3.x",
-        "es6-map": "^0.1.3",
-        "es6-set": "^0.1.4",
-        "eslint-import-resolver-node": "^0.2.0",
-        "has": "^1.0.1",
-        "lodash.cond": "^4.3.0",
-        "lodash.endswith": "^4.0.1",
-        "lodash.find": "^4.3.0",
-        "lodash.findindex": "^4.3.0",
-        "minimatch": "^3.0.3",
-        "object-assign": "^4.0.1",
-        "pkg-dir": "^1.0.0",
-        "pkg-up": "^1.0.0"
-      },
-      "dependencies": {
-        "doctrine": {
-          "version": "1.3.0",
-          "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-1.3.0.tgz",
-          "integrity": "sha1-E+dWgrVVGEJCdvfBc3g0Vu+RPSY=",
-          "dev": true,
-          "requires": {
-            "esutils": "^2.0.2",
-            "isarray": "^1.0.0"
-          }
-        }
-      }
-    },
-    "espree": {
-      "version": "3.5.4",
-      "resolved": "https://registry.npmjs.org/espree/-/espree-3.5.4.tgz",
-      "integrity": "sha512-yAcIQxtmMiB/jL32dzEp2enBeidsB7xWPLNiw3IIkpVds1P+h7qF9YwJq1yUNzp2OKXgAprs4F61ih66UsoD1A==",
-      "dev": true,
-      "requires": {
-        "acorn": "^5.5.0",
-        "acorn-jsx": "^3.0.0"
-      }
-    },
-    "esprima": {
-      "version": "4.0.1",
-      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
-      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
-      "dev": true
-    },
-    "esquery": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.0.1.tgz",
-      "integrity": "sha512-SmiyZ5zIWH9VM+SRUReLS5Q8a7GxtRdxEBVZpm98rJM7Sb+A9DVCndXfkeFUd3byderg+EbDkfnevfCwynWaNA==",
-      "dev": true,
-      "requires": {
-        "estraverse": "^4.0.0"
-      }
-    },
-    "esrecurse": {
-      "version": "4.2.1",
-      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.2.1.tgz",
-      "integrity": "sha512-64RBB++fIOAXPw3P9cy89qfMlvZEXZkqqJkjqqXIvzP5ezRZjW+lPWjw35UX/3EhUPFYbg5ER4JYgDw4007/DQ==",
-      "dev": true,
-      "requires": {
-        "estraverse": "^4.1.0"
-      }
-    },
-    "estraverse": {
-      "version": "4.2.0",
-      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.2.0.tgz",
-      "integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM=",
-      "dev": true
-    },
-    "esutils": {
-      "version": "2.0.2",
-      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.2.tgz",
-      "integrity": "sha1-Cr9PHKpbyx96nYrMbepPqqBLrJs=",
-      "dev": true
-    },
-    "event-emitter": {
-      "version": "0.3.5",
-      "resolved": "https://registry.npmjs.org/event-emitter/-/event-emitter-0.3.5.tgz",
-      "integrity": "sha1-34xp7vFkeSPHFXuc6DhAYQsCzDk=",
-      "dev": true,
-      "requires": {
-        "d": "1",
-        "es5-ext": "~0.10.14"
-      }
-    },
-    "execa": {
-      "version": "0.2.2",
-      "resolved": "https://registry.npmjs.org/execa/-/execa-0.2.2.tgz",
-      "integrity": "sha1-4urUcsLDGq1vc/GslW7vReEjIMs=",
-      "dev": true,
-      "requires": {
-        "cross-spawn-async": "^2.1.1",
-        "npm-run-path": "^1.0.0",
-        "object-assign": "^4.0.1",
-        "path-key": "^1.0.0",
-        "strip-eof": "^1.0.0"
-      }
-    },
-    "execon": {
-      "version": "1.2.9",
-      "resolved": "https://registry.npmjs.org/execon/-/execon-1.2.9.tgz",
-      "integrity": "sha1-bbETM9zIJPHxPnMX/tDZSi8mSR8=",
-      "dev": true
-    },
-    "exit-hook": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/exit-hook/-/exit-hook-1.1.1.tgz",
-      "integrity": "sha1-8FyiM7SMBdVP/wd2XfhQfpXAL/g=",
-      "dev": true
-    },
-    "fast-levenshtein": {
-      "version": "2.0.6",
-      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
-      "integrity": "sha1-PYpcZog6FqMMqGQ+hR8Zuqd5eRc=",
-      "dev": true
-    },
-    "figures": {
-      "version": "1.7.0",
-      "resolved": "https://registry.npmjs.org/figures/-/figures-1.7.0.tgz",
-      "integrity": "sha1-y+Hjr/zxzUS4DK3+0o3Hk6lwHS4=",
-      "dev": true,
-      "requires": {
-        "escape-string-regexp": "^1.0.5",
-        "object-assign": "^4.1.0"
-      }
-    },
-    "file-entry-cache": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-2.0.0.tgz",
-      "integrity": "sha1-w5KZDD5oR4PYOLjISkXYoEhFg2E=",
-      "dev": true,
-      "requires": {
-        "flat-cache": "^1.2.1",
-        "object-assign": "^4.0.1"
-      }
-    },
-    "find-up": {
-      "version": "1.1.2",
-      "resolved": "https://registry.npmjs.org/find-up/-/find-up-1.1.2.tgz",
-      "integrity": "sha1-ay6YIrGizgpgq2TWEOzK1TyyTQ8=",
-      "dev": true,
-      "requires": {
-        "path-exists": "^2.0.0",
-        "pinkie-promise": "^2.0.0"
-      }
-    },
-    "flat-cache": {
-      "version": "1.3.0",
-      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-1.3.0.tgz",
-      "integrity": "sha1-0wMLMrOBVPTjt+nHCfSQ9++XxIE=",
-      "dev": true,
-      "requires": {
-        "circular-json": "^0.3.1",
-        "del": "^2.0.2",
-        "graceful-fs": "^4.1.2",
-        "write": "^0.2.1"
-      }
-    },
-    "for-each": {
-      "version": "0.3.3",
-      "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.3.tgz",
-      "integrity": "sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==",
-      "dev": true,
-      "requires": {
-        "is-callable": "^1.1.3"
-      }
-    },
-    "foreach": {
-      "version": "2.0.5",
-      "resolved": "https://registry.npmjs.org/foreach/-/foreach-2.0.5.tgz",
-      "integrity": "sha1-C+4AUBiusmDQo6865ljdATbsG5k=",
-      "dev": true
-    },
-    "fs-extra": {
-      "version": "0.26.7",
-      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-0.26.7.tgz",
-      "integrity": "sha1-muH92UiXeY7at20JGM9C0MMYT6k=",
-      "dev": true,
-      "requires": {
-        "graceful-fs": "^4.1.2",
-        "jsonfile": "^2.1.0",
-        "klaw": "^1.0.0",
-        "path-is-absolute": "^1.0.0",
-        "rimraf": "^2.2.8"
-      }
-    },
-    "fs.realpath": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
-      "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8=",
-      "dev": true
-    },
-    "function-bind": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
-      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==",
-      "dev": true
-    },
-    "generate-function": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/generate-function/-/generate-function-2.0.0.tgz",
-      "integrity": "sha1-aFj+fAlpt9TpCTM3ZHrHn2DfvnQ=",
-      "dev": true
-    },
-    "generate-object-property": {
-      "version": "1.2.0",
-      "resolved": "https://registry.npmjs.org/generate-object-property/-/generate-object-property-1.2.0.tgz",
-      "integrity": "sha1-nA4cQDCM6AT0eDYYuTf6iPmdUNA=",
-      "dev": true,
-      "requires": {
-        "is-property": "^1.0.0"
-      }
-    },
-    "github-release-from-changelog": {
-      "version": "1.3.2",
-      "resolved": "https://registry.npmjs.org/github-release-from-changelog/-/github-release-from-changelog-1.3.2.tgz",
-      "integrity": "sha512-3Cj5zazWfk9heJzBSXxBsh9xQSYt8ZOseresfNeHewFVC2g0Au9181xob9eXTv4hRysi9k3gRVCXOUmBH+J2bA==",
-      "dev": true,
-      "requires": {
-        "grizzly": "^3.0.3",
-        "minimist": "^1.2.0"
-      },
-      "dependencies": {
-        "minimist": {
-          "version": "1.2.0",
-          "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz",
-          "integrity": "sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ=",
-          "dev": true
-        }
-      }
-    },
-    "glob": {
-      "version": "7.1.2",
-      "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.2.tgz",
-      "integrity": "sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==",
-      "dev": true,
-      "requires": {
-        "fs.realpath": "^1.0.0",
-        "inflight": "^1.0.4",
-        "inherits": "2",
-        "minimatch": "^3.0.4",
-        "once": "^1.3.0",
-        "path-is-absolute": "^1.0.0"
-      }
-    },
-    "globals": {
-      "version": "9.18.0",
-      "resolved": "https://registry.npmjs.org/globals/-/globals-9.18.0.tgz",
-      "integrity": "sha512-S0nG3CLEQiY/ILxqtztTWH/3iRRdyBLw6KMDxnKMchrtbj2OFmehVh0WUCfW3DUrIgx/qFrJPICrq4Z4sTR9UQ==",
-      "dev": true
-    },
-    "globby": {
-      "version": "5.0.0",
-      "resolved": "https://registry.npmjs.org/globby/-/globby-5.0.0.tgz",
-      "integrity": "sha1-69hGZ8oNuzMLmbz8aOrCvFQ3Dg0=",
-      "dev": true,
-      "requires": {
-        "array-union": "^1.0.1",
-        "arrify": "^1.0.0",
-        "glob": "^7.0.3",
-        "object-assign": "^4.0.1",
-        "pify": "^2.0.0",
-        "pinkie-promise": "^2.0.0"
-      }
-    },
-    "graceful-fs": {
-      "version": "4.1.11",
-      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.11.tgz",
-      "integrity": "sha1-Dovf5NHduIVNZOBOp8AOKgJuVlg=",
-      "dev": true
-    },
-    "grizzly": {
-      "version": "3.0.3",
-      "resolved": "https://registry.npmjs.org/grizzly/-/grizzly-3.0.3.tgz",
-      "integrity": "sha512-IGcSYOg8W75e1/92oHy1RgO4fiWxWYi94C5nwjJwTe5usRx241LkqiO4923LVLwkon7ro69ZKcCbI4ox25pDOw==",
-      "dev": true,
-      "requires": {
-        "@octokit/rest": "^14.0.7",
-        "checkup": "^1.3.0",
-        "debug": "^3.0.0",
-        "execon": "^1.2.0",
-        "minimist": "^1.2.0",
-        "readjson": "^1.1.0"
-      },
-      "dependencies": {
-        "debug": {
-          "version": "3.1.0",
-          "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
-          "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
-          "dev": true,
-          "requires": {
-            "ms": "2.0.0"
-          }
-        },
-        "minimist": {
-          "version": "1.2.0",
-          "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz",
-          "integrity": "sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ=",
-          "dev": true
-        }
-      }
-    },
-    "has": {
-      "version": "1.0.3",
-      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
-      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
-      "dev": true,
-      "requires": {
-        "function-bind": "^1.1.1"
-      }
-    },
-    "has-ansi": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz",
-      "integrity": "sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=",
-      "dev": true,
-      "requires": {
-        "ansi-regex": "^2.0.0"
-      }
-    },
-    "has-flag": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
-      "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0="
-    },
-    "ignore": {
-      "version": "3.3.10",
-      "resolved": "https://registry.npmjs.org/ignore/-/ignore-3.3.10.tgz",
-      "integrity": "sha512-Pgs951kaMm5GXP7MOvxERINe3gsaVjUWFm+UZPSq9xYriQAksyhg0csnS0KXSNRD5NmNdapXEpjxG49+AKh/ug==",
-      "dev": true
-    },
-    "imurmurhash": {
-      "version": "0.1.4",
-      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
-      "integrity": "sha1-khi5srkoojixPcT7a21XbyMUU+o=",
-      "dev": true
-    },
-    "inflight": {
-      "version": "1.0.6",
-      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
-      "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",
-      "dev": true,
-      "requires": {
-        "once": "^1.3.0",
-        "wrappy": "1"
-      }
-    },
-    "inherits": {
-      "version": "2.0.3",
-      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
-      "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
-      "dev": true
-    },
-    "inquirer": {
-      "version": "0.12.0",
-      "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-0.12.0.tgz",
-      "integrity": "sha1-HvK/1jUE3wvHV4X/+MLEHfEvB34=",
-      "dev": true,
-      "requires": {
-        "ansi-escapes": "^1.1.0",
-        "ansi-regex": "^2.0.0",
-        "chalk": "^1.0.0",
-        "cli-cursor": "^1.0.1",
-        "cli-width": "^2.0.0",
-        "figures": "^1.3.5",
-        "lodash": "^4.3.0",
-        "readline2": "^1.0.1",
-        "run-async": "^0.1.0",
-        "rx-lite": "^3.1.2",
-        "string-width": "^1.0.1",
-        "strip-ansi": "^3.0.0",
-        "through": "^2.3.6"
-      },
-      "dependencies": {
-        "ansi-styles": {
-          "version": "2.2.1",
-          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
-          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
-          "dev": true
-        },
-        "chalk": {
-          "version": "1.1.3",
-          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
-          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
-          "dev": true,
-          "requires": {
-            "ansi-styles": "^2.2.1",
-            "escape-string-regexp": "^1.0.2",
-            "has-ansi": "^2.0.0",
-            "strip-ansi": "^3.0.0",
-            "supports-color": "^2.0.0"
-          }
-        },
-        "supports-color": {
-          "version": "2.0.0",
-          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
-          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
-          "dev": true
-        }
-      }
-    },
-    "interpret": {
-      "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/interpret/-/interpret-1.1.0.tgz",
-      "integrity": "sha1-ftGxQQxqDg94z5XTuEQMY/eLhhQ=",
-      "dev": true
-    },
-    "is-array-buffer": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-1.0.1.tgz",
-      "integrity": "sha512-lj035IqdAwsodoRGs9/8+Kn3HPoz9CTuZbcw63afugWonxigvUVeHY5d6Ve1O+s1N3RCk7txo2TIWQLbU0SuNA==",
-      "dev": true
-    },
-    "is-callable": {
-      "version": "1.1.4",
-      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.1.4.tgz",
-      "integrity": "sha512-r5p9sxJjYnArLjObpjA4xu5EKI3CuKHkJXMhT7kwbpUyIFD1n5PMAsoPvWnvtZiNz7LjkYDRZhd7FlI0eMijEA==",
-      "dev": true
-    },
-    "is-date-object": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.1.tgz",
-      "integrity": "sha1-mqIOtq7rv/d/vTPnTKAbM1gdOhY=",
-      "dev": true
-    },
-    "is-fullwidth-code-point": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
-      "integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",
-      "dev": true,
-      "requires": {
-        "number-is-nan": "^1.0.0"
-      }
-    },
-    "is-my-ip-valid": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/is-my-ip-valid/-/is-my-ip-valid-1.0.0.tgz",
-      "integrity": "sha512-gmh/eWXROncUzRnIa1Ubrt5b8ep/MGSnfAUI3aRp+sqTCs1tv1Isl8d8F6JmkN3dXKc3ehZMrtiPN9eL03NuaQ==",
-      "dev": true
-    },
-    "is-my-json-valid": {
-      "version": "2.18.0",
-      "resolved": "https://registry.npmjs.org/is-my-json-valid/-/is-my-json-valid-2.18.0.tgz",
-      "integrity": "sha512-DWT87JHCSdCPCxbqBpS6Z2ajAt+MvrJq8I4xrpQljCvzODO5/fiquBp20a3sN6yCJvFbCRyYvJOHjpzkPTKJyA==",
-      "dev": true,
-      "requires": {
-        "generate-function": "^2.0.0",
-        "generate-object-property": "^1.1.0",
-        "is-my-ip-valid": "^1.0.0",
-        "jsonpointer": "^4.0.0",
-        "xtend": "^4.0.0"
-      }
-    },
-    "is-path-cwd": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/is-path-cwd/-/is-path-cwd-1.0.0.tgz",
-      "integrity": "sha1-0iXsIxMuie3Tj9p2dHLmLmXxEG0=",
-      "dev": true
-    },
-    "is-path-in-cwd": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/is-path-in-cwd/-/is-path-in-cwd-1.0.1.tgz",
-      "integrity": "sha512-FjV1RTW48E7CWM7eE/J2NJvAEEVektecDBVBE5Hh3nM1Jd0kvhHtX68Pr3xsDf857xt3Y4AkwVULK1Vku62aaQ==",
-      "dev": true,
-      "requires": {
-        "is-path-inside": "^1.0.0"
-      }
-    },
-    "is-path-inside": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-1.0.1.tgz",
-      "integrity": "sha1-jvW33lBDej/cprToZe96pVy0gDY=",
-      "dev": true,
-      "requires": {
-        "path-is-inside": "^1.0.1"
-      }
-    },
-    "is-property": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/is-property/-/is-property-1.0.2.tgz",
-      "integrity": "sha1-V/4cTkhHTt1lsJkR8msc1Ald2oQ=",
-      "dev": true
-    },
-    "is-regex": {
-      "version": "1.0.4",
-      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.0.4.tgz",
-      "integrity": "sha1-VRdIm1RwkbCTDglWVM7SXul+lJE=",
-      "dev": true,
-      "requires": {
-        "has": "^1.0.1"
-      }
-    },
-    "is-resolvable": {
-      "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/is-resolvable/-/is-resolvable-1.1.0.tgz",
-      "integrity": "sha512-qgDYXFSR5WvEfuS5dMj6oTMEbrrSaM0CrFk2Yiq/gXnBvD9pMa2jGXxyhGLfvhZpuMZe18CJpFxAt3CRs42NMg==",
-      "dev": true
-    },
-    "is-stream": {
-      "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-1.1.0.tgz",
-      "integrity": "sha1-EtSj3U5o4Lec6428hBc66A2RykQ=",
-      "dev": true
-    },
-    "is-symbol": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.0.1.tgz",
-      "integrity": "sha1-PMWfAAJRlLarLjjbrmaJJWtmBXI=",
-      "dev": true
-    },
-    "isarray": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
-      "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
-      "dev": true
-    },
-    "isexe": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
-      "integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=",
-      "dev": true
-    },
-    "js-tokens": {
-      "version": "3.0.2",
-      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-3.0.2.tgz",
-      "integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls=",
-      "dev": true
-    },
-    "js-yaml": {
-      "version": "3.12.0",
-      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.12.0.tgz",
-      "integrity": "sha512-PIt2cnwmPfL4hKNwqeiuz4bKfnzHTBv6HyVgjahA6mPLwPDzjDWrplJBMjHUFxku/N3FlmrbyPclad+I+4mJ3A==",
-      "dev": true,
-      "requires": {
-        "argparse": "^1.0.7",
-        "esprima": "^4.0.0"
-      }
-    },
-    "json-stable-stringify": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/json-stable-stringify/-/json-stable-stringify-1.0.1.tgz",
-      "integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",
-      "dev": true,
-      "requires": {
-        "jsonify": "~0.0.0"
-      }
-    },
-    "jsonfile": {
-      "version": "2.4.0",
-      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-2.4.0.tgz",
-      "integrity": "sha1-NzaitCi4e72gzIO1P6PWM6NcKug=",
-      "dev": true,
-      "requires": {
-        "graceful-fs": "^4.1.6"
-      }
-    },
-    "jsonify": {
-      "version": "0.0.0",
-      "resolved": "https://registry.npmjs.org/jsonify/-/jsonify-0.0.0.tgz",
-      "integrity": "sha1-LHS27kHZPKUbe1qu6PUDYx0lKnM=",
-      "dev": true
-    },
-    "jsonpointer": {
-      "version": "4.0.1",
-      "resolved": "https://registry.npmjs.org/jsonpointer/-/jsonpointer-4.0.1.tgz",
-      "integrity": "sha1-T9kss04OnbPInIYi7PUfm5eMbLk=",
-      "dev": true
-    },
-    "klaw": {
-      "version": "1.3.1",
-      "resolved": "https://registry.npmjs.org/klaw/-/klaw-1.3.1.tgz",
-      "integrity": "sha1-QIhDO0azsbolnXh4XY6W9zugJDk=",
-      "dev": true,
-      "requires": {
-        "graceful-fs": "^4.1.9"
-      }
-    },
-    "levn": {
-      "version": "0.3.0",
-      "resolved": "https://registry.npmjs.org/levn/-/levn-0.3.0.tgz",
-      "integrity": "sha1-OwmSTt+fCDwEkP3UwLxEIeBHZO4=",
-      "dev": true,
-      "requires": {
-        "prelude-ls": "~1.1.2",
-        "type-check": "~0.3.2"
-      }
-    },
-    "lodash": {
-      "version": "4.17.10",
-      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.10.tgz",
-      "integrity": "sha512-UejweD1pDoXu+AD825lWwp4ZGtSwgnpZxb3JDViD7StjQz+Nb/6l093lx4OQ0foGWNRoc19mWy7BzL+UAK2iVg==",
-      "dev": true
-    },
-    "lodash.cond": {
-      "version": "4.5.2",
-      "resolved": "https://registry.npmjs.org/lodash.cond/-/lodash.cond-4.5.2.tgz",
-      "integrity": "sha1-9HGh2khr5g9quVXRcRVSPdHSVdU=",
-      "dev": true
-    },
-    "lodash.endswith": {
-      "version": "4.2.1",
-      "resolved": "https://registry.npmjs.org/lodash.endswith/-/lodash.endswith-4.2.1.tgz",
-      "integrity": "sha1-/tWawXOO0+I27dcGTsRWRIs3vAk=",
-      "dev": true
-    },
-    "lodash.find": {
-      "version": "4.6.0",
-      "resolved": "https://registry.npmjs.org/lodash.find/-/lodash.find-4.6.0.tgz",
-      "integrity": "sha1-ywcE1Hq3F4n/oN6Ll92Sb7iLE7E=",
-      "dev": true
-    },
-    "lodash.findindex": {
-      "version": "4.6.0",
-      "resolved": "https://registry.npmjs.org/lodash.findindex/-/lodash.findindex-4.6.0.tgz",
-      "integrity": "sha1-oyRd7mH7m24GJLU1ElYku2nBEQY=",
-      "dev": true
-    },
-    "lru-cache": {
-      "version": "4.1.3",
-      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.3.tgz",
-      "integrity": "sha512-fFEhvcgzuIoJVUF8fYr5KR0YqxD238zgObTps31YdADwPPAp82a4M8TrckkWyx7ekNlf9aBcVn81cFwwXngrJA==",
-      "dev": true,
-      "requires": {
-        "pseudomap": "^1.0.2",
-        "yallist": "^2.1.2"
-      }
-    },
-    "minimatch": {
-      "version": "3.0.4",
-      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",
-      "integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",
-      "dev": true,
-      "requires": {
-        "brace-expansion": "^1.1.7"
-      }
-    },
-    "minimist": {
-      "version": "0.0.8",
-      "resolved": "https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz",
-      "integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=",
-      "dev": true
-    },
-    "mkdirp": {
-      "version": "0.5.1",
-      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz",
-      "integrity": "sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=",
-      "dev": true,
-      "requires": {
-        "minimist": "0.0.8"
-      }
-    },
-    "mount-point": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/mount-point/-/mount-point-3.0.0.tgz",
-      "integrity": "sha1-Zly57evoDREOZY21bDHQrvUaj5c=",
-      "dev": true,
-      "requires": {
-        "@sindresorhus/df": "^1.0.1",
-        "pify": "^2.3.0",
-        "pinkie-promise": "^2.0.1"
-      },
-      "dependencies": {
-        "@sindresorhus/df": {
-          "version": "1.0.1",
-          "resolved": "https://registry.npmjs.org/@sindresorhus/df/-/df-1.0.1.tgz",
-          "integrity": "sha1-xptm9S9vzdKHyAffIQMF2694UA0=",
-          "dev": true
-        }
-      }
-    },
-    "ms": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
-      "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
-      "dev": true
-    },
-    "mute-stream": {
-      "version": "0.0.5",
-      "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.5.tgz",
-      "integrity": "sha1-j7+rsKmKJT0xhDMfno3rc3L6xsA=",
-      "dev": true
-    },
-    "natural-compare": {
-      "version": "1.4.0",
-      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
-      "integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc=",
-      "dev": true
-    },
-    "next-tick": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/next-tick/-/next-tick-1.0.0.tgz",
-      "integrity": "sha1-yobR/ogoFpsBICCOPchCS524NCw=",
-      "dev": true
-    },
-    "npm-run-path": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-1.0.0.tgz",
-      "integrity": "sha1-9cMr9ZX+ga6Sfa7FLoL4sACsPI8=",
-      "dev": true,
-      "requires": {
-        "path-key": "^1.0.0"
-      }
-    },
-    "npmpub": {
-      "version": "3.1.0",
-      "resolved": "https://registry.npmjs.org/npmpub/-/npmpub-3.1.0.tgz",
-      "integrity": "sha1-c0OoAf+xi/0s7CM1hLkUWa5O4Uk=",
-      "dev": true,
-      "requires": {
-        "chalk": "^1.1.1",
-        "github-release-from-changelog": "^1.1.1",
-        "minimist": "^1.2.0",
-        "shelljs": "^0.5.3",
-        "trash": "^3.4.1"
-      },
-      "dependencies": {
-        "ansi-styles": {
-          "version": "2.2.1",
-          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
-          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
-          "dev": true
-        },
-        "chalk": {
-          "version": "1.1.3",
-          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
-          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
-          "dev": true,
-          "requires": {
-            "ansi-styles": "^2.2.1",
-            "escape-string-regexp": "^1.0.2",
-            "has-ansi": "^2.0.0",
-            "strip-ansi": "^3.0.0",
-            "supports-color": "^2.0.0"
-          }
-        },
-        "minimist": {
-          "version": "1.2.0",
-          "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz",
-          "integrity": "sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ=",
-          "dev": true
-        },
-        "shelljs": {
-          "version": "0.5.3",
-          "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.5.3.tgz",
-          "integrity": "sha1-xUmCuZbHbvDB5rWfvcWCX1txMRM=",
-          "dev": true
-        },
-        "supports-color": {
-          "version": "2.0.0",
-          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
-          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
-          "dev": true
-        }
-      }
-    },
-    "number-is-nan": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz",
-      "integrity": "sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0=",
-      "dev": true
-    },
-    "object-assign": {
-      "version": "4.1.1",
-      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
-      "integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=",
-      "dev": true
-    },
-    "object-inspect": {
-      "version": "1.6.0",
-      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.6.0.tgz",
-      "integrity": "sha512-GJzfBZ6DgDAmnuaM3104jR4s1Myxr3Y3zfIyN4z3UdqN69oSRacNK8UhnobDdC+7J2AHCjGwxQubNJfE70SXXQ==",
-      "dev": true
-    },
-    "object-keys": {
-      "version": "1.0.12",
-      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.0.12.tgz",
-      "integrity": "sha512-FTMyFUm2wBcGHnH2eXmz7tC6IwlqQZ6mVZ+6dm6vZ4IQIHjs6FdNsQBuKGPuUUUY6NfJw2PshC08Tn6LzLDOag==",
-      "dev": true
-    },
-    "once": {
-      "version": "1.4.0",
-      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
-      "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
-      "dev": true,
-      "requires": {
-        "wrappy": "1"
-      }
-    },
-    "onetime": {
-      "version": "1.1.0",
-      "resolved": "http://registry.npmjs.org/onetime/-/onetime-1.1.0.tgz",
-      "integrity": "sha1-ofeDj4MUxRbwXs78vEzP4EtO14k=",
-      "dev": true
-    },
-    "optionator": {
-      "version": "0.8.2",
-      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.8.2.tgz",
-      "integrity": "sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=",
-      "dev": true,
-      "requires": {
-        "deep-is": "~0.1.3",
-        "fast-levenshtein": "~2.0.4",
-        "levn": "~0.3.0",
-        "prelude-ls": "~1.1.2",
-        "type-check": "~0.3.2",
-        "wordwrap": "~1.0.0"
-      }
-    },
-    "os-homedir": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz",
-      "integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M=",
-      "dev": true
-    },
-    "path-exists": {
-      "version": "2.1.0",
-      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-2.1.0.tgz",
-      "integrity": "sha1-D+tsZPD8UY2adU3V77YscCJ2H0s=",
-      "dev": true,
-      "requires": {
-        "pinkie-promise": "^2.0.0"
-      }
-    },
-    "path-is-absolute": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
-      "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18=",
-      "dev": true
-    },
-    "path-is-inside": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/path-is-inside/-/path-is-inside-1.0.2.tgz",
-      "integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM=",
-      "dev": true
-    },
-    "path-key": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/path-key/-/path-key-1.0.0.tgz",
-      "integrity": "sha1-XVPVeAGWRsDWiADbThRua9wqx68=",
-      "dev": true
-    },
-    "path-parse": {
-      "version": "1.0.6",
-      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.6.tgz",
-      "integrity": "sha512-GSmOT2EbHrINBf9SR7CDELwlJ8AENk3Qn7OikK4nFYAu3Ote2+JYNVvkpAEQm3/TLNEJFD/xZJjzyxg3KBWOzw==",
-      "dev": true
-    },
-    "pify": {
-      "version": "2.3.0",
-      "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
-      "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw=",
-      "dev": true
-    },
-    "pinkie": {
-      "version": "2.0.4",
-      "resolved": "https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz",
-      "integrity": "sha1-clVrgM+g1IqXToDnckjoDtT3+HA=",
-      "dev": true
-    },
-    "pinkie-promise": {
-      "version": "2.0.1",
-      "resolved": "https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz",
-      "integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
-      "dev": true,
-      "requires": {
-        "pinkie": "^2.0.0"
-      }
-    },
-    "pkg-dir": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-1.0.0.tgz",
-      "integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",
-      "dev": true,
-      "requires": {
-        "find-up": "^1.0.0"
-      }
-    },
-    "pkg-up": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/pkg-up/-/pkg-up-1.0.0.tgz",
-      "integrity": "sha1-Pgj7RhUlxEIWJKM7n35tCvWwWiY=",
-      "dev": true,
-      "requires": {
-        "find-up": "^1.0.0"
-      }
-    },
-    "pluralize": {
-      "version": "1.2.1",
-      "resolved": "https://registry.npmjs.org/pluralize/-/pluralize-1.2.1.tgz",
-      "integrity": "sha1-0aIUg/0iu0HlihL6NCGCMUCJfEU=",
-      "dev": true
-    },
-    "postcss": {
-      "version": "7.0.2",
-      "resolved": "https://registry.npmjs.org/postcss/-/postcss-7.0.2.tgz",
-      "integrity": "sha512-fmaUY5370keLUTx+CnwRxtGiuFTcNBLQBqr1oE3WZ/euIYmGAo0OAgOhVJ3ByDnVmOR3PK+0V9VebzfjRIUcqw==",
-      "requires": {
-        "chalk": "^2.4.1",
-        "source-map": "^0.6.1",
-        "supports-color": "^5.4.0"
-      }
-    },
-    "prelude-ls": {
-      "version": "1.1.2",
-      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.1.2.tgz",
-      "integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ=",
-      "dev": true
-    },
-    "process-nextick-args": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.0.tgz",
-      "integrity": "sha512-MtEC1TqN0EU5nephaJ4rAtThHtC86dNN9qCuEhtshvpVBkAW5ZO7BASN9REnF9eoXGcRub+pFuKEpOHE+HbEMw==",
-      "dev": true
-    },
-    "progress": {
-      "version": "1.1.8",
-      "resolved": "https://registry.npmjs.org/progress/-/progress-1.1.8.tgz",
-      "integrity": "sha1-4mDHj2Fhzdmw5WzD4Khd4Xx6V74=",
-      "dev": true
-    },
-    "pseudomap": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz",
-      "integrity": "sha1-8FKijacOYYkX7wqKw0wa5aaChrM=",
-      "dev": true
-    },
-    "readable-stream": {
-      "version": "2.3.6",
-      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz",
-      "integrity": "sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==",
-      "dev": true,
-      "requires": {
-        "core-util-is": "~1.0.0",
-        "inherits": "~2.0.3",
-        "isarray": "~1.0.0",
-        "process-nextick-args": "~2.0.0",
-        "safe-buffer": "~5.1.1",
-        "string_decoder": "~1.1.1",
-        "util-deprecate": "~1.0.1"
-      }
-    },
-    "readjson": {
-      "version": "1.1.4",
-      "resolved": "https://registry.npmjs.org/readjson/-/readjson-1.1.4.tgz",
-      "integrity": "sha512-H4dRk2S67w3HtE1apnw5wlHpN9qkJ0pen0AcEvyAfnrPfskZIyUOYLXpfN6olDQZI+eUlxg0Yo4lJ2bymujOUA==",
-      "dev": true,
-      "requires": {
-        "try-catch": "^2.0.0"
-      }
-    },
-    "readline2": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/readline2/-/readline2-1.0.1.tgz",
-      "integrity": "sha1-QQWWCP/BVHV7cV2ZidGZ/783LjU=",
-      "dev": true,
-      "requires": {
-        "code-point-at": "^1.0.0",
-        "is-fullwidth-code-point": "^1.0.0",
-        "mute-stream": "0.0.5"
-      }
-    },
-    "rechoir": {
-      "version": "0.6.2",
-      "resolved": "https://registry.npmjs.org/rechoir/-/rechoir-0.6.2.tgz",
-      "integrity": "sha1-hSBLVNuoLVdC4oyWdW70OvUOM4Q=",
-      "dev": true,
-      "requires": {
-        "resolve": "^1.1.6"
-      }
-    },
-    "require-uncached": {
-      "version": "1.0.3",
-      "resolved": "https://registry.npmjs.org/require-uncached/-/require-uncached-1.0.3.tgz",
-      "integrity": "sha1-Tg1W1slmL9MeQwEcS5WqSZVUIdM=",
-      "dev": true,
-      "requires": {
-        "caller-path": "^0.1.0",
-        "resolve-from": "^1.0.0"
-      }
-    },
-    "resolve": {
-      "version": "1.8.1",
-      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.8.1.tgz",
-      "integrity": "sha512-AicPrAC7Qu1JxPCZ9ZgCZlY35QgFnNqc+0LtbRNxnVw4TXvjQ72wnuL9JQcEBgXkI9JM8MsT9kaQoHcpCRJOYA==",
-      "dev": true,
-      "requires": {
-        "path-parse": "^1.0.5"
-      }
-    },
-    "resolve-from": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-1.0.1.tgz",
-      "integrity": "sha1-Jsv+k10a7uq7Kbw/5a6wHpPUQiY=",
-      "dev": true
-    },
-    "restore-cursor": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-1.0.1.tgz",
-      "integrity": "sha1-NGYfRohjJ/7SmRR5FSJS35LapUE=",
-      "dev": true,
-      "requires": {
-        "exit-hook": "^1.0.0",
-        "onetime": "^1.0.0"
-      }
-    },
-    "resumer": {
-      "version": "0.0.0",
-      "resolved": "https://registry.npmjs.org/resumer/-/resumer-0.0.0.tgz",
-      "integrity": "sha1-8ej0YeQGS6Oegq883CqMiT0HZ1k=",
-      "dev": true,
-      "requires": {
-        "through": "~2.3.4"
-      }
-    },
-    "rimraf": {
-      "version": "2.6.2",
-      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.6.2.tgz",
-      "integrity": "sha512-lreewLK/BlghmxtfH36YYVg1i8IAce4TI7oao75I1g245+6BctqTVQiBP3YUJ9C6DQOXJmkYR9X9fCLtCOJc5w==",
-      "dev": true,
-      "requires": {
-        "glob": "^7.0.5"
-      }
-    },
-    "run-applescript": {
-      "version": "2.1.0",
-      "resolved": "https://registry.npmjs.org/run-applescript/-/run-applescript-2.1.0.tgz",
-      "integrity": "sha1-O/8sz5W2zqy0lyPlUPADcdYYUQ0=",
-      "dev": true,
-      "requires": {
-        "pify": "^2.2.0",
-        "pinkie-promise": "^2.0.0"
-      }
-    },
-    "run-async": {
-      "version": "0.1.0",
-      "resolved": "https://registry.npmjs.org/run-async/-/run-async-0.1.0.tgz",
-      "integrity": "sha1-yK1KXhEGYeQCp9IbUw4AnyX444k=",
-      "dev": true,
-      "requires": {
-        "once": "^1.3.0"
-      }
-    },
-    "rx-lite": {
-      "version": "3.1.2",
-      "resolved": "https://registry.npmjs.org/rx-lite/-/rx-lite-3.1.2.tgz",
-      "integrity": "sha1-Gc5QLKVyZl87ZHsQk5+X/RYV8QI=",
-      "dev": true
-    },
-    "safe-buffer": {
-      "version": "5.1.2",
-      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
-      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
-      "dev": true
-    },
-    "shelljs": {
-      "version": "0.7.8",
-      "resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.7.8.tgz",
-      "integrity": "sha1-3svPh0sNHl+3LhSxZKloMEjprLM=",
-      "dev": true,
-      "requires": {
-        "glob": "^7.0.0",
-        "interpret": "^1.0.0",
-        "rechoir": "^0.6.2"
-      }
-    },
-    "slice-ansi": {
-      "version": "0.0.4",
-      "resolved": "https://registry.npmjs.org/slice-ansi/-/slice-ansi-0.0.4.tgz",
-      "integrity": "sha1-7b+JA/ZvfOL46v1s7tZeJkyDGzU=",
-      "dev": true
-    },
-    "source-map": {
-      "version": "0.6.1",
-      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
-      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="
-    },
-    "sprintf-js": {
-      "version": "1.0.3",
-      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
-      "integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=",
-      "dev": true
-    },
-    "string-width": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
-      "integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",
-      "dev": true,
-      "requires": {
-        "code-point-at": "^1.0.0",
-        "is-fullwidth-code-point": "^1.0.0",
-        "strip-ansi": "^3.0.0"
-      }
-    },
-    "string.prototype.trim": {
-      "version": "1.1.2",
-      "resolved": "https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.1.2.tgz",
-      "integrity": "sha1-0E3iyJ4Tf019IG8Ia17S+ua+jOo=",
-      "dev": true,
-      "requires": {
-        "define-properties": "^1.1.2",
-        "es-abstract": "^1.5.0",
-        "function-bind": "^1.0.2"
-      }
-    },
-    "string_decoder": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
-      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
-      "dev": true,
-      "requires": {
-        "safe-buffer": "~5.1.0"
-      }
-    },
-    "strip-ansi": {
-      "version": "3.0.1",
-      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
-      "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
-      "dev": true,
-      "requires": {
-        "ansi-regex": "^2.0.0"
-      }
-    },
-    "strip-bom": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
-      "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM=",
-      "dev": true
-    },
-    "strip-eof": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/strip-eof/-/strip-eof-1.0.0.tgz",
-      "integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8=",
-      "dev": true
-    },
-    "strip-json-comments": {
-      "version": "2.0.1",
-      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz",
-      "integrity": "sha1-PFMZQukIwml8DsNEhYwobHygpgo=",
-      "dev": true
-    },
-    "supports-color": {
-      "version": "5.4.0",
-      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.4.0.tgz",
-      "integrity": "sha512-zjaXglF5nnWpsq470jSv6P9DwPvgLkuapYmfDm3JWOm0vkNTVF2tI4UrN2r6jH1qM/uc/WtxYY1hYoA2dOKj5w==",
-      "requires": {
-        "has-flag": "^3.0.0"
-      }
-    },
-    "table": {
-      "version": "3.8.3",
-      "resolved": "https://registry.npmjs.org/table/-/table-3.8.3.tgz",
-      "integrity": "sha1-K7xULw/amGGnVdOUf+/Ys/UThV8=",
-      "dev": true,
-      "requires": {
-        "ajv": "^4.7.0",
-        "ajv-keywords": "^1.0.0",
-        "chalk": "^1.1.1",
-        "lodash": "^4.0.0",
-        "slice-ansi": "0.0.4",
-        "string-width": "^2.0.0"
-      },
-      "dependencies": {
-        "ansi-regex": {
-          "version": "3.0.0",
-          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
-          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
-          "dev": true
-        },
-        "ansi-styles": {
-          "version": "2.2.1",
-          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
-          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
-          "dev": true
-        },
-        "chalk": {
-          "version": "1.1.3",
-          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
-          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
-          "dev": true,
-          "requires": {
-            "ansi-styles": "^2.2.1",
-            "escape-string-regexp": "^1.0.2",
-            "has-ansi": "^2.0.0",
-            "strip-ansi": "^3.0.0",
-            "supports-color": "^2.0.0"
-          }
-        },
-        "is-fullwidth-code-point": {
-          "version": "2.0.0",
-          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
-          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
-          "dev": true
-        },
-        "string-width": {
-          "version": "2.1.1",
-          "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
-          "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
-          "dev": true,
-          "requires": {
-            "is-fullwidth-code-point": "^2.0.0",
-            "strip-ansi": "^4.0.0"
-          },
-          "dependencies": {
-            "strip-ansi": {
-              "version": "4.0.0",
-              "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
-              "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
-              "dev": true,
-              "requires": {
-                "ansi-regex": "^3.0.0"
-              }
-            }
-          }
-        },
-        "supports-color": {
-          "version": "2.0.0",
-          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
-          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
-          "dev": true
-        }
-      }
-    },
-    "tape": {
-      "version": "4.9.1",
-      "resolved": "https://registry.npmjs.org/tape/-/tape-4.9.1.tgz",
-      "integrity": "sha512-6fKIXknLpoe/Jp4rzHKFPpJUHDHDqn8jus99IfPnHIjyz78HYlefTGD3b5EkbQzuLfaEvmfPK3IolLgq2xT3kw==",
-      "dev": true,
-      "requires": {
-        "deep-equal": "~1.0.1",
-        "defined": "~1.0.0",
-        "for-each": "~0.3.3",
-        "function-bind": "~1.1.1",
-        "glob": "~7.1.2",
-        "has": "~1.0.3",
-        "inherits": "~2.0.3",
-        "minimist": "~1.2.0",
-        "object-inspect": "~1.6.0",
-        "resolve": "~1.7.1",
-        "resumer": "~0.0.0",
-        "string.prototype.trim": "~1.1.2",
-        "through": "~2.3.8"
-      },
-      "dependencies": {
-        "minimist": {
-          "version": "1.2.0",
-          "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz",
-          "integrity": "sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ=",
-          "dev": true
-        },
-        "resolve": {
-          "version": "1.7.1",
-          "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.7.1.tgz",
-          "integrity": "sha512-c7rwLofp8g1U+h1KNyHL/jicrKg1Ek4q+Lr33AL65uZTinUZHe30D5HlyN5V9NW0JX1D5dXQ4jqW5l7Sy/kGfw==",
-          "dev": true,
-          "requires": {
-            "path-parse": "^1.0.5"
-          }
-        }
-      }
-    },
-    "text-table": {
-      "version": "0.2.0",
-      "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
-      "integrity": "sha1-f17oI66AUgfACvLfSoTsP8+lcLQ=",
-      "dev": true
-    },
-    "through": {
-      "version": "2.3.8",
-      "resolved": "https://registry.npmjs.org/through/-/through-2.3.8.tgz",
-      "integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=",
-      "dev": true
-    },
-    "trash": {
-      "version": "3.4.2",
-      "resolved": "https://registry.npmjs.org/trash/-/trash-3.4.2.tgz",
-      "integrity": "sha1-+wQiUvwmoCInaVCiuw7Om5QF6xk=",
-      "dev": true,
-      "requires": {
-        "escape-string-applescript": "^1.0.0",
-        "fs-extra": "^0.26.2",
-        "globby": "^4.0.0",
-        "path-exists": "^2.0.0",
-        "pify": "^2.3.0",
-        "pinkie-promise": "^2.0.0",
-        "run-applescript": "^2.0.0",
-        "uuid": "^2.0.1",
-        "xdg-trashdir": "^2.0.0"
-      },
-      "dependencies": {
-        "glob": {
-          "version": "6.0.4",
-          "resolved": "https://registry.npmjs.org/glob/-/glob-6.0.4.tgz",
-          "integrity": "sha1-DwiGD2oVUSey+t1PnOJLGqtuTSI=",
-          "dev": true,
-          "requires": {
-            "inflight": "^1.0.4",
-            "inherits": "2",
-            "minimatch": "2 || 3",
-            "once": "^1.3.0",
-            "path-is-absolute": "^1.0.0"
-          }
-        },
-        "globby": {
-          "version": "4.1.0",
-          "resolved": "https://registry.npmjs.org/globby/-/globby-4.1.0.tgz",
-          "integrity": "sha1-CA9UVJ7BuCpsYOYx/ILhIR2+lfg=",
-          "dev": true,
-          "requires": {
-            "array-union": "^1.0.1",
-            "arrify": "^1.0.0",
-            "glob": "^6.0.1",
-            "object-assign": "^4.0.1",
-            "pify": "^2.0.0",
-            "pinkie-promise": "^2.0.0"
-          }
-        }
-      }
-    },
-    "try-catch": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/try-catch/-/try-catch-2.0.0.tgz",
-      "integrity": "sha512-RPXpVjsbtWgymwGq5F/OWDFsjEzdvzwHFaMjWWW6f/p6+uk/N7YSKJHQfIfGqITfj8qH4cBqCLMnhKZBaKk7Kg==",
-      "dev": true
-    },
-    "type-check": {
-      "version": "0.3.2",
-      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.3.2.tgz",
-      "integrity": "sha1-WITKtRLPHTVeP7eE8wgEsrUg23I=",
-      "dev": true,
-      "requires": {
-        "prelude-ls": "~1.1.2"
-      }
-    },
-    "typedarray": {
-      "version": "0.0.6",
-      "resolved": "https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz",
-      "integrity": "sha1-hnrHTjhkGHsdPUfZlqeOxciDB3c=",
-      "dev": true
-    },
-    "url-template": {
-      "version": "2.0.8",
-      "resolved": "https://registry.npmjs.org/url-template/-/url-template-2.0.8.tgz",
-      "integrity": "sha1-/FZaPMy/93MMd19WQflVV5FDnyE=",
-      "dev": true
-    },
-    "user-home": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/user-home/-/user-home-2.0.0.tgz",
-      "integrity": "sha1-nHC/2Babwdy/SGBODwS4tJzenp8=",
-      "dev": true,
-      "requires": {
-        "os-homedir": "^1.0.0"
-      }
-    },
-    "util-deprecate": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
-      "integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=",
-      "dev": true
-    },
-    "uuid": {
-      "version": "2.0.3",
-      "resolved": "https://registry.npmjs.org/uuid/-/uuid-2.0.3.tgz",
-      "integrity": "sha1-Z+LoY3lyFVMN/zGOW/nc6/1Hsho=",
-      "dev": true
-    },
-    "which": {
-      "version": "1.3.1",
-      "resolved": "https://registry.npmjs.org/which/-/which-1.3.1.tgz",
-      "integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==",
-      "dev": true,
-      "requires": {
-        "isexe": "^2.0.0"
-      }
-    },
-    "wordwrap": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-1.0.0.tgz",
-      "integrity": "sha1-J1hIEIkUVqQXHI0CJkQa3pDLyus=",
-      "dev": true
-    },
-    "wrappy": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
-      "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=",
-      "dev": true
-    },
-    "write": {
-      "version": "0.2.1",
-      "resolved": "https://registry.npmjs.org/write/-/write-0.2.1.tgz",
-      "integrity": "sha1-X8A4KOJkzqP+kUVUdvejxWbLB1c=",
-      "dev": true,
-      "requires": {
-        "mkdirp": "^0.5.1"
-      }
-    },
-    "xdg-basedir": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/xdg-basedir/-/xdg-basedir-2.0.0.tgz",
-      "integrity": "sha1-7byQPMOF/ARSPZZqM1UEtVBNG9I=",
-      "dev": true,
-      "requires": {
-        "os-homedir": "^1.0.0"
-      }
-    },
-    "xdg-trashdir": {
-      "version": "2.1.1",
-      "resolved": "https://registry.npmjs.org/xdg-trashdir/-/xdg-trashdir-2.1.1.tgz",
-      "integrity": "sha512-KcVhPaOu2ZurYNHSRTf1+ZHORkTZGCQ+u0JHN17QixRISJq4pXOnjt/lQcehvtHL5QAKhSzKgyjrcNnPdkPBHA==",
-      "dev": true,
-      "requires": {
-        "@sindresorhus/df": "^2.1.0",
-        "mount-point": "^3.0.0",
-        "pify": "^2.2.0",
-        "user-home": "^2.0.0",
-        "xdg-basedir": "^2.0.0"
-      }
-    },
-    "xtend": {
-      "version": "4.0.1",
-      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.1.tgz",
-      "integrity": "sha1-pcbVMr5lbiPbgg77lDofBJmNY68=",
-      "dev": true
-    },
-    "yallist": {
-      "version": "2.1.2",
-      "resolved": "https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz",
-      "integrity": "sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI=",
-      "dev": true
-    }
-  }
-}
diff --git a/package.json b/package.json
index a1c2654..82f3e83 100644
--- a/package.json
+++ b/package.json
@@ -1,23 +1,28 @@
 {
   "name": "postcss-custom-media",
-  "version": "6.0.0",
-  "description": "PostCSS plugin to transform W3C CSS Custom Media Queries to more compatible CSS",
-  "keywords": [
-    "css",
-    "postcss",
-    "postcss-plugin",
-    "media queries",
-    "custom-media"
+  "version": "7.0.0",
+  "description": "Use Custom Media Queries in CSS",
+  "author": "Jonathan Neal <jonathantneal@hotmail.com>",
+  "contributors": [
+    "Maxime Thirouin"
   ],
-  "author": "Maxime Thirouin",
   "license": "MIT",
-  "repository": {
-    "type": "git",
-    "url": "https://github.com/postcss/postcss-custom-media.git"
-  },
+  "repository": "postcss/postcss-custom-media",
+  "homepage": "https://github.com/postcss/postcss-custom-media#readme",
+  "bugs": "https://github.com/postcss/postcss-custom-media/issues",
+  "main": "index.cjs.js",
+  "module": "index.es.mjs",
   "files": [
-    "index.js"
+    "index.cjs.js",
+    "index.es.mjs"
   ],
+  "scripts": {
+    "prepublishOnly": "npm test",
+    "pretest": "rollup -c .rollup.js --silent",
+    "test": "echo 'Running tests...'; npm run test:js && npm run test:tape",
+    "test:js": "eslint *.js lib/*.js --cache --ignore-path .gitignore --quiet",
+    "test:tape": "postcss-tape"
+  },
   "engines": {
     "node": ">=6.0.0"
   },
@@ -25,19 +30,33 @@
     "postcss": "^7.0.2"
   },
   "devDependencies": {
-    "eslint": "^3.19.0",
-    "eslint-config-i-am-meticulous": "^6.0.1",
-    "eslint-plugin-import": "^1.7.0",
-    "npmpub": "^3.1.0",
-    "tape": "^4.6.3"
-  },
-  "scripts": {
-    "lint": "eslint --fix .",
-    "tests": "tape test",
-    "test": "npm run lint && npm run tests",
-    "release": "npmpub"
+    "@babel/core": "^7.0.0",
+    "@babel/plugin-syntax-dynamic-import": "^7.0.0",
+    "@babel/preset-env": "^7.0.0",
+    "babel-eslint": "^9.0.0",
+    "eslint": "^5.5.0",
+    "eslint-config-dev": "^2.0.0",
+    "postcss-tape": "^2.2.0",
+    "pre-commit": "^1.2.2",
+    "rollup": "^0.65.2",
+    "rollup-plugin-babel": "^4.0.3"
   },
   "eslintConfig": {
-    "extends": "eslint-config-i-am-meticulous/es5"
-  }
+    "extends": "dev",
+    "parser": "babel-eslint"
+  },
+  "keywords": [
+    "postcss",
+    "css",
+    "postcss-plugin",
+    "custom",
+    "media",
+    "query",
+    "queries",
+    "w3c",
+    "csswg",
+    "atrule",
+    "at-rule",
+    "specification"
+  ]
 }
diff --git a/test/basic.css b/test/basic.css
new file mode 100644
index 0000000..287c730
--- /dev/null
+++ b/test/basic.css
@@ -0,0 +1,33 @@
+@custom-media --mq-a (max-width: 30em), (max-height: 30em);
+@custom-media --not-mq-a not all and (--mq-a);
+
+@media not (--mq-a) {
+	body {
+		order: 1;
+	}
+}
+
+@media not (--not-mq-a) {
+	body {
+		order: 2;
+	}
+}
+
+@custom-media --circular-mq-a (--circular-mq-b);
+@custom-media --circular-mq-b (--circular-mq-a);
+
+@media (--circular-mq-a) {
+	body {
+		order: 3;
+	}
+}
+
+@media (--circular-mq-b) {
+	body {
+		order: 4;
+	}
+}
+
+@media (--unresolved-mq) {
+	body order: 5;
+}
diff --git a/test/basic.expect.css b/test/basic.expect.css
new file mode 100644
index 0000000..6aafdb5
--- /dev/null
+++ b/test/basic.expect.css
@@ -0,0 +1,27 @@
+@media (max-width: 30em),(max-height: 30em) {
+	body {
+		order: 1;
+	}
+}
+
+@media (max-width: 30em),(max-height: 30em) {
+	body {
+		order: 2;
+	}
+}
+
+@media (--circular-mq-b) {
+	body {
+		order: 3;
+	}
+}
+
+@media (--circular-mq-a) {
+	body {
+		order: 4;
+	}
+}
+
+@media (--unresolved-mq) {
+	body order: 5;
+}
diff --git a/test/fixtures/append.css b/test/fixtures/append.css
deleted file mode 100644
index 945cc11..0000000
--- a/test/fixtures/append.css
+++ /dev/null
@@ -1,3 +0,0 @@
-@media (--viewport-max-s) {
-  body { font-size: 1rem; }
-}
diff --git a/test/fixtures/append.expected.css b/test/fixtures/append.expected.css
deleted file mode 100644
index 6c44041..0000000
--- a/test/fixtures/append.expected.css
+++ /dev/null
@@ -1,4 +0,0 @@
-@media (max-width: 30em) {
-  body { font-size: 1rem; }
-}
-@custom-media --viewport-max-s (max-width: 30em);
diff --git a/test/fixtures/js-defined.css b/test/fixtures/js-defined.css
deleted file mode 100755
index 46334f5..0000000
--- a/test/fixtures/js-defined.css
+++ /dev/null
@@ -1,15 +0,0 @@
-@custom-media --viewport-max-s (max-width: 50em);
-
-body { color: #000  }
-
-@media (--viewport-max-s) {
-  body { font-size: 1rem; }
-}
-
-@media (--viewport-min-s) {
-  body { font-size: 1.2rem; }
-}
-
-@media (--viewport-min-s ) {
-
-}
diff --git a/test/fixtures/js-defined.expected.css b/test/fixtures/js-defined.expected.css
deleted file mode 100755
index b53bb46..0000000
--- a/test/fixtures/js-defined.expected.css
+++ /dev/null
@@ -1,15 +0,0 @@
-
-
-body { color: #000  }
-
-@media (max-width: 30em) {
-  body { font-size: 1rem; }
-}
-
-@media (min-width: 30.01em) {
-  body { font-size: 1.2rem; }
-}
-
-@media (min-width: 30.01em) {
-
-}
diff --git a/test/fixtures/preserve.css b/test/fixtures/preserve.css
deleted file mode 100644
index 46a14f7..0000000
--- a/test/fixtures/preserve.css
+++ /dev/null
@@ -1,4 +0,0 @@
-@custom-media --viewport-max-s (max-width: 30em);
-@media (--viewport-max-s) {
-  body { font-size: 1rem; }
-}
diff --git a/test/fixtures/preserve.expected.css b/test/fixtures/preserve.expected.css
deleted file mode 100644
index 5bfb3c8..0000000
--- a/test/fixtures/preserve.expected.css
+++ /dev/null
@@ -1,4 +0,0 @@
-@custom-media --viewport-max-s (max-width: 30em);
-@media (max-width: 30em) {
-  body { font-size: 1rem; }
-}
diff --git a/test/fixtures/transform-all.css b/test/fixtures/transform-all.css
deleted file mode 100644
index 72f8501..0000000
--- a/test/fixtures/transform-all.css
+++ /dev/null
@@ -1,8 +0,0 @@
-@custom-media --a (foo: bar);
-@custom-media --b (bar: baz);
-
-@media (--a), (--b) {
-  selector {
-    property: value;
-  }
-}
diff --git a/test/fixtures/transform-all.expected.css b/test/fixtures/transform-all.expected.css
deleted file mode 100644
index e08678c..0000000
--- a/test/fixtures/transform-all.expected.css
+++ /dev/null
@@ -1,7 +0,0 @@
-
-
-@media (foo: bar), (bar: baz) {
-  selector {
-    property: value;
-  }
-}
diff --git a/test/fixtures/transform-circular-reference.css b/test/fixtures/transform-circular-reference.css
deleted file mode 100644
index 48b1f3c..0000000
--- a/test/fixtures/transform-circular-reference.css
+++ /dev/null
@@ -1,16 +0,0 @@
-body { color: #000  }
-
-@custom-media --a (--b);
-@custom-media --b (--a);
-
-@media (--a) {
-  selector {
-    property: value;
-  }
-}
-
-@media (--b) {
-  selector {
-    property: value;
-  }
-}
diff --git a/test/fixtures/transform-circular-reference.expected.css b/test/fixtures/transform-circular-reference.expected.css
deleted file mode 100644
index 4746c87..0000000
--- a/test/fixtures/transform-circular-reference.expected.css
+++ /dev/null
@@ -1 +0,0 @@
-body { color: #000  }
diff --git a/test/fixtures/transform-reference.css b/test/fixtures/transform-reference.css
deleted file mode 100644
index e5e8a5b..0000000
--- a/test/fixtures/transform-reference.css
+++ /dev/null
@@ -1,8 +0,0 @@
-@custom-media --a (foo: bar);
-@custom-media --b (--a);
-
-@media (--b) {
-  selector {
-    property: value;
-  }
-}
diff --git a/test/fixtures/transform-reference.expected.css b/test/fixtures/transform-reference.expected.css
deleted file mode 100644
index c949741..0000000
--- a/test/fixtures/transform-reference.expected.css
+++ /dev/null
@@ -1,7 +0,0 @@
-
-
-@media (foo: bar) {
-  selector {
-    property: value;
-  }
-}
diff --git a/test/fixtures/transform-self-reference.css b/test/fixtures/transform-self-reference.css
deleted file mode 100644
index 7907752..0000000
--- a/test/fixtures/transform-self-reference.css
+++ /dev/null
@@ -1,9 +0,0 @@
-body { color: #000  }
-
-@custom-media --a (--a);
-
-@media (--a) {
-  selector {
-    property: value;
-  }
-}
diff --git a/test/fixtures/transform-self-reference.expected.css b/test/fixtures/transform-self-reference.expected.css
deleted file mode 100644
index 4746c87..0000000
--- a/test/fixtures/transform-self-reference.expected.css
+++ /dev/null
@@ -1 +0,0 @@
-body { color: #000  }
diff --git a/test/fixtures/transform.css b/test/fixtures/transform.css
deleted file mode 100755
index 8114b74..0000000
--- a/test/fixtures/transform.css
+++ /dev/null
@@ -1,16 +0,0 @@
-@custom-media --viewport-max-s (max-width: 30em);
-@custom-media --viewport-min-s (min-width: 30.01em);
-
-body { color: #000  }
-
-@media (--viewport-max-s) {
-  body { font-size: 1rem; }
-}
-
-@media (--viewport-min-s) {
-  body { font-size: 1.2rem; }
-}
-
-@media (--viewport-min-s ) {
-
-}
diff --git a/test/fixtures/transform.expected.css b/test/fixtures/transform.expected.css
deleted file mode 100755
index b53bb46..0000000
--- a/test/fixtures/transform.expected.css
+++ /dev/null
@@ -1,15 +0,0 @@
-
-
-body { color: #000  }
-
-@media (max-width: 30em) {
-  body { font-size: 1rem; }
-}
-
-@media (min-width: 30.01em) {
-  body { font-size: 1.2rem; }
-}
-
-@media (min-width: 30.01em) {
-
-}
diff --git a/test/fixtures/undefined.css b/test/fixtures/undefined.css
deleted file mode 100755
index 4c36cd1..0000000
--- a/test/fixtures/undefined.css
+++ /dev/null
@@ -1,5 +0,0 @@
-body { color: #000  }
-
-@media (--undefined-custom-media) {
-  body { font-size: 1rem; }
-}
diff --git a/test/fixtures/undefined.expected.css b/test/fixtures/undefined.expected.css
deleted file mode 100755
index 4746c87..0000000
--- a/test/fixtures/undefined.expected.css
+++ /dev/null
@@ -1 +0,0 @@
-body { color: #000  }
diff --git a/test/index.js b/test/index.js
deleted file mode 100755
index 21132fd..0000000
--- a/test/index.js
+++ /dev/null
@@ -1,117 +0,0 @@
-var fs = require("fs")
-
-var test = require("tape")
-var postcss = require("postcss")
-
-var plugin = require("..")
-
-function filename(name) {
-  return "test/" + name + ".css"
-}
-function read(name) {
-  return fs.readFileSync(name, "utf8")
-}
-
-function compareFixtures(t, name, msg, opts, postcssOpts) {
-  postcssOpts = postcssOpts || {}
-  postcssOpts.from = filename("fixtures/" + name)
-  opts = opts || {}
-  var result = postcss()
-    .use(plugin(opts))
-    .process(read(postcssOpts.from), postcssOpts)
-  var actual = result.css
-  var expected = read(filename("fixtures/" + name + ".expected"))
-  fs.writeFileSync(filename("fixtures/" + name + ".actual"), actual)
-  t.equal(actual.trim(), expected.trim(), msg)
-
-  return result
-}
-
-test("@custom-media", function(t) {
-  compareFixtures(
-    t,
-    "transform",
-    "should transform custom media"
-  )
-
-  compareFixtures(
-    t,
-    "transform-all",
-    "should replaces all extension names"
-  )
-
-  compareFixtures(
-    t,
-    "transform-reference",
-    "should transform custom media referencing another custom media"
-  )
-
-  compareFixtures(
-    t,
-    "transform-self-reference",
-    "should transform custom media with self reference"
-  )
-
-  compareFixtures(
-    t,
-    "transform-circular-reference",
-    "should transform custom media with circular reference"
-  )
-
-  var undefinedRes = compareFixtures(
-    t,
-    "undefined",
-    "should remove undefined @media"
-  )
-
-  t.ok(
-    undefinedRes.warnings()[0].text.match(/Missing @custom-media/),
-    "should send warning to postcss"
-  )
-
-  compareFixtures(
-    t,
-    "js-defined",
-    "should transform custom media and override local extensions",
-    {
-      extensions: {
-        "--viewport-max-s": "(max-width: 30em)",
-        "--viewport-min-s": "(min-width: 30.01em)",
-      },
-    }
-  )
-
-  compareFixtures(
-    t,
-    "js-defined",
-    "should transform custom media and override local unprefixed extensions",
-    {
-      extensions: {
-        "viewport-max-s": "(max-width: 30em)",
-        "viewport-min-s": "(min-width: 30.01em)",
-      },
-    }
-  )
-
-  compareFixtures(
-    t,
-    "preserve",
-    "should preserve custom media",
-    { preserve: true }
-  )
-
-  compareFixtures(
-    t,
-    "append",
-    "should append custom media",
-    {
-      extensions: {
-        "--viewport-max-s": "(max-width: 30em)",
-        "--a": "(--a)",
-      },
-      appendExtensions: true,
-    }
-  )
-
-  t.end()
-})
-- 
2.35.1

