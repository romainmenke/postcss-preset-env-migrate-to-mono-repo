From 01a84c52aeb50732c162a6de0f280f9bdd096871 Mon Sep 17 00:00:00 2001
From: Jonathan Neal <jonathantneal@hotmail.com>
Date: Sat, 17 Nov 2018 12:12:44 -0500
Subject: [PATCH 04/13] 0.1.3

---
 CHANGELOG.md |  4 ++++
 README.md    | 10 ++--------
 package.json |  4 ++--
 src/cli.js   |  6 +++---
 4 files changed, 11 insertions(+), 13 deletions(-)

diff --git a/CHANGELOG.md b/CHANGELOG.md
index a11dfa2..87e23d6 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,5 +1,9 @@
 # Changes to CSS Blank Pseudo
 
+### 0.1.3 (November 17, 2018)
+
+- Improve CLI usage
+
 ### 0.1.2 (November 17, 2018)
 
 - Provide a version specifically for Internet Explorer 11
diff --git a/README.md b/README.md
index 58be06e..eff7392 100644
--- a/README.md
+++ b/README.md
@@ -71,14 +71,8 @@ Next, the [JavaScript library](README-BROWSER.md) adds a `blank` attribute to
 elements otherwise matching `:blank` natively.
 
 ```html
-<div class="field">
-  <label for="a">Field</label>
-  <input id="a" value="" blank>
-</div>
-<div class="field">
-  <label for="b">Field</label>
-  <input id="b" value="This element has a value">
-</div>
+<input value="" blank>
+<input value="This element has a value">
 ```
 
 [cli-img]: https://img.shields.io/travis/csstools/css-blank-pseudo/master.svg
diff --git a/package.json b/package.json
index 97d00ff..c86208f 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "css-blank-pseudo",
-  "version": "0.1.2",
+  "version": "0.1.3",
   "description": "Style form elements when they are empty",
   "author": "Jonathan Neal <jonathantneal@hotmail.com>",
   "license": "CC0-1.0",
@@ -35,7 +35,7 @@
     "build:cli": "cross-env NODE_ENV=cli rollup -c .rollup.js --silent",
     "build:postcss": "cross-env NODE_ENV=postcss rollup -c .rollup.js --silent",
     "build:node": "rollup -c .rollup.js --silent && cross-env NODE_ENV=legacy rollup -c .rollup.js --silent",
-    "prepublishOnly": "npm build && npm test",
+    "prepublishOnly": "npm run build && npm test",
     "pretest": "npm run build:postcss",
     "pretest:postcss": "npm run build:postcss",
     "test": "npm run test:js && npm run test:postcss",
diff --git a/src/cli.js b/src/cli.js
index ded6a74..60f679b 100644
--- a/src/cli.js
+++ b/src/cli.js
@@ -8,7 +8,7 @@ if (process.argv.length < 3) {
 		'Usage:\n',
 		'  css-blank-pseudo source.css transformed.css',
 		'  css-blank-pseudo --in=source.css --out=transformed.css --opts={}',
-		'  echo "@media (prefers-color-scheme: dark) {}" | css-\n'
+		'  echo "@media (prefers-color-scheme: dark) {}" | css-blank-pseudo\n'
 	].join('\n'));
 	process.exit(0);
 }
@@ -17,7 +17,7 @@ if (process.argv.length < 3) {
 const fileRegExp = /^[\w\/.]+$/;
 const argRegExp = /^--(\w+)=("|')?(.+)\2$/;
 const relaxedJsonPropRegExp = /(['"])?([a-z0-9A-Z_]+)(['"])?:/g;
-const relaxedJsonValueRegExp = /("[a-z0-9A-Z_]+":\s*)'([^']*)'/g;
+const relaxedJsonValueRegExp = /("[a-z0-9A-Z_]+":\s*)'?([A-z0-9]+)'?([,}])/g;
 const argo = process.argv.slice(2).reduce(
 	(object, arg) => {
 		const argMatch = arg.match(argRegExp);
@@ -44,7 +44,7 @@ const argo = process.argv.slice(2).reduce(
 	const pluginOpts = JSON.parse(
 		argo.opts
 		.replace(relaxedJsonPropRegExp, '"$2": ')
-		.replace(relaxedJsonValueRegExp, '$1"$2"')
+		.replace(relaxedJsonValueRegExp, '$1"$2"$3')
 	);
 	const processOptions = Object.assign({ from: argo.from, to: argo.to || argo.from }, argo.map ? { map: JSON.parse(argo.map) } : {});
 
-- 
2.33.1

