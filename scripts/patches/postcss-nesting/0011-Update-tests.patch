From 11a47039e77d05a16adf97e2b23bc6190b66db23 Mon Sep 17 00:00:00 2001
From: Jonathan Neal <jonathantneal@hotmail.com>
Date: Tue, 15 Sep 2015 09:22:39 -0400
Subject: [PATCH 011/108] Update tests

Follow Tab Atkins new syntax
Update to PostCSS 5 and PostCSS 5 best practices
---
 .eslintrc    |  2 +-
 .travis.yml  |  1 -
 gulpfile.js  | 11 ++++++++--
 package.json | 61 +++++++++++++++++++++++++++++++---------------------
 test/test.js | 44 +++++++++++++++++++++++--------------
 5 files changed, 75 insertions(+), 44 deletions(-)

diff --git a/.eslintrc b/.eslintrc
index 8966b85..23ac9db 100644
--- a/.eslintrc
+++ b/.eslintrc
@@ -6,8 +6,8 @@
 		"no-multi-spaces":       [0],
 		"no-unused-vars":        [2],
 		"no-loop-func":          [0],
+		"no-cond-assign":        [0],
 		"key-spacing":           [0],
-		"max-len":               [2],
 		"strict":                [0],
 		"quotes":                [2, "single", "avoid-escape"],
 		"curly":                 [0]
diff --git a/.travis.yml b/.travis.yml
index ffb8b39..e1bd776 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -3,4 +3,3 @@ language: node_js
 node_js:
   - iojs
   - "0.12"
-  - "0.10"
diff --git a/gulpfile.js b/gulpfile.js
index 1fc565b..33bd8cf 100644
--- a/gulpfile.js
+++ b/gulpfile.js
@@ -1,8 +1,10 @@
 var gulp = require('gulp');
 
+var files = ['index.js', 'test/*.js', 'gulpfile.js'];
+
 gulp.task('lint', function () {
 	var eslint = require('gulp-eslint');
-	return gulp.src(['index.js', 'test/*.js', 'gulpfile.js'])
+	return gulp.src(files)
 		.pipe(eslint())
 		.pipe(eslint.format())
 		.pipe(eslint.failAfterError());
@@ -10,7 +12,12 @@ gulp.task('lint', function () {
 
 gulp.task('test', function () {
 	var mocha = require('gulp-mocha');
-	return gulp.src('test/*.js', { read: false }).pipe(mocha());
+	return gulp.src('test/*.js', { read: false })
+		.pipe(mocha());
 });
 
 gulp.task('default', ['lint', 'test']);
+
+gulp.task('watch', function () {
+	gulp.watch(files, ['lint', 'test']);
+});
diff --git a/package.json b/package.json
index 478e9c8..89ae782 100644
--- a/package.json
+++ b/package.json
@@ -1,26 +1,39 @@
 {
-	"name": "postcss-nesting",
-	"version": "0.1.0",
-	"description": "PostCSS plugin ability to nest one style rule inside another",
-	"keywords": ["postcss", "css", "postcss-plugin", "nesting", "selector", "rule"],
-	"author": "Jonathan Neal <jonathantneal@hotmail.com>",
-	"license": "MIT",
-	"repository": {
-		"type": "git",
-		"url":  "https://github.com/jonathantneal/postcss-nesting.git"
-	},
-	"dependencies": {
-		"postcss": "^4.1.9",
-		"postcss-selector-parser": "^1.0.0"
-	},
-	"devDependencies": {
-		"gulp-eslint": "^0.12.0",
-		"gulp-mocha":  "^2.0.1",
-		"chai":        "^2.3.0",
-		"gulp":        "^3.8.11",
-		"gulp-watch":  "^4.2.4"
-	},
-	"scripts": {
-		"test": "gulp"
-	}
+  "name": "postcss-nesting",
+  "version": "0.1.0",
+  "description": "Transpiles nested rules according to CSS Nesting Module Level 3",
+  "keywords": [
+    "postcss",
+    "css",
+    "postcss-plugin",
+    "nestings",
+    "selectors",
+    "rules"
+  ],
+  "author": "Jonathan Neal <jonathantneal@hotmail.com>",
+  "license": "CC0-1.0",
+  "repository": {
+    "type": "git",
+    "url": "https://github.com/jonathantneal/postcss-nesting.git"
+  },
+  "bugs": {
+    "url": "https://github.com/jonathantneal/postcss-nesting/issues"
+  },
+  "homepage": "https://github.com/jonathantneal/postcss-nesting",
+  "dependencies": {
+    "postcss": "^5.0.5"
+  },
+  "devDependencies": {
+    "chai": "^3.2.0",
+    "gulp": "^3.9.0",
+    "gulp-eslint": "^1.0.0",
+    "gulp-mocha": "^2.1.3"
+  },
+  "scripts": {
+    "test": "gulp"
+  },
+  "engines": {
+    "iojs": ">=2.0.0",
+    "node": ">=0.12.0"
+  }
 }
diff --git a/test/test.js b/test/test.js
index 6f457b9..020d60b 100644
--- a/test/test.js
+++ b/test/test.js
@@ -1,24 +1,36 @@
 var postcss = require('postcss');
+var nested  = require('../');
 var expect  = require('chai').expect;
 
-var plugin = require('../');
+var check = function (input, output, opts) {
+	var processor = postcss([ nested(opts) ]);
+	expect( processor.process(input).css ).to.equal(output);
+};
 
-var test = function (input, output, opts, done) {
-	postcss([ plugin(opts) ]).process(input).then(function (result) {
-		expect(result.css).to.eql(output);
-		expect(result.warnings()).to.be.empty;
-		done();
-	}).catch(function (error) {
-		done(error);
+describe('postcss-nested', function () {
+	it('ignores sass nesting', function () {
+		check('z { color: red } a, b { color: white; & c, & d { color: blue } }',
+			  'z { color: red } a, b { color: white; & c, & d { color: blue } }');
+	});
+
+	it('unwraps css nesting', function () {
+		check('z { color: red } a, b { color: white; @nest & c, & d { color: blue } }',
+			  'z { color: red } a, b { color: white } a c, a d, b c, b d { color: blue }');
+	});
+
+	it('unwraps css deep nesting', function () {
+		check('z { color: red } a, b { color: white; @nest & c, & d { color: blue; @nest & e, & f { color: black } } }',
+			  'z { color: red } a, b { color: white } a c, a d, b c, b d { color: blue } a c e, a c f, a d e, a d f, b c e, b c f, b d e, b d f { color: black }');
+	});
+
+	it('unwraps mixed nesting', function () {
+		check('a { color: red; @media { color: white; @nest b { color: blue } } }',
+			  'a { color: red } @media { a { color: white } a b { color: blue } }');
 	});
-};
 
-describe('postcss-nesting', function () {
-	it('basic usage', function (done) {
-		test(
-			'a,b{color:red;{c,d{color:white;}& &{color:blue;}&:hover{color:white;}}}',
-			'a,b{color:red}a c,b c,a d,b d{color:white;}a a,a b,b a,b b{color:blue;}a:hover,b:hover{color:white;}',
-			{},
-		done);
+	it('unwraps specified at-rules', function () {
+		check('a { color: red; @unknown test { color: white } } b { color: white; @phone { color: blue } @media { color: black; @nest c { color: yellow } } }',
+			  'a { color: red; @unknown test { color: white } } b { color: white } @phone { b { color: blue } } @media { b { color: black } b c { color: yellow } }',
+			  { bubble: ['phone'] });
 	});
 });
-- 
2.33.1

