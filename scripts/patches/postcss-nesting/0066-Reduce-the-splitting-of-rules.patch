From 8de8fc8e9a3d7d106c971084a7590dd9e20d7d3a Mon Sep 17 00:00:00 2001
From: Jonathan Neal <jonathantneal@hotmail.com>
Date: Mon, 18 Sep 2017 13:12:56 -0400
Subject: [PATCH 066/108] Reduce the splitting of rules

---
 lib/get-closest-rule.js         | 12 ++++++++++++
 lib/transform-after-nodes.js    |  8 +++++---
 lib/transform-nesting-atrule.js | 24 ++++++++++++++++++++++--
 3 files changed, 39 insertions(+), 5 deletions(-)
 create mode 100644 lib/get-closest-rule.js

diff --git a/lib/get-closest-rule.js b/lib/get-closest-rule.js
new file mode 100644
index 0000000..62b9bff
--- /dev/null
+++ b/lib/get-closest-rule.js
@@ -0,0 +1,12 @@
+'use strict';
+
+// return the closest rule
+module.exports = (node) => {
+	let selectorParent = node.parent;
+
+	while (selectorParent && selectorParent.type !== 'rule') {
+		selectorParent = selectorParent.parent;
+	}
+
+	return selectorParent;
+};
diff --git a/lib/transform-after-nodes.js b/lib/transform-after-nodes.js
index ba2acd6..7d6f099 100644
--- a/lib/transform-after-nodes.js
+++ b/lib/transform-after-nodes.js
@@ -8,11 +8,13 @@ module.exports = (node) => {
 
 	if (affectedNodes.length) {
 		// insert an empty parent clone after the parent
-		const emptyParentClone = cleanNode(node.parent.clone()).removeAll();
+		const afterParent = cleanNode(node.parent.clone()).removeAll();
 
-		node.parent.after(emptyParentClone);
+		node.parent.after(afterParent);
 
 		// append the affected nodes to the empty parent clone
-		emptyParentClone.append(affectedNodes);
+		afterParent.append(affectedNodes);
+
+		return afterParent;
 	}
 };
diff --git a/lib/transform-nesting-atrule.js b/lib/transform-nesting-atrule.js
index dca39cf..739b415 100644
--- a/lib/transform-nesting-atrule.js
+++ b/lib/transform-nesting-atrule.js
@@ -1,6 +1,7 @@
 // tooling
 const cleanNode           = require('./clean-node');
 const comma               = require('postcss').list.comma;
+const getClosestRule      = require('./get-closest-rule');
 const mergeSelectors      = require('./merge-selectors');
 const postcss             = require('postcss');
 const transformAfterNodes = require('./transform-after-nodes');
@@ -11,12 +12,15 @@ module.exports = (node) => {
 	cleanNode(node).nodes.forEach(cleanNode);
 
 	// affected nodes after the current node moved into a cloned parent node
-	transformAfterNodes(node);
+	const afterParent = transformAfterNodes(node);
+
+	// get the closest rule
+	const selectorParent = getClosestRule(node);
 
 	// clone of the atrule as a rule
 	const rule = postcss.rule({
 		// merge selectors
-		selectors: mergeSelectors(node.parent.selectors, node.params),
+		selectors: mergeSelectors(selectorParent && selectorParent.selectors || '', node.params),
 		source: node.source
 	});
 
@@ -37,6 +41,22 @@ module.exports = (node) => {
 		parent.remove();
 	}
 
+	// if the next sibling shares the same selector
+	if (afterParent && afterParent.selector === rule.selector) {
+		rule.append(afterParent.nodes);
+
+		afterParent.remove();
+	}
+
+	// if the previous sibling shares the same selector
+	if (parent.parent && parent.next() === rule && parent.selector === rule.selector) {
+		parent.append(rule.nodes);
+
+		rule.remove();
+
+		return parent;
+	}
+
 	return rule;
 };
 
-- 
2.33.1

