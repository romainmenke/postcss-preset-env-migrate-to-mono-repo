From ff04ca4e069851b0bb4bbcfca23bb1d2d7f77920 Mon Sep 17 00:00:00 2001
From: Jonathan Neal <jonathantneal@hotmail.com>
Date: Mon, 12 Oct 2015 09:34:41 -0400
Subject: [PATCH 32/95] 2.0.5

- Updated: Nested rules source map to the parent rule
- Updated: PostCSS 5.0.9
- Updated: Tests and documentation
- Updated: Project configuration
---
 .editorconfig                   | 14 +++++
 .eslintrc                       |  4 +-
 .gitignore                      |  1 +
 .npmignore                      |  8 +--
 .travis.yml                     |  2 +-
 CHANGELOG.md                    |  7 +++
 README.md                       |  2 +-
 gulpfile.js                     | 23 ---------
 index.js                        | 19 ++-----
 package.json                    | 15 +++---
 test/fixtures/basic.css         | 79 ++++++++++++++++++++++++++++
 test/fixtures/basic.expect.css  | 91 +++++++++++++++++++++++++++++++++
 test/fixtures/ignore.css        | 15 ++++++
 test/fixtures/ignore.expect.css | 15 ++++++
 test/index.js                   | 55 ++++++++++++++++++++
 test/test.js                    | 46 -----------------
 16 files changed, 293 insertions(+), 103 deletions(-)
 create mode 100644 .editorconfig
 delete mode 100644 gulpfile.js
 create mode 100644 test/fixtures/basic.css
 create mode 100644 test/fixtures/basic.expect.css
 create mode 100644 test/fixtures/ignore.css
 create mode 100644 test/fixtures/ignore.expect.css
 create mode 100644 test/index.js
 delete mode 100644 test/test.js

diff --git a/.editorconfig b/.editorconfig
new file mode 100644
index 0000000..7843e7d
--- /dev/null
+++ b/.editorconfig
@@ -0,0 +1,14 @@
+root = true
+
+[*]
+indent_style = tab
+end_of_line = lf
+charset = utf-8
+trim_trailing_whitespace = true
+insert_final_newline = true
+
+[*.md]
+trim_trailing_whitespace = false
+
+[*.{json,yml}]
+indent_size = 2
diff --git a/.eslintrc b/.eslintrc
index c6fb69a..d85f696 100644
--- a/.eslintrc
+++ b/.eslintrc
@@ -84,14 +84,14 @@
 		"comma-style":                 [2],
 		"brace-style":                 [2],
 		"no-debugger":                 [2],
-		"quote-props":                 [2, "as-needed"],
+		"quote-props":                 [0],
 		"no-iterator":                 [2],
 		"no-new-func":                 [2],
 		"key-spacing":                 [2, { "align": "value" }],
 		"complexity":                  [2],
 		"new-parens":                  [2],
 		"no-eq-null":                  [2],
-		"no-bitwise":                  [2],
+		"no-bitwise":                  [0],
 		"wrap-iife":                   [2],
 		"no-caller":                   [2],
 		"use-isnan":                   [2],
diff --git a/.gitignore b/.gitignore
index 1ca9571..4dd3d06 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,2 +1,3 @@
 node_modules/
 npm-debug.log
+test/fixtures/*.actual.css
diff --git a/.npmignore b/.npmignore
index 1aa2d59..1ca9571 100644
--- a/.npmignore
+++ b/.npmignore
@@ -1,8 +1,2 @@
-.gitignore
-
 node_modules/
-
-test/
-.travis.yml
-
-gulpfile.js
+npm-debug.log
diff --git a/.travis.yml b/.travis.yml
index e1bd776..c8d0663 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,5 +1,5 @@
 sudo: false
 language: node_js
 node_js:
-  - iojs
+  - stable
   - "0.12"
diff --git a/CHANGELOG.md b/CHANGELOG.md
index cc145f9..ca3c51a 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,3 +1,10 @@
+## 2.0.5 (2015-10-12)
+
+- Updated: Nested rules source map to the parent rule
+- Updated: PostCSS 5.0.9
+- Updated: Tests and documentation
+- Updated: Project configuration
+
 ## 2.0.4 (2015-09-23)
 
 - Updated: Map source raws
diff --git a/README.md b/README.md
index e7a5ef0..c3be78e 100644
--- a/README.md
+++ b/README.md
@@ -2,7 +2,7 @@
 
 <img align="right" width="135" height="95" src="http://postcss.github.io/postcss/logo-leftp.png" title="Philosopherâ€™s stone, logo of PostCSS">
 
-[CSS Nesting] is a [PostCSS] plugin that allows you to nest one style rule inside another, following the [CSS Nesting Module Level 3] specification.
+[CSS Nesting] allows you to nest one style rule inside another, following the [CSS Nesting Module Level 3] specification.
 
 ```css
 /* before */
diff --git a/gulpfile.js b/gulpfile.js
deleted file mode 100644
index 33bd8cf..0000000
--- a/gulpfile.js
+++ /dev/null
@@ -1,23 +0,0 @@
-var gulp = require('gulp');
-
-var files = ['index.js', 'test/*.js', 'gulpfile.js'];
-
-gulp.task('lint', function () {
-	var eslint = require('gulp-eslint');
-	return gulp.src(files)
-		.pipe(eslint())
-		.pipe(eslint.format())
-		.pipe(eslint.failAfterError());
-});
-
-gulp.task('test', function () {
-	var mocha = require('gulp-mocha');
-	return gulp.src('test/*.js', { read: false })
-		.pipe(mocha());
-});
-
-gulp.task('default', ['lint', 'test']);
-
-gulp.task('watch', function () {
-	gulp.watch(files, ['lint', 'test']);
-});
diff --git a/index.js b/index.js
index 61031bd..7a71de0 100644
--- a/index.js
+++ b/index.js
@@ -12,11 +12,6 @@ function transpileSelectors(fromRule, toRule) {
 	toRule.selectors = selectors;
 }
 
-function cleanNode(node) {
-	if (!('before' in node.raws)) node.raws.before = node.parent.raws.before || '';
-	if (!('after' in node.raws)) node.raws.after = node.parent.raws.after || '';
-}
-
 module.exports = postcss.plugin('postcss-nested', function (opts) {
 	var bubble = ['document', 'media', 'supports'];
 	var name   = 'nest';
@@ -30,13 +25,9 @@ module.exports = postcss.plugin('postcss-nested', function (opts) {
 			var root = rule && rule.parent;
 
 			if (root && rule.type === 'rule') {
-				var newrule = postcss.rule({
-					raws: {
-						before:  atrule.raws.before,
-						between: atrule.raws.between,
-						after:   atrule.raws.after
-					}
-				});
+				var newrule = rule.clone().removeAll();
+
+				newrule.source = atrule.source;
 
 				if (atrule.name === name && atrule.params.indexOf('&') !== -1) {
 					atrule.remove();
@@ -45,8 +36,6 @@ module.exports = postcss.plugin('postcss-nested', function (opts) {
 
 					newrule.append(atrule.nodes);
 
-					newrule.nodes.forEach(cleanNode);
-
 					transpileSelectors(rule, newrule);
 
 					root.insertAfter(rule.insertAfterNode || rule, newrule);
@@ -59,8 +48,6 @@ module.exports = postcss.plugin('postcss-nested', function (opts) {
 
 					newrule.append(atrule.nodes);
 
-					newrule.nodes.forEach(cleanNode);
-
 					atrule.removeAll();
 
 					atrule.append(newrule);
diff --git a/package.json b/package.json
index bb23216..a669b13 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "postcss-nesting",
-  "version": "2.0.4",
+  "version": "2.0.5",
   "description": "Transpiles nested rules according to CSS Nesting Module Level 3",
   "keywords": [
     "postcss",
@@ -21,16 +21,17 @@
   },
   "homepage": "https://github.com/jonathantneal/postcss-nesting",
   "dependencies": {
-    "postcss": "^5.0.6"
+    "postcss": "^5.0.9"
   },
   "devDependencies": {
-    "chai": "^3.3.0",
-    "gulp": "^3.9.0",
-    "gulp-eslint": "^1.0.0",
-    "gulp-mocha": "^2.1.3"
+    "eslint": "^1.6.0",
+    "tap-spec": "^4.1.0",
+    "tape": "^4.2.1"
   },
   "scripts": {
-    "test": "gulp"
+    "lint": "eslint . --ignore-path .gitignore",
+    "test-fixtures": "tape test/*.js | tap-spec",
+    "test": "npm run lint && npm run test-fixtures"
   },
   "engines": {
     "iojs": ">=2.0.0",
diff --git a/test/fixtures/basic.css b/test/fixtures/basic.css
new file mode 100644
index 0000000..def35db
--- /dev/null
+++ b/test/fixtures/basic.css
@@ -0,0 +1,79 @@
+a, b {
+	color: white;
+
+	@nest & c, & d {
+		color: blue;
+	}
+}
+
+a, b {
+	color: white;
+
+	@nest & c, & d {
+		color: blue;
+
+		@nest & e, & f {
+			color: black;
+		}
+	}
+}
+
+a, b {
+	color: red;
+
+	@nest & & {
+		color: white;
+	}
+}
+
+a {
+	color: red;
+
+	@media {
+		color: white;
+	}
+}
+
+a {
+	color: red;
+
+	@nest & b {
+		color: white;
+
+		@media {
+			color: blue;
+		}
+	}
+
+	@media {
+		color: black;
+
+		@nest & c {
+			color: yellow;
+		}
+	}
+}
+
+a {
+	color: red;
+
+	@unknown test {
+		color: white;
+	}
+}
+
+b {
+	color: white;
+
+	@phone {
+		color: blue;
+	}
+
+	@media {
+		color: black;
+
+		@nest & c {
+			color: yellow;
+		}
+	}
+}
diff --git a/test/fixtures/basic.expect.css b/test/fixtures/basic.expect.css
new file mode 100644
index 0000000..655ef23
--- /dev/null
+++ b/test/fixtures/basic.expect.css
@@ -0,0 +1,91 @@
+a, b {
+	color: white
+}
+
+a c, a d, b c, b d {
+	color: blue
+}
+
+a, b {
+	color: white
+}
+
+a c, a d, b c, b d {
+	color: blue
+}
+
+a c e, a c f, a d e, a d f, b c e, b c f, b d e, b d f {
+	color: black
+}
+
+a, b {
+	color: red
+}
+
+a a, b b {
+	color: white
+}
+
+a {
+	color: red
+}
+
+@media {
+
+	a {
+		color: white
+	}
+	}
+
+a {
+	color: red
+}
+
+a b {
+	color: white
+}
+
+@media {
+
+	a b {
+		color: blue
+	}
+}
+
+@media {
+
+	a c {
+		color: yellow
+	}
+
+	a {
+		color: black
+	}
+	}
+
+a {
+	color: red;
+
+	@unknown test {
+		color: white;
+	}
+}
+
+b {
+	color: white;
+
+	@phone {
+		color: blue;
+	}
+}
+
+@media {
+
+	b {
+		color: black
+	}
+
+	b c {
+		color: yellow
+	}
+	}
diff --git a/test/fixtures/ignore.css b/test/fixtures/ignore.css
new file mode 100644
index 0000000..5d6091a
--- /dev/null
+++ b/test/fixtures/ignore.css
@@ -0,0 +1,15 @@
+a, b {
+	color: white;
+
+	& c, & d {
+		color: blue;
+	}
+}
+
+a, b {
+	color: white;
+
+	@nest c, d {
+		color: blue;
+	}
+}
diff --git a/test/fixtures/ignore.expect.css b/test/fixtures/ignore.expect.css
new file mode 100644
index 0000000..5d6091a
--- /dev/null
+++ b/test/fixtures/ignore.expect.css
@@ -0,0 +1,15 @@
+a, b {
+	color: white;
+
+	& c, & d {
+		color: blue;
+	}
+}
+
+a, b {
+	color: white;
+
+	@nest c, d {
+		color: blue;
+	}
+}
diff --git a/test/index.js b/test/index.js
new file mode 100644
index 0000000..73e9b06
--- /dev/null
+++ b/test/index.js
@@ -0,0 +1,55 @@
+var tests = {
+	'postcss-nesting': {
+		'basic': {
+			message: 'supports basic usage'
+		},
+		'ignore': {
+			message: 'ignores invalid syntax'
+		}
+	}
+};
+
+var debug = true;
+var dir   = './test/fixtures/';
+
+var fs      = require('fs');
+var path    = require('path');
+var plugin  = require('../');
+var test    = require('tape');
+
+Object.keys(tests).forEach(function (name) {
+	var parts = tests[name];
+
+	test(name, function (t) {
+		var fixtures = Object.keys(parts);
+
+		t.plan(fixtures.length * 2);
+
+		fixtures.forEach(function (fixture) {
+			var message    = parts[fixture].message;
+			var options    = parts[fixture].options;
+			var warning    = parts[fixture].warning || 0;
+			var warningMsg = message + ' (# of warnings)';
+
+			var baseName   = fixture.split(':')[0];
+			var testName   = fixture.split(':').join('.');
+
+			var inputPath  = path.resolve(dir + baseName + '.css');
+			var expectPath = path.resolve(dir + testName + '.expect.css');
+			var actualPath = path.resolve(dir + testName + '.actual.css');
+
+			var inputCSS  = fs.readFileSync(inputPath,  'utf8');
+			var expectCSS = fs.readFileSync(expectPath, 'utf8');
+
+			plugin.process(inputCSS, options).then(function (result) {
+				var actualCSS = result.css;
+
+				if (debug) fs.writeFileSync(actualPath, actualCSS);
+
+				t.equal(actualCSS, expectCSS, message);
+
+				t.equal(result.warnings().length, warning, warningMsg);
+			});
+		});
+	});
+});
diff --git a/test/test.js b/test/test.js
deleted file mode 100644
index 202382a..0000000
--- a/test/test.js
+++ /dev/null
@@ -1,46 +0,0 @@
-var postcss = require('postcss');
-var nested  = require('../');
-var expect  = require('chai').expect;
-
-var check = function (input, output, opts) {
-	var processor = postcss([ nested(opts) ]);
-	expect( processor.process(input).css ).to.equal(output);
-};
-
-describe('postcss-nested', function () {
-	it('ignores sass nesting', function () {
-		check('z { color: red } a, b { color: white; & c, & d { color: blue } }',
-			  'z { color: red } a, b { color: white; & c, & d { color: blue } }');
-	});
-
-	it('unwraps css nesting', function () {
-		check('z { color: red } a, b { color: white; @nest & c, & d { color: blue } }',
-			  'z { color: red } a, b { color: white } a c, a d, b c, b d { color: blue }');
-	});
-
-	it('requires &', function () {
-		check('z { color: red } a, b { color: white; @nest c, d { color: blue } }',
-			  'z { color: red } a, b { color: white; @nest c, d { color: blue } }');
-	});
-
-	it('unwraps css deep nesting', function () {
-		check('z { color: red } a, b { color: white; @nest & c, & d { color: blue; @nest & e, & f { color: black } } }',
-			  'z { color: red } a, b { color: white } a c, a d, b c, b d { color: blue } a c e, a c f, a d e, a d f, b c e, b c f, b d e, b d f { color: black }');
-	});
-
-	it('unwraps bubble nesting', function () {
-		check('a { color: red; @media { color: white } }',
-			  'a { color: red } @media { a { color: white } }');
-	});
-
-	it('unwraps mixed nesting', function () {
-		check('a { color: red; @nest & b { color: white; @media { color: blue; } } @media { color: black; @nest & c { color: yellow } } }',
-			  'a { color: red } a b { color: white } @media { a b { color: blue } } @media { a { color: black } a c { color: yellow } }');
-	});
-
-	it('unwraps specified at-rules', function () {
-		check('a { color: red; @unknown test { color: white } } b { color: white; @phone { color: blue } @media { color: black; @nest & c { color: yellow } } }',
-			  'a { color: red; @unknown test { color: white } } b { color: white } @phone { b { color: blue } } @media { b { color: black } b c { color: yellow } }',
-			  { bubble: ['phone'] });
-	});
-});
-- 
2.33.1

