From 51ddacb541c48c01805ecc64c93358126451c950 Mon Sep 17 00:00:00 2001
From: Jonathan Neal <jonathantneal@hotmail.com>
Date: Wed, 5 Jun 2019 15:59:42 -0400
Subject: [PATCH 32/43] 4.0.0

---
 .rollup.js                                  |   8 +-
 .tape.js                                    | 166 ++++++-----
 .travis.yml                                 |   2 +-
 CHANGELOG.md                                |  14 +
 index.js                                    |  90 ------
 lib/match-supported-properties.js           |   1 -
 lib/transform-border.js                     | 293 --------------------
 lib/transform-size.js                       |   8 -
 lib/transform-spacing.js                    |  34 ---
 package.json                                |  51 ++--
 src/index.js                                | 103 +++++++
 {lib => src/lib}/clone-decl.js              |   0
 {lib => src/lib}/clone-rule.js              |   0
 {lib => src/lib}/match-inset-prefix.js      |   0
 {lib => src/lib}/match-side.js              |   0
 {lib => src/lib}/match-size.js              |   0
 src/lib/reduce-values.js                    |  20 ++
 {lib => src/lib}/split.js                   |   0
 src/lib/transform-border-radius.js          |  28 ++
 src/lib/transform-border.js                 |  91 ++++++
 src/lib/transform-directional-shorthands.js |  59 ++++
 {lib => src/lib}/transform-float.js         |   4 +-
 {lib => src/lib}/transform-inset.js         |   2 +-
 {lib => src/lib}/transform-resize.js        |   0
 {lib => src/lib}/transform-side.js          |  42 +--
 src/lib/transform-size.js                   |  10 +
 {lib => src/lib}/transform-text-align.js    |   4 +-
 {lib => src/lib}/transform-transition.js    |  87 +++---
 test/border.css                             |  68 +++--
 test/border.expect.css                      | 235 ++++------------
 test/border.ltr.expect.css                  | 100 +++----
 test/border.preserve.expect.css             | 280 ++++++-------------
 test/inset.css                              |   9 +-
 test/inset.expect.css                       |  60 +---
 test/inset.ltr.expect.css                   |  28 +-
 test/margin.css                             |   8 -
 test/margin.expect.css                      |  46 +--
 test/margin.ltr.expect.css                  |  14 +-
 test/padding.expect.css                     |  46 +--
 test/padding.ltr.expect.css                 |  14 +-
 test/size.expect.css                        |   2 +-
 test/transition.css                         |  12 -
 test/transition.expect.css                  |  48 ----
 test/transition.ltr.expect.css              |  12 -
 44 files changed, 724 insertions(+), 1375 deletions(-)
 delete mode 100644 index.js
 delete mode 100644 lib/match-supported-properties.js
 delete mode 100644 lib/transform-border.js
 delete mode 100644 lib/transform-size.js
 delete mode 100644 lib/transform-spacing.js
 create mode 100644 src/index.js
 rename {lib => src/lib}/clone-decl.js (100%)
 rename {lib => src/lib}/clone-rule.js (100%)
 rename {lib => src/lib}/match-inset-prefix.js (100%)
 rename {lib => src/lib}/match-side.js (100%)
 rename {lib => src/lib}/match-size.js (100%)
 create mode 100644 src/lib/reduce-values.js
 rename {lib => src/lib}/split.js (100%)
 create mode 100644 src/lib/transform-border-radius.js
 create mode 100644 src/lib/transform-border.js
 create mode 100644 src/lib/transform-directional-shorthands.js
 rename {lib => src/lib}/transform-float.js (65%)
 rename {lib => src/lib}/transform-inset.js (94%)
 rename {lib => src/lib}/transform-resize.js (100%)
 rename {lib => src/lib}/transform-side.js (61%)
 create mode 100644 src/lib/transform-size.js
 rename {lib => src/lib}/transform-text-align.js (66%)
 rename {lib => src/lib}/transform-transition.js (77%)

diff --git a/.rollup.js b/.rollup.js
index ebe39f9..b820dec 100644
--- a/.rollup.js
+++ b/.rollup.js
@@ -1,15 +1,15 @@
 import babel from 'rollup-plugin-babel';
 
 export default {
-	input: 'index.js',
+	input: 'src/index.js',
 	output: [
-		{ file: 'index.cjs.js', format: 'cjs', sourcemap: true },
-		{ file: 'index.es.mjs', format: 'es', sourcemap: true }
+		{ file: 'index.cjs.js', format: 'cjs', sourcemap: true, strict: false },
+		{ file: 'index.esm.mjs', format: 'esm', sourcemap: true, strict: false }
 	],
 	plugins: [
 		babel({
 			presets: [
-				['@babel/env', { modules: false, targets: { node: 6 } }]
+				['@babel/env', { modules: false, targets: { node: 8 } }]
 			]
 		})
 	]
diff --git a/.tape.js b/.tape.js
index 6823527..d774e8c 100644
--- a/.tape.js
+++ b/.tape.js
@@ -1,88 +1,86 @@
 module.exports = {
-	'postcss-logical-properties': {
-		'border': {
-			message: 'supports logical "border" property values'
-		},
-		'border:ltr': {
-			message: 'supports logical "border" property values with { dir: "ltr" }',
-			options: {
-				dir: 'ltr'
-			}
-		},
-		'border:preserve': {
-			message: 'supports logical "border" property values with { preserve: true }',
-			options: {
-				preserve: true
-			}
-		},
-		'clear': {
-			message: 'supports logical "clear" property values'
-		},
-		'clear:ltr': {
-			message: 'supports logical "clear" property values with { dir: "ltr" }',
-			options: {
-				dir: 'ltr'
-			}
-		},
-		'float': {
-			message: 'supports logical "float" property values'
-		},
-		'float:ltr': {
-			message: 'supports logical "float" property values with { dir: "ltr" }',
-			options: {
-				dir: 'ltr'
-			}
-		},
-		'inset': {
-			message: 'supports logical "inset" properties'
-		},
-		'inset:ltr': {
-			message: 'supports logical "inset" properties with { dir: "ltr" }',
-			options: {
-				dir: 'ltr'
-			}
-		},
-		'margin': {
-			message: 'supports logical "margin" properties'
-		},
-		'margin:ltr': {
-			message: 'supports logical "margin" properties with { dir: "ltr" }',
-			options: {
-				dir: 'ltr'
-			}
-		},
-		'padding': {
-			message: 'supports logical "padding" properties'
-		},
-		'padding:ltr': {
-			message: 'supports logical "padding" properties with { dir: "ltr" }',
-			options: {
-				dir: 'ltr'
-			}
-		},
-		'resize': {
-			message: 'supports logical "resize" properties'
-		},
-		'size': {
-			message: 'supports logical "size" properties'
-		},
-		'text-align': {
-			message: 'supports logical "text-align" properties'
-		},
-		'text-align:ltr': {
-			message: 'supports logical "text-align" properties with { dir: "ltr" }',
-			options: {
-				dir: 'ltr'
-			}
-		},
-		'transition': {
-			message: 'supports logical "transition" properties'
-		},
-		'transition:ltr': {
-			message: 'supports logical "transition" properties with { dir: "ltr" }',
-			options: {
-				dir: 'ltr'
-			}
+	'border': {
+		message: 'supports logical "border" property values'
+	},
+	'border:ltr': {
+		message: 'supports logical "border" property values with { dir: "ltr" }',
+		options: {
+			dir: 'ltr'
+		}
+	},
+	'border:preserve': {
+		message: 'supports logical "border" property values with { preserve: true }',
+		options: {
+			preserve: true
+		}
+	},
+	'clear': {
+		message: 'supports logical "clear" property values'
+	},
+	'clear:ltr': {
+		message: 'supports logical "clear" property values with { dir: "ltr" }',
+		options: {
+			dir: 'ltr'
+		}
+	},
+	'float': {
+		message: 'supports logical "float" property values'
+	},
+	'float:ltr': {
+		message: 'supports logical "float" property values with { dir: "ltr" }',
+		options: {
+			dir: 'ltr'
+		}
+	},
+	'inset': {
+		message: 'supports logical "inset" properties'
+	},
+	'inset:ltr': {
+		message: 'supports logical "inset" properties with { dir: "ltr" }',
+		options: {
+			dir: 'ltr'
+		}
+	},
+	'margin': {
+		message: 'supports logical "margin" properties'
+	},
+	'margin:ltr': {
+		message: 'supports logical "margin" properties with { dir: "ltr" }',
+		options: {
+			dir: 'ltr'
+		}
+	},
+	'padding': {
+		message: 'supports logical "padding" properties'
+	},
+	'padding:ltr': {
+		message: 'supports logical "padding" properties with { dir: "ltr" }',
+		options: {
+			dir: 'ltr'
+		}
+	},
+	'resize': {
+		message: 'supports logical "resize" properties'
+	},
+	'size': {
+		message: 'supports logical "size" properties'
+	},
+	'text-align': {
+		message: 'supports logical "text-align" properties'
+	},
+	'text-align:ltr': {
+		message: 'supports logical "text-align" properties with { dir: "ltr" }',
+		options: {
+			dir: 'ltr'
+		}
+	},
+	'transition': {
+		message: 'supports logical "transition" properties'
+	},
+	'transition:ltr': {
+		message: 'supports logical "transition" properties with { dir: "ltr" }',
+		options: {
+			dir: 'ltr'
 		}
 	}
 };
diff --git a/.travis.yml b/.travis.yml
index e1f11a5..6ebed1d 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -3,7 +3,7 @@
 language: node_js
 
 node_js:
-  - 6
+  - 8
 
 install:
   - npm install --ignore-scripts
diff --git a/CHANGELOG.md b/CHANGELOG.md
index 4281a32..fdd7bfe 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,5 +1,19 @@
 # Changes to PostCSS Logical Properties
 
+### 4.0.0 (June 5, 2019)
+
+- Added: Logical border-radius properties, which include
+  `border-end-end-radius`, `border-end-start-radius`, `border-start-end-radius`,
+  and `border-start-start-radius`.
+- Removed: All unknown logical properties, which include `border-end`,
+  `border-end-color`, `border-end-style`, `border-end-width`, `border-start`,
+  `border-start-color`, `border-start-style`, `border-start-width`, `inset-end`,
+  `inset-start`, `margin-end`, `margin-start`, `padding-end`, `padding-start`
+  and `border` with `logical`.
+- Updated: `transition` and `transition-property` to support the changes.
+- Updated: `postcss` to 7.0.16 (patch)
+- Updated: Node 8+ compatibility (major)
+
 ### 3.0.0 (September 20, 2018)
 
 - Added: Support for logical properties within `transition` and
diff --git a/index.js b/index.js
deleted file mode 100644
index 654ef42..0000000
--- a/index.js
+++ /dev/null
@@ -1,90 +0,0 @@
-// tooling
-import postcss from 'postcss';
-
-// internal tooling
-import transformBorder from './lib/transform-border';
-import transformFloat from './lib/transform-float';
-import transformInset from './lib/transform-inset';
-import transformResize from './lib/transform-resize';
-import transformSide from './lib/transform-side';
-import transformSize from './lib/transform-size';
-import transformSpacing from './lib/transform-spacing';
-import transformTextAlign from './lib/transform-text-align';
-import transformTransition from './lib/transform-transition';
-import matchSupportedProperties from './lib/match-supported-properties';
-import { splitBySlash, splitBySpace } from './lib/split';
-
-// supported transforms
-const transforms = {
-	'border': transformBorder['border'], 'border-width': transformBorder['border'], 'border-style': transformBorder['border'], 'border-color': transformBorder['border'],
-	'border-block': transformBorder['border-block'], 'border-block-width': transformBorder['border-block'], 'border-block-style': transformBorder['border-block'], 'border-block-color': transformBorder['border-block'],
-	'border-block-start': transformBorder['border-block-start'], 'border-block-start-width': transformBorder['border-block-start'], 'border-block-start-style': transformBorder['border-block-start'], 'border-block-start-color': transformBorder['border-block-start'],
-	'border-block-end': transformBorder['border-block-end'], 'border-block-end-width': transformBorder['border-block-end'], 'border-block-end-style': transformBorder['border-block-end'], 'border-block-end-color': transformBorder['border-block-end'],
-	'border-inline': transformBorder['border-inline'], 'border-inline-width': transformBorder['border-inline'], 'border-inline-style': transformBorder['border-inline'], 'border-inline-color': transformBorder['border-inline'],
-	'border-inline-start': transformBorder['border-inline-start'], 'border-inline-start-width': transformBorder['border-inline-start'], 'border-inline-start-style': transformBorder['border-inline-start'], 'border-inline-start-color': transformBorder['border-inline-start'],
-	'border-inline-end': transformBorder['border-inline-end'], 'border-inline-end-width': transformBorder['border-inline-end'], 'border-inline-end-style': transformBorder['border-inline-end'], 'border-inline-end-color': transformBorder['border-inline-end'],
-	'border-start': transformBorder['border-start'], 'border-start-width': transformBorder['border-start'], 'border-start-style': transformBorder['border-start'], 'border-start-color': transformBorder['border-start'],
-	'border-end': transformBorder['border-end'], 'border-end-width': transformBorder['border-end'], 'border-end-style': transformBorder['border-end'], 'border-end-color': transformBorder['border-end'],
-	'border-start-start-radius': transformBorder['border-start-start-radius'], 'border-start-end-radius': transformBorder['border-start-end-radius'], 'border-end-start-radius': transformBorder['border-end-start-radius'], 'border-end-end-radius': transformBorder['border-end-end-radius'],
-	'clear': transformFloat,
-	'inset': transformInset,
-	'margin': transformSpacing,
-	'padding': transformSpacing,
-	'block': transformSide['block'],
-	'block-start': transformSide['block-start'],
-	'block-end': transformSide['block-end'],
-	'inline': transformSide['inline'],
-	'inline-start': transformSide['inline-start'],
-	'inline-end': transformSide['inline-end'],
-	'start': transformSide['start'],
-	'end': transformSide['end'],
-	'float': transformFloat,
-	'resize': transformResize,
-	'size': transformSize,
-	'text-align': transformTextAlign,
-	'transition': transformTransition,
-	'transition-property': transformTransition
-};
-
-// properties that will be split by slash
-const splitBySlashPropRegExp = /^border(-block|-inline|-start|-end)?(-width|-style|-color)?$/i;
-
-// plugin
-export default postcss.plugin('postcss-logical-properties', opts => {
-	const preserve = Boolean(Object(opts).preserve);
-	const dir = !preserve && typeof Object(opts).dir === 'string'
-		? /^rtl$/i.test(opts.dir)
-			? 'rtl'
-		: 'ltr'
-	: false;
-
-	return root => {
-		root.walkDecls(decl => {
-			const parent = decl.parent;
-			const values = splitBySlashPropRegExp.test(decl.prop) ? splitBySlash(decl.value, true) : splitBySpace(decl.value, true);
-			const prop = decl.prop.replace(matchSupportedProperties, '$2$5').toLowerCase();
-
-			if (prop in transforms) {
-				const replacer = transforms[prop](decl, values, dir);
-
-				if (replacer) {
-					[].concat(replacer).forEach(replacement => {
-						if (replacement.type === 'rule') {
-							parent.before(replacement);
-						} else {
-							decl.before(replacement);
-						}
-					});
-
-					if (!preserve) {
-						decl.remove();
-
-						if (!parent.nodes.length) {
-							parent.remove();
-						}
-					}
-				}
-			}
-		});
-	};
-});
diff --git a/lib/match-supported-properties.js b/lib/match-supported-properties.js
deleted file mode 100644
index 8697638..0000000
--- a/lib/match-supported-properties.js
+++ /dev/null
@@ -1 +0,0 @@
-export default /^(?:(inset|margin|padding)(?:-(block|block-start|block-end|inline|inline-start|inline-end|start|end))|(min-|max-)?(block|inline)-(size))$/i;
diff --git a/lib/transform-border.js b/lib/transform-border.js
deleted file mode 100644
index f13834b..0000000
--- a/lib/transform-border.js
+++ /dev/null
@@ -1,293 +0,0 @@
-import cloneRule from './clone-rule';
-
-const matchLogical = /^\s*logical\s+/i;
-const matchLogicalBorder = /^border(-width|-style|-color)?$/i;
-const matchLogicalBorderSide = /^border-(block|block-start|block-end|inline|inline-start|inline-end|start|end)(-(width|style|color))?$/i;
-
-export default {
-	// border
-	'border': (decl, values, dir) => {
-		const isLogical = matchLogical.test(values[0]);
-
-		if (isLogical) {
-			values[0] = values[0].replace(matchLogical, '');
-		}
-
-		const ltrDecls = [
-			decl.clone({
-				prop: `border-top${decl.prop.replace(matchLogicalBorder, '$1')}`,
-				value: values[0]
-			}),
-			decl.clone({
-				prop: `border-left${decl.prop.replace(matchLogicalBorder, '$1')}`,
-				value: values[1] || values[0]
-			}),
-			decl.clone({
-				prop: `border-bottom${decl.prop.replace(matchLogicalBorder, '$1')}`,
-				value: values[2] || values[0]
-			}),
-			decl.clone({
-				prop: `border-right${decl.prop.replace(matchLogicalBorder, '$1')}`,
-				value: values[3] || values[1] || values[0]
-			})
-		];
-
-		const rtlDecls = [
-			decl.clone({
-				prop: `border-top${decl.prop.replace(matchLogicalBorder, '$1')}`,
-				value: values[0]
-			}),
-			decl.clone({
-				prop: `border-right${decl.prop.replace(matchLogicalBorder, '$1')}`,
-				value: values[1] || values[0]
-			}),
-			decl.clone({
-				prop: `border-bottom${decl.prop.replace(matchLogicalBorder, '$1')}`,
-				value: values[2] || values[0]
-			}),
-			decl.clone({
-				prop: `border-left${decl.prop.replace(matchLogicalBorder, '$1')}`,
-				value: values[3] || values[1] || values[0]
-			})
-		];
-
-		return isLogical ? 1 === values.length
-			? decl.clone({
-				value: decl.value.replace(matchLogical, '')
-			})
-			: !values[3] || values[3] === values[1]
-				? [
-					decl.clone({
-						prop: `border-top${decl.prop.replace(matchLogicalBorder, '$1')}`,
-						value: values[0]
-					}),
-					decl.clone({
-						prop: `border-right${decl.prop.replace(matchLogicalBorder, '$1')}`,
-						value: values[3] || values[1] || values[0]
-					}),
-					decl.clone({
-						prop: `border-bottom${decl.prop.replace(matchLogicalBorder, '$1')}`,
-						value: values[2] || values[0]
-					}),
-					decl.clone({
-						prop: `border-left${decl.prop.replace(matchLogicalBorder, '$1')}`,
-						value: values[1] || values[0]
-					})
-				]
-				: 'ltr' === dir ? ltrDecls : 'rtl' === dir ? rtlDecls : [
-					cloneRule(decl, 'ltr').append(ltrDecls),
-					cloneRule(decl, 'rtl').append(rtlDecls)
-				]
-			: null;
-	},
-
-	// border-block
-	'border-block': (decl, values) => [
-		decl.clone({
-			prop: `border-top${decl.prop.replace(matchLogicalBorderSide, '$2')}`,
-			value: values[0]
-		}),
-		decl.clone({
-			prop: `border-bottom${decl.prop.replace(matchLogicalBorderSide, '$2')}`,
-			value: values[0]
-		})
-	],
-
-	// border-block-start
-	'border-block-start': decl => {
-		decl.prop = 'border-top';
-	},
-
-	// border-block-end
-	'border-block-end': decl => {
-		decl.prop = 'border-bottom';
-	},
-
-	// border-inline
-	'border-inline': (decl, values, dir) => {
-		const ltrDecls = [
-			decl.clone({
-				prop: `border-left${decl.prop.replace(matchLogicalBorderSide, '$2')}`,
-				value: values[0]
-			}),
-			decl.clone({
-				prop: `border-right${decl.prop.replace(matchLogicalBorderSide, '$2')}`,
-				value: values[1] || values[0]
-			})
-		];
-
-		const rtlDecls = [
-			decl.clone({
-				prop: `border-right${decl.prop.replace(matchLogicalBorderSide, '$2')}`,
-				value: values[0]
-			}),
-			decl.clone({
-				prop: `border-left${decl.prop.replace(matchLogicalBorderSide, '$2')}`,
-				value: values[1] || values[0]
-			})
-		];
-
-		const isLTR = 1 === values.length || 2 === values.length && values[0] === values[1];
-
-		return isLTR ? ltrDecls : 'ltr' === dir ? ltrDecls : 'rtl' === dir ? rtlDecls : [
-			cloneRule(decl, 'ltr').append(ltrDecls),
-			cloneRule(decl, 'rtl').append(rtlDecls)
-		];
-	},
-
-	// border-inline-start
-	'border-inline-start': (decl, values, dir) => {
-		const ltrDecl = decl.clone({
-			prop: `border-left${decl.prop.replace(matchLogicalBorderSide, '$2')}`
-		});
-
-		const rtlDecl = decl.clone({
-			prop: `border-right${decl.prop.replace(matchLogicalBorderSide, '$2')}`
-		});
-
-		return 'ltr' === dir ? ltrDecl : 'rtl' === dir ? rtlDecl : [
-			cloneRule(decl, 'ltr').append(ltrDecl),
-			cloneRule(decl, 'rtl').append(rtlDecl)
-		];
-	},
-
-	// border-inline-end
-	'border-inline-end': (decl, values, dir) => {
-		const ltrDecl = decl.clone({
-			prop: `border-right${decl.prop.replace(matchLogicalBorderSide, '$2')}`
-		});
-
-		const rtlDecl = decl.clone({
-			prop: `border-left${decl.prop.replace(matchLogicalBorderSide, '$2')}`
-		});
-
-		return 'ltr' === dir ? ltrDecl : 'rtl' === dir ? rtlDecl : [
-			cloneRule(decl, 'ltr').append(ltrDecl),
-			cloneRule(decl, 'rtl').append(rtlDecl)
-		];
-	},
-
-	// border-start
-	'border-start': (decl, values, dir) => {
-		const ltrDecls = [
-			decl.clone({
-				prop: `border-top${decl.prop.replace(matchLogicalBorderSide, '$2')}`,
-				value: values[0]
-			}),
-			decl.clone({
-				prop: `border-left${decl.prop.replace(matchLogicalBorderSide, '$2')}`,
-				value: values[1] || values[0]
-			})
-		];
-
-		const rtlDecls = [
-			decl.clone({
-				prop: `border-top${decl.prop.replace(matchLogicalBorderSide, '$2')}`,
-				value: values[0]
-			}),
-			decl.clone({
-				prop: `border-right${decl.prop.replace(matchLogicalBorderSide, '$2')}`,
-				value: values[1] || values[0]
-			})
-		];
-
-		return 'ltr' === dir ? ltrDecls : 'rtl' === dir ? rtlDecls : [
-			cloneRule(decl, 'ltr').append(ltrDecls),
-			cloneRule(decl, 'rtl').append(rtlDecls)
-		];
-	},
-
-	// border-end
-	'border-end': (decl, values, dir) => {
-		const ltrDecls = [
-			decl.clone({
-				prop: `border-bottom${decl.prop.replace(matchLogicalBorderSide, '$2')}`,
-				value: values[0]
-			}),
-			decl.clone({
-				prop: `border-right${decl.prop.replace(matchLogicalBorderSide, '$2')}`,
-				value: values[1] || values[0]
-			})
-		];
-
-		const rtlDecls = [
-			decl.clone({
-				prop: `border-bottom${decl.prop.replace(matchLogicalBorderSide, '$2')}`,
-				value: values[0]
-			}),
-			decl.clone({
-				prop: `border-left${decl.prop.replace(matchLogicalBorderSide, '$2')}`,
-				value: values[1] || values[0]
-			})
-		];
-
-		return 'ltr' === dir ? ltrDecls : 'rtl' === dir ? rtlDecls : [
-			cloneRule(decl, 'ltr').append(ltrDecls),
-			cloneRule(decl, 'rtl').append(rtlDecls)
-		];
-	},
-
-	// border-start-start-radius
-	'border-start-start-radius': (decl, values, dir) => {
-		const ltrDecl = decl.clone({
-			prop: `border-top-left-radius`
-		});
-
-		const rtlDecl = decl.clone({
-			prop: `border-top-right-radius`
-		});
-
-		return 'ltr' === dir ? ltrDecl : 'rtl' === dir ? rtlDecl : [
-			cloneRule(decl, 'ltr').append(ltrDecl),
-			cloneRule(decl, 'rtl').append(rtlDecl)
-		];
-	},
-
-	// border-start-end-radius
-	'border-start-end-radius': (decl, values, dir) => {
-		const ltrDecl = decl.clone({
-			prop: `border-bottom-left-radius`
-		});
-
-		const rtlDecl = decl.clone({
-			prop: `border-bottom-right-radius`
-		});
-
-		return 'ltr' === dir ? ltrDecl : 'rtl' === dir ? rtlDecl : [
-			cloneRule(decl, 'ltr').append(ltrDecl),
-			cloneRule(decl, 'rtl').append(rtlDecl)
-		];
-	},
-
-	// border-end-start-radius
-	'border-end-start-radius': (decl, values, dir) => {
-		const ltrDecl = decl.clone({
-			prop: `border-top-right-radius`
-		});
-
-		const rtlDecl = decl.clone({
-			prop: `border-top-left-radius`
-		});
-
-		return 'ltr' === dir ? ltrDecl : 'rtl' === dir ? rtlDecl : [
-			cloneRule(decl, 'ltr').append(ltrDecl),
-			cloneRule(decl, 'rtl').append(rtlDecl)
-		];
-	},
-
-	// border-end-end-radius
-	'border-end-end-radius': (decl, values, dir) => {
-		const ltrDecl = decl.clone({
-			prop: `border-bottom-right-radius`
-		});
-
-		const rtlDecl = decl.clone({
-			prop: `border-bottom-left-radius`
-		});
-
-		return 'ltr' === dir ? ltrDecl : 'rtl' === dir ? rtlDecl : [
-			cloneRule(decl, 'ltr').append(ltrDecl),
-			cloneRule(decl, 'rtl').append(rtlDecl)
-		];
-	}
-};
diff --git a/lib/transform-size.js b/lib/transform-size.js
deleted file mode 100644
index c8f2c42..0000000
--- a/lib/transform-size.js
+++ /dev/null
@@ -1,8 +0,0 @@
-import matchSize from './match-size';
-
-export default decl => {
-	decl.prop = decl.prop.replace(
-		matchSize,
-		($0, minmax, flow) => `${minmax||''}${'block' === flow ? 'height' : 'width'}`
-	);
-};
diff --git a/lib/transform-spacing.js b/lib/transform-spacing.js
deleted file mode 100644
index 8ab2a1e..0000000
--- a/lib/transform-spacing.js
+++ /dev/null
@@ -1,34 +0,0 @@
-import cloneRule from './clone-rule';
-
-export default (decl, values, dir) => {
-	if ('logical' !== values[0]) {
-		return null;
-	}
-
-	const isLTR = !values[4] || values[4] === values[2];
-
-	const ltrDecl = decl.clone({
-		value: [
-			values[1],
-			values[4] || values[2] || values[1],
-			values[3] || values[1],
-			values[2] || values[1]
-		].join(' ')
-	});
-
-	const rtlDecl = decl.clone({
-		value: [
-			values[1],
-			values[2] || values[1],
-			values[3] || values[1],
-			values[4] || values[2] || values[1]
-		].join(' ')
-	});
-
-	return isLTR ? decl.clone({
-		value: decl.value.replace(/^\s*logical\s+/i, '')
-	}) : 'ltr' === dir ? ltrDecl : 'rtl' === dir ? rtlDecl : [
-		cloneRule(decl, 'ltr').append(ltrDecl),
-		cloneRule(decl, 'rtl').append(rtlDecl)
-	];
-};
diff --git a/package.json b/package.json
index 2a331a4..c0b3527 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "postcss-logical",
-  "version": "3.0.0",
+  "version": "4.0.0",
   "description": "Use logical properties and values in CSS",
   "author": "Jonathan Neal <jonathantneal@hotmail.com>",
   "license": "CC0-1.0",
@@ -8,42 +8,53 @@
   "homepage": "https://github.com/jonathantneal/postcss-logical#readme",
   "bugs": "https://github.com/jonathantneal/postcss-logical/issues",
   "main": "index.cjs.js",
-  "module": "index.es.mjs",
+  "module": "index.esm.mjs",
   "files": [
     "index.cjs.js",
     "index.cjs.js.map",
-    "index.es.mjs",
-    "index.es.mjs.map"
+    "index.esm.mjs",
+    "index.esm.mjs.map"
   ],
   "scripts": {
+    "build": "rollup --config .rollup.js --silent",
     "prepublishOnly": "npm test",
-    "pretest": "rollup -c .rollup.js --silent",
-    "test": "echo 'Running tests...'; npm run test:ec && npm run test:js && npm run test:tape",
+    "pretest:tape": "npm run build",
+    "test": "npm run test:ec && npm run test:js && npm run test:tape",
     "test:ec": "echint --ignore index.*.js test",
-    "test:js": "eslint *.js --cache --ignore-path .gitignore --quiet",
+    "test:js": "eslint src/{*,**/*}.js --cache --ignore-path .gitignore --quiet",
     "test:tape": "postcss-tape"
   },
   "engines": {
-    "node": ">=6.0.0"
+    "node": ">=8.0.0"
   },
   "dependencies": {
-    "postcss": "^7.0.2"
+    "postcss": "^7.0.16"
   },
   "devDependencies": {
-    "@babel/core": "^7.1.0",
-    "@babel/preset-env": "^7.1.0",
-    "babel-eslint": "^9.0.0",
-    "echint": "^4.0.1",
-    "eslint": "^5.6.0",
-    "eslint-config-dev": "^2.0.0",
-    "postcss-tape": "^2.2.0",
+    "@babel/core": "^7.4.5",
+    "@babel/preset-env": "^7.4.5",
+    "babel-eslint": "^10.0.1",
+    "echint": "^4.0.2",
+    "eslint": "^5.16.0",
+    "postcss-tape": "^5.0.0",
     "pre-commit": "^1.2.2",
-    "rollup": "^0.66.1",
-    "rollup-plugin-babel": "^4.0.3"
+    "rollup": "^1.14.2",
+    "rollup-plugin-babel": "^4.3.2"
   },
   "eslintConfig": {
-    "extends": "dev",
-    "parser": "babel-eslint"
+    "env": {
+      "browser": true,
+      "es6": true,
+      "node": true
+    },
+    "extends": "eslint:recommended",
+    "parser": "babel-eslint",
+    "parserOptions": {
+      "ecmaVersion": 2018,
+      "impliedStrict": true,
+      "sourceType": "module"
+    },
+    "root": true
   },
   "keywords": [
     "postcss",
diff --git a/src/index.js b/src/index.js
new file mode 100644
index 0000000..7bc88cc
--- /dev/null
+++ b/src/index.js
@@ -0,0 +1,103 @@
+// tooling
+import postcss from 'postcss';
+
+// internal tooling
+import transformBorder from './lib/transform-border';
+import transformBorderRadius from './lib/transform-border-radius';
+import transformDirectionalShorthands from './lib/transform-directional-shorthands';
+import transformFloat from './lib/transform-float';
+import transformInset from './lib/transform-inset';
+import transformResize from './lib/transform-resize';
+import transformSide from './lib/transform-side';
+import transformSize from './lib/transform-size';
+import transformTextAlign from './lib/transform-text-align';
+import transformTransition from './lib/transform-transition';
+import { splitBySpace } from './lib/split';
+
+// supported transforms
+const transforms = {
+	// Flow-Relative Values
+	'clear': transformFloat,
+	'float': transformFloat,
+	'resize': transformResize,
+	'text-align': transformTextAlign,
+
+	// Logical Height and Logical Width
+	'block-size': transformSize['block-size'],
+	'inline-size': transformSize['inline-size'],
+
+	// Flow-relative Margins
+	'margin': transformDirectionalShorthands, 'margin-inline': transformSide['inline'], 'margin-inline-end': transformSide['inline-end'], 'margin-inline-start': transformSide['inline-start'], 'margin-block': transformSide['block'], 'margin-block-end': transformSide['block-end'], 'margin-block-start': transformSide['block-start'],
+
+	// Flow-relative Offsets
+	'inset': transformInset, 'inset-inline': transformSide['inline'], 'inset-inline-end': transformSide['inline-end'], 'inset-inline-start': transformSide['inline-start'], 'inset-block': transformSide['block'], 'inset-block-end': transformSide['block-end'], 'inset-block-start': transformSide['block-start'],
+
+	// Flow-relative Padding
+	'padding': transformDirectionalShorthands, 'padding-inline': transformSide['inline'], 'padding-inline-end': transformSide['inline-end'], 'padding-inline-start': transformSide['inline-start'], 'padding-block': transformSide['block'], 'padding-block-end': transformSide['block-end'], 'padding-block-start': transformSide['block-start'],
+
+	// Flow-relative Borders
+	'border-block':        transformBorder['border-block'],        'border-block-color':        transformBorder['border-block'],        'border-block-style':        transformBorder['border-block'],        'border-block-width':        transformBorder['border-block'],
+	'border-block-end':    transformBorder['border-block-end'],    'border-block-end-color':    transformBorder['border-block-end'],    'border-block-end-style':    transformBorder['border-block-end'],    'border-block-end-width':    transformBorder['border-block-end'],
+	'border-block-start':  transformBorder['border-block-start'],  'border-block-start-color':  transformBorder['border-block-start'],  'border-block-start-style':  transformBorder['border-block-start'],  'border-block-start-width':  transformBorder['border-block-start'],
+	'border-inline':       transformBorder['border-inline'],       'border-inline-color':       transformBorder['border-inline'],       'border-inline-style':       transformBorder['border-inline'],       'border-inline-width':       transformBorder['border-inline'],
+	'border-inline-end':   transformBorder['border-inline-end'],   'border-inline-end-color':   transformBorder['border-inline-end'],   'border-inline-end-style':   transformBorder['border-inline-end'],   'border-inline-end-width':   transformBorder['border-inline-end'],
+	'border-inline-start': transformBorder['border-inline-start'], 'border-inline-start-color': transformBorder['border-inline-start'], 'border-inline-start-style': transformBorder['border-inline-start'], 'border-inline-start-width': transformBorder['border-inline-start'],
+
+	// Flow-relative Corner Rounding
+	'border-end-end-radius': transformBorderRadius, 'border-end-start-radius': transformBorderRadius, 'border-start-end-radius': transformBorderRadius, 'border-start-start-radius': transformBorderRadius,
+
+	// Four-Directional Shorthand Border Properties
+	'border-color': transformDirectionalShorthands, 'border-style': transformDirectionalShorthands, 'border-width': transformDirectionalShorthands,
+
+	// Transition helpers
+	'transition': transformTransition, 'transition-property': transformTransition
+};
+
+const transformsRegExp = new RegExp(`^(${Object.keys(transforms).join('|')})$`, 'i');
+
+// properties whose values will not be split
+const unsplitPropRegExp = /^(border-block|border-block-end|border-block-start|border-inline|border-inline-end|border-inline-start)$/i;
+
+// plugin
+export default postcss.plugin('postcss-logical-properties', opts => {
+	opts = Object(opts);
+
+	const preserve = Boolean(opts.preserve);
+	const dir = !preserve && typeof opts.dir === 'string'
+		? /^rtl$/i.test(opts.dir)
+			? 'rtl'
+		: 'ltr'
+	: false;
+
+	return root => {
+		root.walkDecls(transformsRegExp, decl => {
+			const parent = decl.parent;
+			const values = unsplitPropRegExp.test(decl.prop) ? [decl.value] : splitBySpace(decl.value, true);
+			const prop = decl.prop.toLowerCase();
+
+			const replacer = transforms[prop](decl, values, dir);
+
+			if (!replacer) {
+				return;
+			}
+
+			[].concat(replacer).forEach(replacement => {
+				if (replacement.type === 'rule') {
+					parent.before(replacement);
+				} else {
+					decl.before(replacement);
+				}
+			});
+
+			if (preserve) {
+				return;
+			}
+
+			decl.remove();
+
+			if (!parent.nodes.length) {
+				parent.remove();
+			}
+		});
+	};
+});
diff --git a/lib/clone-decl.js b/src/lib/clone-decl.js
similarity index 100%
rename from lib/clone-decl.js
rename to src/lib/clone-decl.js
diff --git a/lib/clone-rule.js b/src/lib/clone-rule.js
similarity index 100%
rename from lib/clone-rule.js
rename to src/lib/clone-rule.js
diff --git a/lib/match-inset-prefix.js b/src/lib/match-inset-prefix.js
similarity index 100%
rename from lib/match-inset-prefix.js
rename to src/lib/match-inset-prefix.js
diff --git a/lib/match-side.js b/src/lib/match-side.js
similarity index 100%
rename from lib/match-side.js
rename to src/lib/match-side.js
diff --git a/lib/match-size.js b/src/lib/match-size.js
similarity index 100%
rename from lib/match-size.js
rename to src/lib/match-size.js
diff --git a/src/lib/reduce-values.js b/src/lib/reduce-values.js
new file mode 100644
index 0000000..64adf04
--- /dev/null
+++ b/src/lib/reduce-values.js
@@ -0,0 +1,20 @@
+export default values => {
+	const reducedValues = values.slice();
+
+	// reduce [A, B, C, B] to [A, B, C]
+	if (reducedValues.length === 4 && reducedValues[3] === reducedValues[1]) {
+		reducedValues.pop();
+	}
+
+	// reduce [A, B, A] to [A, B]
+	if (reducedValues.length === 3 && reducedValues[2] === reducedValues[0]) {
+		reducedValues.pop();
+	}
+
+	// reduce [A, A] to [A]
+	if (reducedValues.length === 2 && reducedValues[1] === reducedValues[0]) {
+		reducedValues.pop();
+	}
+
+	return reducedValues;
+};
diff --git a/lib/split.js b/src/lib/split.js
similarity index 100%
rename from lib/split.js
rename to src/lib/split.js
diff --git a/src/lib/transform-border-radius.js b/src/lib/transform-border-radius.js
new file mode 100644
index 0000000..0bf694f
--- /dev/null
+++ b/src/lib/transform-border-radius.js
@@ -0,0 +1,28 @@
+import cloneRule from './clone-rule';
+
+const logicalRadii = /^(border-)(end-end|end-start|start-end|start-start)(-radius)$/i;
+const ltrRadii = { 'end-end': 'bottom-right', 'end-start': 'bottom-left', 'start-end': 'top-right', 'start-start': 'top-left' };
+const rtlRadii = { 'end-end': 'bottom-left', 'end-start': 'bottom-right', 'start-end': 'top-left', 'start-start': 'top-right' };
+
+export default (decl, values, dir) => {
+	const ltrDecl = decl.clone({
+		prop: decl.prop.replace(logicalRadii, ($, prefix, direction, suffix) => `${prefix}${ltrRadii[direction]}${suffix}`)
+	});
+
+	if (dir === 'ltr') {
+		return ltrDecl;
+	}
+
+	const rtlDecl = decl.clone({
+		prop: decl.prop.replace(logicalRadii, ($, prefix, direction, suffix) => `${prefix}${rtlRadii[direction]}${suffix}`)
+	});
+
+	if (dir === 'rtl') {
+		return rtlDecl;
+	}
+
+	return [
+		cloneRule(decl, 'ltr').append(ltrDecl),
+		cloneRule(decl, 'rtl').append(rtlDecl)
+	];
+};
diff --git a/src/lib/transform-border.js b/src/lib/transform-border.js
new file mode 100644
index 0000000..82af648
--- /dev/null
+++ b/src/lib/transform-border.js
@@ -0,0 +1,91 @@
+import cloneRule from './clone-rule';
+
+const matchLogicalBorderSide = /^border-(block|block-start|block-end|inline|inline-start|inline-end)(-(width|style|color))?$/i;
+
+export default {
+	// border-block
+	'border-block': (decl, values) => [
+		decl.clone({
+			prop: `border-top${decl.prop.replace(matchLogicalBorderSide, '$2')}`,
+			value: values[0]
+		}),
+		decl.clone({
+			prop: `border-bottom${decl.prop.replace(matchLogicalBorderSide, '$2')}`,
+			value: values[0]
+		})
+	],
+
+	// border-block-start
+	'border-block-start': decl => {
+		decl.prop = `border-top${decl.prop.replace(matchLogicalBorderSide, '$2')}`;
+	},
+
+	// border-block-end
+	'border-block-end': decl => {
+		decl.prop = `border-bottom${decl.prop.replace(matchLogicalBorderSide, '$2')}`;
+	},
+
+	// border-inline
+	'border-inline': (decl, values, dir) => {
+		const ltrDecls = [
+			decl.clone({
+				prop: `border-left${decl.prop.replace(matchLogicalBorderSide, '$2')}`,
+				value: values[0]
+			}),
+			decl.clone({
+				prop: `border-right${decl.prop.replace(matchLogicalBorderSide, '$2')}`,
+				value: values[1] || values[0]
+			})
+		];
+
+		const rtlDecls = [
+			decl.clone({
+				prop: `border-right${decl.prop.replace(matchLogicalBorderSide, '$2')}`,
+				value: values[0]
+			}),
+			decl.clone({
+				prop: `border-left${decl.prop.replace(matchLogicalBorderSide, '$2')}`,
+				value: values[1] || values[0]
+			})
+		];
+
+		const isLTR = 1 === values.length || 2 === values.length && values[0] === values[1];
+
+		return isLTR ? ltrDecls : dir === 'ltr' ? ltrDecls : dir === 'rtl' ? rtlDecls : [
+			cloneRule(decl, 'ltr').append(ltrDecls),
+			cloneRule(decl, 'rtl').append(rtlDecls)
+		];
+	},
+
+	// border-inline-start
+	'border-inline-start': (decl, values, dir) => {
+		const ltrDecl = decl.clone({
+			prop: `border-left${decl.prop.replace(matchLogicalBorderSide, '$2')}`
+		});
+
+		const rtlDecl = decl.clone({
+			prop: `border-right${decl.prop.replace(matchLogicalBorderSide, '$2')}`
+		});
+
+		return dir === 'ltr' ? ltrDecl : dir === 'rtl' ? rtlDecl : [
+			cloneRule(decl, 'ltr').append(ltrDecl),
+			cloneRule(decl, 'rtl').append(rtlDecl)
+		];
+	},
+
+	// border-inline-end
+	'border-inline-end': (decl, values, dir) => {
+		const ltrDecl = decl.clone({
+			prop: `border-right${decl.prop.replace(matchLogicalBorderSide, '$2')}`
+		});
+
+		const rtlDecl = decl.clone({
+			prop: `border-left${decl.prop.replace(matchLogicalBorderSide, '$2')}`
+		});
+
+		return dir === 'ltr' ? ltrDecl : dir === 'rtl' ? rtlDecl : [
+			cloneRule(decl, 'ltr').append(ltrDecl),
+			cloneRule(decl, 'rtl').append(rtlDecl)
+		];
+	}
+};
diff --git a/src/lib/transform-directional-shorthands.js b/src/lib/transform-directional-shorthands.js
new file mode 100644
index 0000000..b935c6b
--- /dev/null
+++ b/src/lib/transform-directional-shorthands.js
@@ -0,0 +1,59 @@
+import cloneRule from './clone-rule';
+import reduceValues from './reduce-values';
+
+export default (decl, values, dir) => {
+	if ('logical' !== values[0]) {
+		return null;
+	}
+
+	// get logical directions as all, inline, block-end, then inline-end
+	const [, all, inline, blockEnd, inlineEnd ] = values;
+
+	// get left-to-right relative directions from logical directions as:
+	// → top from all
+	// → right from inline-end, inline, or all
+	// → bottom from block-end, block, or all
+	// → left from inline, or all
+	const ltrValues = reduceValues([
+		all,
+		inlineEnd || inline || all,
+		blockEnd || all,
+		inline || all
+	]);
+
+	const ltrDecl = decl.clone({
+		value: ltrValues.join(' ')
+	});
+
+	// return the ltr values if the values are flow agnostic (where no second inline value was needed)
+	const isFlowAgnostic = ltrValues.length < 4;
+
+	if (isFlowAgnostic || dir === 'ltr') {
+		return ltrDecl;
+	}
+
+	// get right-to-left relative directions from logical directions as:
+	// → top from all
+	// → right from inline, or all
+	// → bottom from block-end, block, or all
+	// → left from inline-end, inline, or all
+	const rtlValues = reduceValues([
+		all,
+		inline || all,
+		blockEnd || all,
+		inlineEnd || inline || all
+	]);
+
+	const rtlDecl = decl.clone({
+		value: rtlValues.join(' ')
+	});
+
+	if (dir === 'rtl') {
+		return rtlDecl;
+	}
+
+	return [
+		cloneRule(decl, 'ltr').append(ltrDecl),
+		cloneRule(decl, 'rtl').append(rtlDecl)
+	];
+}
diff --git a/lib/transform-float.js b/src/lib/transform-float.js
similarity index 65%
rename from lib/transform-float.js
rename to src/lib/transform-float.js
index c8e734a..60764f0 100644
--- a/lib/transform-float.js
+++ b/src/lib/transform-float.js
@@ -4,10 +4,10 @@ export default (decl, values, dir) => {
 	const lDecl = decl.clone({ value: 'left' });
 	const rDecl = decl.clone({ value: 'right' });
 
-	return /^inline-start$/i.test(decl.value) ? 'ltr' === dir ? lDecl : 'rtl' === dir ? rDecl : [
+	return /^inline-start$/i.test(decl.value) ? dir === 'ltr' ? lDecl : dir === 'rtl' ? rDecl : [
 		cloneRule(decl, 'ltr').append(lDecl),
 		cloneRule(decl, 'rtl').append(rDecl)
-	] : /^inline-end$/i.test(decl.value) ? 'ltr' === dir ? rDecl : 'rtl' === dir ? lDecl : [
+	] : /^inline-end$/i.test(decl.value) ? dir === 'ltr' ? rDecl : dir === 'rtl' ? lDecl : [
 		cloneRule(decl, 'ltr').append(rDecl),
 		cloneRule(decl, 'rtl').append(lDecl)
 	] : null;
diff --git a/lib/transform-inset.js b/src/lib/transform-inset.js
similarity index 94%
rename from lib/transform-inset.js
rename to src/lib/transform-inset.js
index 5f7251d..82a38b2 100644
--- a/lib/transform-inset.js
+++ b/src/lib/transform-inset.js
@@ -26,7 +26,7 @@ export default (decl, values, dir) => {
 		decl.clone({ prop: 'left', value: values[4] || values[2] || values[1] })
 	];
 
-	return isLTR || 'ltr' === dir ? ltrDecls : 'rtl' === dir ? rtlDecls : [
+	return isLTR || dir === 'ltr' ? ltrDecls : dir === 'rtl' ? rtlDecls : [
 		cloneRule(decl, 'ltr').append(ltrDecls),
 		cloneRule(decl, 'rtl').append(rtlDecls)
 	];
diff --git a/lib/transform-resize.js b/src/lib/transform-resize.js
similarity index 100%
rename from lib/transform-resize.js
rename to src/lib/transform-resize.js
diff --git a/lib/transform-side.js b/src/lib/transform-side.js
similarity index 61%
rename from lib/transform-side.js
rename to src/lib/transform-side.js
index a826e6a..78352b7 100644
--- a/lib/transform-side.js
+++ b/src/lib/transform-side.js
@@ -35,7 +35,7 @@ export default {
 
 		const isLTR = 1 === values.length || 2 === values.length && values[0] === values[1];
 
-		return isLTR ? ltrDecls : 'ltr' === dir ? ltrDecls : 'rtl' === dir ? rtlDecls : [
+		return isLTR ? ltrDecls : dir === 'ltr' ? ltrDecls : dir === 'rtl' ? rtlDecls : [
 			cloneRule(decl, 'ltr').append(ltrDecls),
 			cloneRule(decl, 'rtl').append(rtlDecls),
 		];
@@ -46,7 +46,7 @@ export default {
 		const ltrDecl = cloneDecl(decl, '-left', decl.value);
 		const rtlDecl = cloneDecl(decl, '-right', decl.value);
 
-		return 'ltr' === dir ? ltrDecl : 'rtl' === dir ? rtlDecl : [
+		return dir === 'ltr' ? ltrDecl : dir === 'rtl' ? rtlDecl : [
 			cloneRule(decl, 'ltr').append(ltrDecl),
 			cloneRule(decl, 'rtl').append(rtlDecl)
 		];
@@ -57,45 +57,9 @@ export default {
 		const ltrDecl = cloneDecl(decl, '-right', decl.value);
 		const rtlDecl = cloneDecl(decl, '-left', decl.value);
 
-		return 'ltr' === dir ? ltrDecl : 'rtl' === dir ? rtlDecl : [
+		return dir === 'ltr' ? ltrDecl : dir === 'rtl' ? rtlDecl : [
 			cloneRule(decl, 'ltr').append(ltrDecl),
 			cloneRule(decl, 'rtl').append(rtlDecl)
 		];
-	},
-
-	// inset-start, margin-start, padding-start
-	'start': (decl, values, dir) => {
-		const ltrDecls = [
-			cloneDecl(decl, '-top', values[0]),
-			cloneDecl(decl, '-left', values[1] || values[0])
-		];
-
-		const rtlDecls = [
-			cloneDecl(decl, '-top', values[0]),
-			cloneDecl(decl, '-right', values[1] || values[0])
-		];
-
-		return 'ltr' === dir ? ltrDecls : 'rtl' === dir ? rtlDecls : [
-			cloneRule(decl, 'ltr').append(ltrDecls),
-			cloneRule(decl, 'rtl').append(rtlDecls)
-		];
-	},
-
-	// inset-end, margin-end, padding-end
-	'end': (decl, values, dir) => {
-		const ltrDecls = [
-			cloneDecl(decl, '-bottom', values[0]),
-			cloneDecl(decl, '-right', values[1] || values[0])
-		];
-
-		const rtlDecls = [
-			cloneDecl(decl, '-bottom', values[0]),
-			cloneDecl(decl, '-left', values[1] || values[0])
-		];
-
-		return 'ltr' === dir ? ltrDecls : 'rtl' === dir ? rtlDecls : [
-			cloneRule(decl, 'ltr').append(ltrDecls),
-			cloneRule(decl, 'rtl').append(rtlDecls)
-		];
 	}
 }
diff --git a/src/lib/transform-size.js b/src/lib/transform-size.js
new file mode 100644
index 0000000..62a1dc7
--- /dev/null
+++ b/src/lib/transform-size.js
@@ -0,0 +1,10 @@
+export default {
+	// block-size
+	'block-size': decl => {
+		decl.prop = 'width';
+	},
+	// inline-size
+	'inline-size': decl => {
+		decl.prop = 'height';
+	}
+}
diff --git a/lib/transform-text-align.js b/src/lib/transform-text-align.js
similarity index 66%
rename from lib/transform-text-align.js
rename to src/lib/transform-text-align.js
index ed09f55..c525b01 100644
--- a/lib/transform-text-align.js
+++ b/src/lib/transform-text-align.js
@@ -4,10 +4,10 @@ export default (decl, values, dir) => {
 	const lDecl = decl.clone({ value: 'left' });
 	const rDecl = decl.clone({ value: 'right' });
 
-	return /^start$/i.test(decl.value) ? 'ltr' === dir ? lDecl : 'rtl' === dir ? rDecl : [
+	return /^start$/i.test(decl.value) ? dir === 'ltr' ? lDecl : dir === 'rtl' ? rDecl : [
 		cloneRule(decl, 'ltr').append(lDecl),
 		cloneRule(decl, 'rtl').append(rDecl)
-	] : /^end$/i.test(decl.value) ? 'ltr' === dir ? rDecl : 'rtl' === dir ? lDecl : [
+	] : /^end$/i.test(decl.value) ? dir === 'ltr' ? rDecl : dir === 'rtl' ? lDecl : [
 		cloneRule(decl, 'ltr').append(rDecl),
 		cloneRule(decl, 'rtl').append(lDecl)
 	] : null;
diff --git a/lib/transform-transition.js b/src/lib/transform-transition.js
similarity index 77%
rename from lib/transform-transition.js
rename to src/lib/transform-transition.js
index ef45d42..2c8111c 100644
--- a/lib/transform-transition.js
+++ b/src/lib/transform-transition.js
@@ -47,9 +47,9 @@ export default (decl, notValues, dir) => {
 	const ltrDecl = decl.clone({ value: ltrValues.join('') });
 	const rtlDecl = decl.clone({ value: rtlValues.join('') });
 
-	return ltrValues.length && 'ltr' === dir
+	return ltrValues.length && dir === 'ltr'
 		? ltrDecl
-	: rtlValues.length && 'rtl' === dir
+	: rtlValues.length && dir === 'rtl'
 		? rtlDecl
 	: ltrDecl.value !== rtlDecl.value
 		? [
@@ -60,63 +60,64 @@ export default (decl, notValues, dir) => {
 };
 
 const valueMap = {
-	'border-block': { ltr: ['border-top', 'border-bottom'], rtl: ['border-top', 'border-bottom'] },
+	// Logical Height and Logical Width
+	'block-size': { ltr: ['height'], rtl: ['height'] },
+	'inline-size': { ltr: ['width'], rtl: ['width'] },
+
+	// Flow-relative Margins
+	'margin-block-end': { ltr: ['margin-bottom'], rtl: ['margin-bottom'] },
+	'margin-block-start': { ltr: ['margin-top'], rtl: ['margin-top'] },
+	'margin-block': { ltr: ['margin-top', 'margin-bottom'], rtl: ['margin-top', 'margin-bottom'] },
+	'margin-inline-end': { ltr: ['margin-right'], rtl: ['margin-left'] },
+	'margin-inline-start': { ltr: ['margin-left'], rtl: ['margin-right'] },
+	'margin-inline': { ltr: ['margin-left', 'margin-right'], rtl: ['margin-left', 'margin-right'] },
+
+	// Flow-relative Offsets
+	'inset-block-end': { ltr: ['bottom'], rtl: ['bottom'] },
+	'inset-block-start': { ltr: ['top'], rtl: ['top'] },
+	'inset-block': { ltr: ['top', 'bottom'], rtl: ['top', 'bottom'] },
+	'inset-inline-end': { ltr: ['right'], rtl: ['left'] },
+	'inset-inline-start': { ltr: ['left'], rtl: ['right'] },
+	'inset-inline': { ltr: ['left', 'right'], rtl: ['left', 'right'] },
+	'inset': { ltr: ['top', 'right', 'bottom', 'left'], rtl: ['top', 'right', 'bottom', 'left'] },
+
+	// Flow-relative Padding
+	'padding-block-end': { ltr: ['padding-bottom'], rtl: ['padding-bottom'] },
+	'padding-block-start': { ltr: ['padding-top'], rtl: ['padding-top'] },
+	'padding-block': { ltr: ['padding-top', 'padding-bottom'], rtl: ['padding-top', 'padding-bottom'] },
+	'padding-inline-end': { ltr: ['padding-right'], rtl: ['padding-left'] },
+	'padding-inline-start': { ltr: ['padding-left'], rtl: ['padding-right'] },
+	'padding-inline': { ltr: ['padding-left', 'padding-right'], rtl: ['padding-left', 'padding-right'] },
+
+	// Flow-relative Borders
 	'border-block-color': { ltr: ['border-top-color', 'border-bottom-color'], rtl: ['border-top-color', 'border-bottom-color'] },
-	'border-block-end': { ltr: ['border-bottom'], rtl: ['border-bottom'] },
 	'border-block-end-color': { ltr: ['border-bottom-color'], rtl: ['border-bottom-color'] },
 	'border-block-end-style': { ltr: ['border-bottom-style'], rtl: ['border-bottom-style'] },
 	'border-block-end-width': { ltr: ['border-bottom-width'], rtl: ['border-bottom-width'] },
-	'border-block-start': { ltr: ['border-top'], rtl: ['border-top'] },
+	'border-block-end': { ltr: ['border-bottom'], rtl: ['border-bottom'] },
 	'border-block-start-color': { ltr: ['border-top-color'], rtl: ['border-top-color'] },
 	'border-block-start-style': { ltr: ['border-top-style'], rtl: ['border-top-style'] },
 	'border-block-start-width': { ltr: ['border-top-width'], rtl: ['border-top-width'] },
+	'border-block-start': { ltr: ['border-top'], rtl: ['border-top'] },
 	'border-block-style': { ltr: ['border-top-style', 'border-bottom-style'], rtl: ['border-top-style', 'border-bottom-style'] },
 	'border-block-width': { ltr: ['border-top-width', 'border-bottom-width'], rtl: ['border-top-width', 'border-bottom-width'] },
-	'border-end': { ltr: ['border-bottom', 'border-right'], rtl: ['border-bottom', 'border-left'] },
-	'border-end-color': { ltr: ['border-bottom-color', 'border-right-color'], rtl: ['border-bottom-color', 'border-left-color'] },
-	'border-end-style': { ltr: ['border-bottom-style', 'border-right-style'], rtl: ['border-bottom-style', 'border-left-style'] },
-	'border-end-width': { ltr: ['border-bottom-width', 'border-right-width'], rtl: ['border-bottom-width', 'border-left-width'] },
-	'border-inline': { ltr: ['border-left', 'border-right'], rtl: ['border-left', 'border-right'] },
+	'border-block': { ltr: ['border-top', 'border-bottom'], rtl: ['border-top', 'border-bottom'] },
 	'border-inline-color': { ltr: ['border-left-color', 'border-right-color'], rtl: ['border-left-color', 'border-right-color'] },
-	'border-inline-end': { ltr: ['border-right'], rtl: ['border-left'] },
 	'border-inline-end-color': { ltr: ['border-right-color'], rtl: ['border-left-color'] },
 	'border-inline-end-style': { ltr: ['border-right-style'], rtl: ['border-left-style'] },
 	'border-inline-end-width': { ltr: ['border-right-width'], rtl: ['border-left-width'] },
-	'border-inline-start': { ltr: ['border-left'], rtl: ['border-right'] },
+	'border-inline-end': { ltr: ['border-right'], rtl: ['border-left'] },
 	'border-inline-start-color': { ltr: ['border-left-color'], rtl: ['border-right-color'] },
 	'border-inline-start-style': { ltr: ['border-left-style'], rtl: ['border-right-style'] },
 	'border-inline-start-width': { ltr: ['border-left-width'], rtl: ['border-right-width'] },
+	'border-inline-start': { ltr: ['border-left'], rtl: ['border-right'] },
 	'border-inline-style': { ltr: ['border-left-style', 'border-right-style'], rtl: ['border-left-style', 'border-right-style'] },
 	'border-inline-width': { ltr: ['border-left-width', 'border-right-width'], rtl: ['border-left-width', 'border-right-width'] },
-	'border-start': { ltr: ['border-top', 'border-left'], rtl: ['border-top', 'border-right'] },
-	'border-start-color': { ltr: ['border-top-color', 'border-left-color'], rtl: ['border-top-color', 'border-right-color'] },
-	'border-start-style': { ltr: ['border-top-style', 'border-left-style'], rtl: ['border-top-style', 'border-right-style'] },
-	'border-start-width': { ltr: ['border-top-width', 'border-left-width'], rtl: ['border-top-width', 'border-right-width'] },
-	'block-size': { ltr: ['height'], rtl: ['height'] },
-	'inline-size': { ltr: ['width'], rtl: ['width'] },
-	'inset': { ltr: ['top', 'right', 'bottom', 'left'], rtl: ['top', 'right', 'bottom', 'left'] },
-	'inset-block': { ltr: ['top', 'bottom'], rtl: ['top', 'bottom'] },
-	'inset-block-start': { ltr: ['top'], rtl: ['top'] },
-	'inset-block-end': { ltr: ['bottom'], rtl: ['bottom'] },
-	'inset-end': { ltr: ['bottom', 'right'], rtl: ['bottom', 'left'] },
-	'inset-inline': { ltr: ['left', 'right'], rtl: ['left', 'right'] },
-	'inset-inline-start': { ltr: ['left'], rtl: ['right'] },
-	'inset-inline-end': { ltr: ['right'], rtl: ['left'] },
-	'inset-start': { ltr: ['top', 'left'], rtl: ['top', 'right'] },
-	'margin-block': { ltr: ['margin-top', 'margin-bottom'], rtl: ['margin-top', 'margin-bottom'] },
-	'margin-block-start': { ltr: ['margin-top'], rtl: ['margin-top'] },
-	'margin-block-end': { ltr: ['margin-bottom'], rtl: ['margin-bottom'] },
-	'margin-end': { ltr: ['margin-bottom', 'margin-right'], rtl: ['margin-bottom', 'margin-left'] },
-	'margin-inline': { ltr: ['margin-left', 'margin-right'], rtl: ['margin-left', 'margin-right'] },
-	'margin-inline-start': { ltr: ['margin-left'], rtl: ['margin-right'] },
-	'margin-inline-end': { ltr: ['margin-right'], rtl: ['margin-left'] },
-	'margin-start': { ltr: ['margin-top', 'margin-left'], rtl: ['margin-top', 'margin-right'] },
-	'padding-block': { ltr: ['padding-top', 'padding-bottom'], rtl: ['padding-top', 'padding-bottom'] },
-	'padding-block-start': { ltr: ['padding-top'], rtl: ['padding-top'] },
-	'padding-block-end': { ltr: ['padding-bottom'], rtl: ['padding-bottom'] },
-	'padding-end': { ltr: ['padding-bottom', 'padding-right'], rtl: ['padding-bottom', 'padding-left'] },
-	'padding-inline': { ltr: ['padding-left', 'padding-right'], rtl: ['padding-left', 'padding-right'] },
-	'padding-inline-start': { ltr: ['padding-left'], rtl: ['padding-right'] },
-	'padding-inline-end': { ltr: ['padding-right'], rtl: ['padding-left'] },
-	'padding-start': { ltr: ['padding-top', 'padding-left'], rtl: ['padding-top', 'padding-right'] },
+	'border-inline': { ltr: ['border-left', 'border-right'], rtl: ['border-left', 'border-right'] },
+
+	// Flow-relative Corner Rounding
+	'border-end-end-radius': { ltr: ['border-bottom-right-radius'], rtl: ['border-bottom-left-radius'] },
+	'border-end-start-radius': { ltr: ['border-bottom-left-radius'], rtl: ['border-bottom-right-radius'] },
+	'border-start-end-radius': { ltr: ['border-top-right-radius'], rtl: ['border-top-left-radius'] },
+	'border-start-start-radius': { ltr: ['border-top-left-radius'], rtl: ['border-top-right-radius'] }
 };
diff --git a/test/border.css b/test/border.css
index 44f20a4..caa8d2f 100644
--- a/test/border.css
+++ b/test/border.css
@@ -1,59 +1,55 @@
 test-border {
-	border: logical 1px solid black;
-	border: logical 2px solid black / 3px solid black;
-	border: logical 4px solid black / 5px solid black / 6px solid black;
-	border: logical 7px solid black / 8px solid black / 9px solid black / 8px solid black;
-	border-inline: 10px solid black;
-	border-inline: 11px solid black / 11px solid black;
-	border-block: 12px solid black;
-	border-block: 13px solid black / 14px solid black;
-	border-block-start: 15px solid black;
-	border-block-end: 16px solid black;
-}
-
-test-flowing-border {
 	border: inherit;
-	border: logical 1px solid black / 2px solid black / 3px solid black / 4px solid black;
+	border-block: 1px solid black;
 	border: inherit;
-	border-inline: 5px solid black / 6px solid black;
+	border-block-start: 2px solid black;
 	border: inherit;
-	border-inline-start: 7px solid black;
+	border-block-end: 3px solid black;
 	border: inherit;
-	border-inline-end: 8px solid black;
+	border-inline: 4px solid black;
 	border: inherit;
-	border-start: 9px solid black;
-	border: inherit;
-	border-start: 10px solid black / 11px solid black;
+}
+
+test-flowing-border {
 	border: inherit;
-	border-end: 12px solid black;
+	border-inline-start: 1px solid black;
 	border: inherit;
-	border-end: 13px solid black / 14px solid black;
+	border-inline-end: 2px solid black;
 	border: inherit;
 }
 
-test-flowing-border-color {
-	border-color: inherit;
-	border-color: logical 1px solid black / 2px solid black / 3px solid black / 4px solid black;
+test-border-color {
 	border-color: inherit;
-	border-inline-color: 5px solid black / 6px solid black;
+	border-color: logical red;
 	border-color: inherit;
-	border-inline-start-color: 7px solid black;
+	border-color: logical orange yellow;
 	border-color: inherit;
-	border-inline-end-color: 8px solid black;
+	border-color: logical green blue indigo;
 	border-color: inherit;
-	border-start-color: 9px solid black;
+	border-block-color: violet;
 	border-color: inherit;
-	border-start-color: 10px solid black / 11px solid black;
+	border-block-start-color: white;
 	border-color: inherit;
-	border-end-color: 12px solid black;
+	border-block-end-color: black;
 	border-color: inherit;
-	border-end-color: 13px solid black / 14px solid black;
+	border-inline-color: grey;
 	border-color: inherit;
 }
 
+test-flowing-border-width {
+	border-width: logical 1px 2px 3px 4px;
+	border-width: inherit;
+	border-inline-width: 2px 4px;
+	border-width: inherit;
+	border-inline-start-width: 2px;
+	border-width: inherit;
+	border-inline-end-width: 4px;
+	border-width: inherit;
+}
+
 test-flowing-border-radius {
-	border-start-start-radius: 7px;
-	border-start-end-radius: 8px;
-	border-end-start-radius: 9px;
-	border-end-end-radius: 10px;
+	border-start-start-radius: 1px;
+	border-start-end-radius: 2px;
+	border-end-start-radius: 3px;
+	border-end-end-radius: 4px;
 }
diff --git a/test/border.expect.css b/test/border.expect.css
index cba1472..1b743f9 100644
--- a/test/border.expect.css
+++ b/test/border.expect.css
@@ -1,241 +1,128 @@
 test-border {
-	border: 1px solid black;
-	border-top: 2px solid black;
-	border-right: 3px solid black;
-	border-bottom: 2px solid black;
-	border-left: 3px solid black;
-	border-top: 4px solid black;
-	border-right: 5px solid black;
-	border-bottom: 6px solid black;
-	border-left: 5px solid black;
-	border-top: 7px solid black;
-	border-right: 8px solid black;
-	border-bottom: 9px solid black;
-	border-left: 8px solid black;
-	border-left: 10px solid black;
-	border-right: 10px solid black;
-	border-left: 11px solid black;
-	border-right: 11px solid black;
-	border-top: 12px solid black;
-	border-bottom: 12px solid black;
-	border-top: 13px solid black;
-	border-bottom: 13px solid black;
-	border-top: 15px solid black;
-	border-bottom: 16px solid black;
-}
-
-test-flowing-border:dir(ltr) {
-	border-top: 1px solid black;
-	border-left: 2px solid black;
-	border-bottom: 3px solid black;
-	border-right: 4px solid black;
-}
-
-test-flowing-border:dir(rtl) {
+	border: inherit;
 	border-top: 1px solid black;
-	border-right: 2px solid black;
+	border-bottom: 1px solid black;
+	border: inherit;
+	border-top: 2px solid black;
+	border: inherit;
 	border-bottom: 3px solid black;
+	border: inherit;
 	border-left: 4px solid black;
+	border-right: 4px solid black;
+	border: inherit;
 }
 
 test-flowing-border:dir(ltr) {
-	border-left: 5px solid black;
-	border-right: 6px solid black;
-}
-
-test-flowing-border:dir(rtl) {
-	border-right: 5px solid black;
-	border-left: 6px solid black;
-}
-
-test-flowing-border:dir(ltr) {
-	border-left: 7px solid black;
-}
-
-test-flowing-border:dir(rtl) {
-	border-right: 7px solid black;
-}
-
-test-flowing-border:dir(ltr) {
-	border-right: 8px solid black;
-}
-
-test-flowing-border:dir(rtl) {
-	border-left: 8px solid black;
-}
-
-test-flowing-border:dir(ltr) {
-	border-top: 9px solid black;
-	border-left: 9px solid black;
-}
-
-test-flowing-border:dir(rtl) {
-	border-top: 9px solid black;
-	border-right: 9px solid black;
-}
-
-test-flowing-border:dir(ltr) {
-	border-top: 10px solid black;
-	border-left: 11px solid black;
-}
-
-test-flowing-border:dir(rtl) {
-	border-top: 10px solid black;
-	border-right: 11px solid black;
-}
-
-test-flowing-border:dir(ltr) {
-	border-bottom: 12px solid black;
-	border-right: 12px solid black;
+	border-left: 1px solid black;
 }
 
 test-flowing-border:dir(rtl) {
-	border-bottom: 12px solid black;
-	border-left: 12px solid black;
+	border-right: 1px solid black;
 }
 
 test-flowing-border:dir(ltr) {
-	border-bottom: 13px solid black;
-	border-right: 14px solid black;
+	border-right: 2px solid black;
 }
 
 test-flowing-border:dir(rtl) {
-	border-bottom: 13px solid black;
-	border-left: 14px solid black;
+	border-left: 2px solid black;
 }
 
 test-flowing-border {
 	border: inherit;
 	border: inherit;
 	border: inherit;
-	border: inherit;
-	border: inherit;
-	border: inherit;
-	border: inherit;
-	border: inherit;
-	border: inherit;
-}
-
-test-flowing-border-color:dir(ltr) {
-	border-top-color: 1px solid black;
-	border-left-color: 2px solid black;
-	border-bottom-color: 3px solid black;
-	border-right-color: 4px solid black;
-}
-
-test-flowing-border-color:dir(rtl) {
-	border-top-color: 1px solid black;
-	border-right-color: 2px solid black;
-	border-bottom-color: 3px solid black;
-	border-left-color: 4px solid black;
-}
-
-test-flowing-border-color:dir(ltr) {
-	border-left-color: 5px solid black;
-	border-right-color: 6px solid black;
-}
-
-test-flowing-border-color:dir(rtl) {
-	border-right-color: 5px solid black;
-	border-left-color: 6px solid black;
-}
-
-test-flowing-border-color:dir(ltr) {
-	border-left-color: 7px solid black;
-}
-
-test-flowing-border-color:dir(rtl) {
-	border-right-color: 7px solid black;
 }
 
-test-flowing-border-color:dir(ltr) {
-	border-right-color: 8px solid black;
-}
-
-test-flowing-border-color:dir(rtl) {
-	border-left-color: 8px solid black;
+test-border-color {
+	border-color: inherit;
+	border-color: red;
+	border-color: inherit;
+	border-color: orange yellow;
+	border-color: inherit;
+	border-color: green blue indigo;
+	border-color: inherit;
+	border-top-color: violet;
+	border-bottom-color: violet;
+	border-color: inherit;
+	border-top-color: white;
+	border-color: inherit;
+	border-bottom-color: black;
+	border-color: inherit;
+	border-left-color: grey;
+	border-right-color: grey;
+	border-color: inherit;
 }
 
-test-flowing-border-color:dir(ltr) {
-	border-top-color: 9px solid black;
-	border-left-color: 9px solid black;
+test-flowing-border-width:dir(ltr) {
+	border-width: 1px 4px 3px 2px;
 }
 
-test-flowing-border-color:dir(rtl) {
-	border-top-color: 9px solid black;
-	border-right-color: 9px solid black;
+test-flowing-border-width:dir(rtl) {
+	border-width: 1px 2px 3px 4px;
 }
 
-test-flowing-border-color:dir(ltr) {
-	border-top-color: 10px solid black;
-	border-left-color: 11px solid black;
+test-flowing-border-width:dir(ltr) {
+	border-left-width: 2px;
+	border-right-width: 4px;
 }
 
-test-flowing-border-color:dir(rtl) {
-	border-top-color: 10px solid black;
-	border-right-color: 11px solid black;
+test-flowing-border-width:dir(rtl) {
+	border-right-width: 2px;
+	border-left-width: 4px;
 }
 
-test-flowing-border-color:dir(ltr) {
-	border-bottom-color: 12px solid black;
-	border-right-color: 12px solid black;
+test-flowing-border-width:dir(ltr) {
+	border-left-width: 2px;
 }
 
-test-flowing-border-color:dir(rtl) {
-	border-bottom-color: 12px solid black;
-	border-left-color: 12px solid black;
+test-flowing-border-width:dir(rtl) {
+	border-right-width: 2px;
 }
 
-test-flowing-border-color:dir(ltr) {
-	border-bottom-color: 13px solid black;
-	border-right-color: 14px solid black;
+test-flowing-border-width:dir(ltr) {
+	border-right-width: 4px;
 }
 
-test-flowing-border-color:dir(rtl) {
-	border-bottom-color: 13px solid black;
-	border-left-color: 14px solid black;
+test-flowing-border-width:dir(rtl) {
+	border-left-width: 4px;
 }
 
-test-flowing-border-color {
-	border-color: inherit;
-	border-color: inherit;
-	border-color: inherit;
-	border-color: inherit;
-	border-color: inherit;
-	border-color: inherit;
-	border-color: inherit;
-	border-color: inherit;
-	border-color: inherit;
+test-flowing-border-width {
+	border-width: inherit;
+	border-width: inherit;
+	border-width: inherit;
+	border-width: inherit;
 }
 
 test-flowing-border-radius:dir(ltr) {
-	border-top-left-radius: 7px;
+	border-top-left-radius: 1px;
 }
 
 test-flowing-border-radius:dir(rtl) {
-	border-top-right-radius: 7px;
+	border-top-right-radius: 1px;
 }
 
 test-flowing-border-radius:dir(ltr) {
-	border-bottom-left-radius: 8px;
+	border-top-right-radius: 2px;
 }
 
 test-flowing-border-radius:dir(rtl) {
-	border-bottom-right-radius: 8px;
+	border-top-left-radius: 2px;
 }
 
 test-flowing-border-radius:dir(ltr) {
-	border-top-right-radius: 9px;
+	border-bottom-left-radius: 3px;
 }
 
 test-flowing-border-radius:dir(rtl) {
-	border-top-left-radius: 9px;
+	border-bottom-right-radius: 3px;
 }
 
 test-flowing-border-radius:dir(ltr) {
-	border-bottom-right-radius: 10px;
+	border-bottom-right-radius: 4px;
 }
 
 test-flowing-border-radius:dir(rtl) {
-	border-bottom-left-radius: 10px;
+	border-bottom-left-radius: 4px;
 }
diff --git a/test/border.ltr.expect.css b/test/border.ltr.expect.css
index 34380ae..b69b72d 100644
--- a/test/border.ltr.expect.css
+++ b/test/border.ltr.expect.css
@@ -1,88 +1,60 @@
 test-border {
-	border: 1px solid black;
-	border-top: 2px solid black;
-	border-right: 3px solid black;
-	border-bottom: 2px solid black;
-	border-left: 3px solid black;
-	border-top: 4px solid black;
-	border-right: 5px solid black;
-	border-bottom: 6px solid black;
-	border-left: 5px solid black;
-	border-top: 7px solid black;
-	border-right: 8px solid black;
-	border-bottom: 9px solid black;
-	border-left: 8px solid black;
-	border-left: 10px solid black;
-	border-right: 10px solid black;
-	border-left: 11px solid black;
-	border-right: 11px solid black;
-	border-top: 12px solid black;
-	border-bottom: 12px solid black;
-	border-top: 13px solid black;
-	border-bottom: 13px solid black;
-	border-top: 15px solid black;
-	border-bottom: 16px solid black;
-}
-
-test-flowing-border {
 	border: inherit;
 	border-top: 1px solid black;
-	border-left: 2px solid black;
-	border-bottom: 3px solid black;
-	border-right: 4px solid black;
+	border-bottom: 1px solid black;
 	border: inherit;
-	border-left: 5px solid black;
-	border-right: 6px solid black;
-	border: inherit;
-	border-left: 7px solid black;
+	border-top: 2px solid black;
 	border: inherit;
-	border-right: 8px solid black;
+	border-bottom: 3px solid black;
 	border: inherit;
-	border-top: 9px solid black;
-	border-left: 9px solid black;
+	border-left: 4px solid black;
+	border-right: 4px solid black;
 	border: inherit;
-	border-top: 10px solid black;
-	border-left: 11px solid black;
+}
+
+test-flowing-border {
 	border: inherit;
-	border-bottom: 12px solid black;
-	border-right: 12px solid black;
+	border-left: 1px solid black;
 	border: inherit;
-	border-bottom: 13px solid black;
-	border-right: 14px solid black;
+	border-right: 2px solid black;
 	border: inherit;
 }
 
-test-flowing-border-color {
-	border-color: inherit;
-	border-top-color: 1px solid black;
-	border-left-color: 2px solid black;
-	border-bottom-color: 3px solid black;
-	border-right-color: 4px solid black;
+test-border-color {
 	border-color: inherit;
-	border-left-color: 5px solid black;
-	border-right-color: 6px solid black;
+	border-color: red;
 	border-color: inherit;
-	border-left-color: 7px solid black;
+	border-color: orange yellow;
 	border-color: inherit;
-	border-right-color: 8px solid black;
+	border-color: green blue indigo;
 	border-color: inherit;
-	border-top-color: 9px solid black;
-	border-left-color: 9px solid black;
+	border-top-color: violet;
+	border-bottom-color: violet;
 	border-color: inherit;
-	border-top-color: 10px solid black;
-	border-left-color: 11px solid black;
+	border-top-color: white;
 	border-color: inherit;
-	border-bottom-color: 12px solid black;
-	border-right-color: 12px solid black;
+	border-bottom-color: black;
 	border-color: inherit;
-	border-bottom-color: 13px solid black;
-	border-right-color: 14px solid black;
+	border-left-color: grey;
+	border-right-color: grey;
 	border-color: inherit;
 }
 
+test-flowing-border-width {
+	border-width: 1px 4px 3px 2px;
+	border-width: inherit;
+	border-left-width: 2px;
+	border-right-width: 4px;
+	border-width: inherit;
+	border-left-width: 2px;
+	border-width: inherit;
+	border-right-width: 4px;
+	border-width: inherit;
+}
+
 test-flowing-border-radius {
-	border-top-left-radius: 7px;
-	border-bottom-left-radius: 8px;
-	border-top-right-radius: 9px;
-	border-bottom-right-radius: 10px;
+	border-top-left-radius: 1px;
+	border-top-right-radius: 2px;
+	border-bottom-left-radius: 3px;
+	border-bottom-right-radius: 4px;
 }
diff --git a/test/border.preserve.expect.css b/test/border.preserve.expect.css
index 158a5c1..43bec38 100644
--- a/test/border.preserve.expect.css
+++ b/test/border.preserve.expect.css
@@ -1,272 +1,148 @@
 test-border {
-	border: 1px solid black;
-	border: logical 1px solid black;
-	border-top: 2px solid black;
-	border-right: 3px solid black;
-	border-bottom: 2px solid black;
-	border-left: 3px solid black;
-	border: logical 2px solid black / 3px solid black;
-	border-top: 4px solid black;
-	border-right: 5px solid black;
-	border-bottom: 6px solid black;
-	border-left: 5px solid black;
-	border: logical 4px solid black / 5px solid black / 6px solid black;
-	border-top: 7px solid black;
-	border-right: 8px solid black;
-	border-bottom: 9px solid black;
-	border-left: 8px solid black;
-	border: logical 7px solid black / 8px solid black / 9px solid black / 8px solid black;
-	border-left: 10px solid black;
-	border-right: 10px solid black;
-	border-inline: 10px solid black;
-	border-left: 11px solid black;
-	border-right: 11px solid black;
-	border-inline: 11px solid black / 11px solid black;
-	border-top: 12px solid black;
-	border-bottom: 12px solid black;
-	border-block: 12px solid black;
-	border-top: 13px solid black;
-	border-bottom: 13px solid black;
-	border-block: 13px solid black / 14px solid black;
-	border-top: 15px solid black;
-	border-bottom: 16px solid black;
-}
-
-test-flowing-border:dir(ltr) {
-	border-top: 1px solid black;
-	border-left: 2px solid black;
-	border-bottom: 3px solid black;
-	border-right: 4px solid black;
-}
-
-test-flowing-border:dir(rtl) {
+	border: inherit;
 	border-top: 1px solid black;
-	border-right: 2px solid black;
+	border-bottom: 1px solid black;
+	border-block: 1px solid black;
+	border: inherit;
+	border-top: 2px solid black;
+	border: inherit;
 	border-bottom: 3px solid black;
+	border: inherit;
 	border-left: 4px solid black;
+	border-right: 4px solid black;
+	border-inline: 4px solid black;
+	border: inherit;
 }
 
 test-flowing-border:dir(ltr) {
-	border-left: 5px solid black;
-	border-right: 6px solid black;
-}
-
-test-flowing-border:dir(rtl) {
-	border-right: 5px solid black;
-	border-left: 6px solid black;
-}
-
-test-flowing-border:dir(ltr) {
-	border-left: 7px solid black;
-}
-
-test-flowing-border:dir(rtl) {
-	border-right: 7px solid black;
-}
-
-test-flowing-border:dir(ltr) {
-	border-right: 8px solid black;
-}
-
-test-flowing-border:dir(rtl) {
-	border-left: 8px solid black;
-}
-
-test-flowing-border:dir(ltr) {
-	border-top: 9px solid black;
-	border-left: 9px solid black;
-}
-
-test-flowing-border:dir(rtl) {
-	border-top: 9px solid black;
-	border-right: 9px solid black;
-}
-
-test-flowing-border:dir(ltr) {
-	border-top: 10px solid black;
-	border-left: 11px solid black;
-}
-
-test-flowing-border:dir(rtl) {
-	border-top: 10px solid black;
-	border-right: 11px solid black;
-}
-
-test-flowing-border:dir(ltr) {
-	border-bottom: 12px solid black;
-	border-right: 12px solid black;
+	border-left: 1px solid black;
 }
 
 test-flowing-border:dir(rtl) {
-	border-bottom: 12px solid black;
-	border-left: 12px solid black;
+	border-right: 1px solid black;
 }
 
 test-flowing-border:dir(ltr) {
-	border-bottom: 13px solid black;
-	border-right: 14px solid black;
+	border-right: 2px solid black;
 }
 
 test-flowing-border:dir(rtl) {
-	border-bottom: 13px solid black;
-	border-left: 14px solid black;
+	border-left: 2px solid black;
 }
 
 test-flowing-border {
 	border: inherit;
-	border: logical 1px solid black / 2px solid black / 3px solid black / 4px solid black;
-	border: inherit;
-	border-inline: 5px solid black / 6px solid black;
-	border: inherit;
-	border-inline-start: 7px solid black;
-	border: inherit;
-	border-inline-end: 8px solid black;
-	border: inherit;
-	border-start: 9px solid black;
+	border-inline-start: 1px solid black;
 	border: inherit;
-	border-start: 10px solid black / 11px solid black;
+	border-inline-end: 2px solid black;
 	border: inherit;
-	border-end: 12px solid black;
-	border: inherit;
-	border-end: 13px solid black / 14px solid black;
-	border: inherit;
-}
-
-test-flowing-border-color:dir(ltr) {
-	border-top-color: 1px solid black;
-	border-left-color: 2px solid black;
-	border-bottom-color: 3px solid black;
-	border-right-color: 4px solid black;
-}
-
-test-flowing-border-color:dir(rtl) {
-	border-top-color: 1px solid black;
-	border-right-color: 2px solid black;
-	border-bottom-color: 3px solid black;
-	border-left-color: 4px solid black;
-}
-
-test-flowing-border-color:dir(ltr) {
-	border-left-color: 5px solid black;
-	border-right-color: 6px solid black;
-}
-
-test-flowing-border-color:dir(rtl) {
-	border-right-color: 5px solid black;
-	border-left-color: 6px solid black;
-}
-
-test-flowing-border-color:dir(ltr) {
-	border-left-color: 7px solid black;
-}
-
-test-flowing-border-color:dir(rtl) {
-	border-right-color: 7px solid black;
 }
 
-test-flowing-border-color:dir(ltr) {
-	border-right-color: 8px solid black;
-}
-
-test-flowing-border-color:dir(rtl) {
-	border-left-color: 8px solid black;
+test-border-color {
+	border-color: inherit;
+	border-color: red;
+	border-color: logical red;
+	border-color: inherit;
+	border-color: orange yellow;
+	border-color: logical orange yellow;
+	border-color: inherit;
+	border-color: green blue indigo;
+	border-color: logical green blue indigo;
+	border-color: inherit;
+	border-top-color: violet;
+	border-bottom-color: violet;
+	border-block-color: violet;
+	border-color: inherit;
+	border-top-color: white;
+	border-color: inherit;
+	border-bottom-color: black;
+	border-color: inherit;
+	border-left-color: grey;
+	border-right-color: grey;
+	border-inline-color: grey;
+	border-color: inherit;
 }
 
-test-flowing-border-color:dir(ltr) {
-	border-top-color: 9px solid black;
-	border-left-color: 9px solid black;
+test-flowing-border-width:dir(ltr) {
+	border-width: 1px 4px 3px 2px;
 }
 
-test-flowing-border-color:dir(rtl) {
-	border-top-color: 9px solid black;
-	border-right-color: 9px solid black;
+test-flowing-border-width:dir(rtl) {
+	border-width: 1px 2px 3px 4px;
 }
 
-test-flowing-border-color:dir(ltr) {
-	border-top-color: 10px solid black;
-	border-left-color: 11px solid black;
+test-flowing-border-width:dir(ltr) {
+	border-left-width: 2px;
+	border-right-width: 4px;
 }
 
-test-flowing-border-color:dir(rtl) {
-	border-top-color: 10px solid black;
-	border-right-color: 11px solid black;
+test-flowing-border-width:dir(rtl) {
+	border-right-width: 2px;
+	border-left-width: 4px;
 }
 
-test-flowing-border-color:dir(ltr) {
-	border-bottom-color: 12px solid black;
-	border-right-color: 12px solid black;
+test-flowing-border-width:dir(ltr) {
+	border-left-width: 2px;
 }
 
-test-flowing-border-color:dir(rtl) {
-	border-bottom-color: 12px solid black;
-	border-left-color: 12px solid black;
+test-flowing-border-width:dir(rtl) {
+	border-right-width: 2px;
 }
 
-test-flowing-border-color:dir(ltr) {
-	border-bottom-color: 13px solid black;
-	border-right-color: 14px solid black;
+test-flowing-border-width:dir(ltr) {
+	border-right-width: 4px;
 }
 
-test-flowing-border-color:dir(rtl) {
-	border-bottom-color: 13px solid black;
-	border-left-color: 14px solid black;
+test-flowing-border-width:dir(rtl) {
+	border-left-width: 4px;
 }
 
-test-flowing-border-color {
-	border-color: inherit;
-	border-color: logical 1px solid black / 2px solid black / 3px solid black / 4px solid black;
-	border-color: inherit;
-	border-inline-color: 5px solid black / 6px solid black;
-	border-color: inherit;
-	border-inline-start-color: 7px solid black;
-	border-color: inherit;
-	border-inline-end-color: 8px solid black;
-	border-color: inherit;
-	border-start-color: 9px solid black;
-	border-color: inherit;
-	border-start-color: 10px solid black / 11px solid black;
-	border-color: inherit;
-	border-end-color: 12px solid black;
-	border-color: inherit;
-	border-end-color: 13px solid black / 14px solid black;
-	border-color: inherit;
+test-flowing-border-width {
+	border-width: logical 1px 2px 3px 4px;
+	border-width: inherit;
+	border-inline-width: 2px 4px;
+	border-width: inherit;
+	border-inline-start-width: 2px;
+	border-width: inherit;
+	border-inline-end-width: 4px;
+	border-width: inherit;
 }
 
 test-flowing-border-radius:dir(ltr) {
-	border-top-left-radius: 7px;
+	border-top-left-radius: 1px;
 }
 
 test-flowing-border-radius:dir(rtl) {
-	border-top-right-radius: 7px;
+	border-top-right-radius: 1px;
 }
 
 test-flowing-border-radius:dir(ltr) {
-	border-bottom-left-radius: 8px;
+	border-top-right-radius: 2px;
 }
 
 test-flowing-border-radius:dir(rtl) {
-	border-bottom-right-radius: 8px;
+	border-top-left-radius: 2px;
 }
 
 test-flowing-border-radius:dir(ltr) {
-	border-top-right-radius: 9px;
+	border-bottom-left-radius: 3px;
 }
 
 test-flowing-border-radius:dir(rtl) {
-	border-top-left-radius: 9px;
+	border-bottom-right-radius: 3px;
 }
 
 test-flowing-border-radius:dir(ltr) {
-	border-bottom-right-radius: 10px;
+	border-bottom-right-radius: 4px;
 }
 
 test-flowing-border-radius:dir(rtl) {
-	border-bottom-left-radius: 10px;
+	border-bottom-left-radius: 4px;
 }
 
 test-flowing-border-radius {
-	border-start-start-radius: 7px;
-	border-start-end-radius: 8px;
-	border-end-start-radius: 9px;
-	border-end-end-radius: 10px;
+	border-start-start-radius: 1px;
+	border-start-end-radius: 2px;
+	border-end-start-radius: 3px;
+	border-end-end-radius: 4px;
 }
diff --git a/test/inset.css b/test/inset.css
index 5e0c8ab..4bff1b4 100644
--- a/test/inset.css
+++ b/test/inset.css
@@ -1,4 +1,5 @@
 test-inset {
+	inset: 0;
 	inset: logical 1px;
 	inset: logical 2px 3px;
 	inset: logical 4px 5px 6px;
@@ -15,12 +16,4 @@ test-flowing-inset {
 	inset: auto;
 	inset-inline-end: 8px;
 	inset: auto;
-	inset-start: 9px;
-	inset: auto;
-	inset-start: 10px 11px;
-	inset: auto;
-	inset-end: 12px;
-	inset: auto;
-	inset-end: 13px 14px;
-	inset: auto;
 }
diff --git a/test/inset.expect.css b/test/inset.expect.css
index d824cf8..a1f35af 100644
--- a/test/inset.expect.css
+++ b/test/inset.expect.css
@@ -1,4 +1,8 @@
 test-inset {
+	top: 0;
+	right: 0;
+	bottom: 0;
+	left: 0;
 	top: 1px;
 	left: 1px;
 	bottom: 1px;
@@ -57,46 +61,6 @@ test-flowing-inset:dir(rtl) {
 	left: 8px;
 }
 
-test-flowing-inset:dir(ltr) {
-	top: 9px;
-	left: 9px;
-}
-
-test-flowing-inset:dir(rtl) {
-	top: 9px;
-	right: 9px;
-}
-
-test-flowing-inset:dir(ltr) {
-	top: 10px;
-	left: 11px;
-}
-
-test-flowing-inset:dir(rtl) {
-	top: 10px;
-	right: 11px;
-}
-
-test-flowing-inset:dir(ltr) {
-	bottom: 12px;
-	right: 12px;
-}
-
-test-flowing-inset:dir(rtl) {
-	bottom: 12px;
-	left: 12px;
-}
-
-test-flowing-inset:dir(ltr) {
-	bottom: 13px;
-	right: 14px;
-}
-
-test-flowing-inset:dir(rtl) {
-	bottom: 13px;
-	left: 14px;
-}
-
 test-flowing-inset {
 	top: auto;
 	right: auto;
@@ -118,20 +82,4 @@ test-flowing-inset {
 	right: auto;
 	bottom: auto;
 	left: auto;
-	top: auto;
-	right: auto;
-	bottom: auto;
-	left: auto;
-	top: auto;
-	right: auto;
-	bottom: auto;
-	left: auto;
-	top: auto;
-	right: auto;
-	bottom: auto;
-	left: auto;
-	top: auto;
-	right: auto;
-	bottom: auto;
-	left: auto;
 }
diff --git a/test/inset.ltr.expect.css b/test/inset.ltr.expect.css
index 352f602..87fd4e2 100644
--- a/test/inset.ltr.expect.css
+++ b/test/inset.ltr.expect.css
@@ -1,4 +1,8 @@
 test-inset {
+	top: 0;
+	right: 0;
+	bottom: 0;
+	left: 0;
 	top: 1px;
 	left: 1px;
 	bottom: 1px;
@@ -46,28 +50,4 @@ test-flowing-inset {
 	right: auto;
 	bottom: auto;
 	left: auto;
-	top: 9px;
-	left: 9px;
-	top: auto;
-	right: auto;
-	bottom: auto;
-	left: auto;
-	top: 10px;
-	left: 11px;
-	top: auto;
-	right: auto;
-	bottom: auto;
-	left: auto;
-	bottom: 12px;
-	right: 12px;
-	top: auto;
-	right: auto;
-	bottom: auto;
-	left: auto;
-	bottom: 13px;
-	right: 14px;
-	top: auto;
-	right: auto;
-	bottom: auto;
-	left: auto;
 }
diff --git a/test/margin.css b/test/margin.css
index 15c1739..4de66e7 100644
--- a/test/margin.css
+++ b/test/margin.css
@@ -21,12 +21,4 @@ test-flowing-margin {
 	margin: auto;
 	margin-inline-end: 8px;
 	margin: auto;
-	margin-start: 9px;
-	margin: auto;
-	margin-start: 10px 11px;
-	margin: auto;
-	margin-end: 12px;
-	margin: auto;
-	margin-end: 13px 14px;
-	margin: auto;
 }
diff --git a/test/margin.expect.css b/test/margin.expect.css
index c4f57d6..12fcfe2 100644
--- a/test/margin.expect.css
+++ b/test/margin.expect.css
@@ -2,7 +2,7 @@ test-margin {
 	margin: 1px;
 	margin: 2px 3px;
 	margin: 4px 5px 6px;
-	margin: 7px 8px 9px 8px;
+	margin: 7px 8px 9px;
 	margin-left: 10px;
 	margin-right: 10px;
 	margin-left: 11px;
@@ -49,54 +49,10 @@ test-flowing-margin:dir(rtl) {
 	margin-left: 8px;
 }
 
-test-flowing-margin:dir(ltr) {
-	margin-top: 9px;
-	margin-left: 9px;
-}
-
-test-flowing-margin:dir(rtl) {
-	margin-top: 9px;
-	margin-right: 9px;
-}
-
-test-flowing-margin:dir(ltr) {
-	margin-top: 10px;
-	margin-left: 11px;
-}
-
-test-flowing-margin:dir(rtl) {
-	margin-top: 10px;
-	margin-right: 11px;
-}
-
-test-flowing-margin:dir(ltr) {
-	margin-bottom: 12px;
-	margin-right: 12px;
-}
-
-test-flowing-margin:dir(rtl) {
-	margin-bottom: 12px;
-	margin-left: 12px;
-}
-
-test-flowing-margin:dir(ltr) {
-	margin-bottom: 13px;
-	margin-right: 14px;
-}
-
-test-flowing-margin:dir(rtl) {
-	margin-bottom: 13px;
-	margin-left: 14px;
-}
-
 test-flowing-margin {
 	margin: auto;
 	margin: auto;
 	margin: auto;
 	margin: auto;
 	margin: auto;
-	margin: auto;
-	margin: auto;
-	margin: auto;
-	margin: auto;
 }
diff --git a/test/margin.ltr.expect.css b/test/margin.ltr.expect.css
index 9d7d5b1..9f17d0e 100644
--- a/test/margin.ltr.expect.css
+++ b/test/margin.ltr.expect.css
@@ -2,7 +2,7 @@ test-margin {
 	margin: 1px;
 	margin: 2px 3px;
 	margin: 4px 5px 6px;
-	margin: 7px 8px 9px 8px;
+	margin: 7px 8px 9px;
 	margin-left: 10px;
 	margin-right: 10px;
 	margin-left: 11px;
@@ -26,16 +26,4 @@ test-flowing-margin {
 	margin: auto;
 	margin-right: 8px;
 	margin: auto;
-	margin-top: 9px;
-	margin-left: 9px;
-	margin: auto;
-	margin-top: 10px;
-	margin-left: 11px;
-	margin: auto;
-	margin-bottom: 12px;
-	margin-right: 12px;
-	margin: auto;
-	margin-bottom: 13px;
-	margin-right: 14px;
-	margin: auto;
 }
diff --git a/test/padding.expect.css b/test/padding.expect.css
index 61d1667..cc0adf3 100644
--- a/test/padding.expect.css
+++ b/test/padding.expect.css
@@ -2,7 +2,7 @@ test-padding {
 	padding: 1px;
 	padding: 2px 3px;
 	padding: 4px 5px 6px;
-	padding: 7px 8px 9px 8px;
+	padding: 7px 8px 9px;
 	padding-left: 10px;
 	padding-right: 10px;
 	padding-left: 11px;
@@ -49,54 +49,18 @@ test-flowing-padding:dir(rtl) {
 	padding-left: 8px;
 }
 
-test-flowing-padding:dir(ltr) {
-	padding-top: 9px;
-	padding-left: 9px;
-}
-
-test-flowing-padding:dir(rtl) {
-	padding-top: 9px;
-	padding-right: 9px;
-}
-
-test-flowing-padding:dir(ltr) {
-	padding-top: 10px;
-	padding-left: 11px;
-}
-
-test-flowing-padding:dir(rtl) {
-	padding-top: 10px;
-	padding-right: 11px;
-}
-
-test-flowing-padding:dir(ltr) {
-	padding-bottom: 12px;
-	padding-right: 12px;
-}
-
-test-flowing-padding:dir(rtl) {
-	padding-bottom: 12px;
-	padding-left: 12px;
-}
-
-test-flowing-padding:dir(ltr) {
-	padding-bottom: 13px;
-	padding-right: 14px;
-}
-
-test-flowing-padding:dir(rtl) {
-	padding-bottom: 13px;
-	padding-left: 14px;
-}
-
 test-flowing-padding {
 	padding: auto;
 	padding: auto;
 	padding: auto;
 	padding: auto;
 	padding: auto;
+	padding-start: 9px;
 	padding: auto;
+	padding-start: 10px 11px;
 	padding: auto;
+	padding-end: 12px;
 	padding: auto;
+	padding-end: 13px 14px;
 	padding: auto;
 }
diff --git a/test/padding.ltr.expect.css b/test/padding.ltr.expect.css
index 1ccece6..ebb445d 100644
--- a/test/padding.ltr.expect.css
+++ b/test/padding.ltr.expect.css
@@ -2,7 +2,7 @@ test-padding {
 	padding: 1px;
 	padding: 2px 3px;
 	padding: 4px 5px 6px;
-	padding: 7px 8px 9px 8px;
+	padding: 7px 8px 9px;
 	padding-left: 10px;
 	padding-right: 10px;
 	padding-left: 11px;
@@ -26,16 +26,12 @@ test-flowing-padding {
 	padding: auto;
 	padding-right: 8px;
 	padding: auto;
-	padding-top: 9px;
-	padding-left: 9px;
+	padding-start: 9px;
 	padding: auto;
-	padding-top: 10px;
-	padding-left: 11px;
+	padding-start: 10px 11px;
 	padding: auto;
-	padding-bottom: 12px;
-	padding-right: 12px;
+	padding-end: 12px;
 	padding: auto;
-	padding-bottom: 13px;
-	padding-right: 14px;
+	padding-end: 13px 14px;
 	padding: auto;
 }
diff --git a/test/size.expect.css b/test/size.expect.css
index ed73402..66b9274 100644
--- a/test/size.expect.css
+++ b/test/size.expect.css
@@ -1,4 +1,4 @@
 test-size {
-	height: auto;
 	width: auto;
+	height: auto;
 }
diff --git a/test/transition.css b/test/transition.css
index 9a91e6f..4f5c408 100644
--- a/test/transition.css
+++ b/test/transition.css
@@ -16,24 +16,12 @@
 	transition-property: border-inline, border-inline-color, border-inline-style, border-inline-width;
 }
 
-.transition-start {
-	transition: 1s inset-start ease;
-	transition: 1s margin-start ease;
-	transition: 1s padding-start ease;
-}
-
 .transition-block-start {
 	transition: 1s inset-block-start ease;
 	transition: 1s margin-block-start ease;
 	transition: 1s padding-block-start ease;
 }
 
-.transition-end {
-	transition: 1s inset-end ease;
-	transition: 1s margin-end ease;
-	transition: 1s padding-end ease;
-}
-
 .transition-inline-end {
 	transition: 1s inset-inline-end ease;
 	transition: 1s margin-inline-end ease;
diff --git a/test/transition.expect.css b/test/transition.expect.css
index 7bb68a4..749ca5d 100644
--- a/test/transition.expect.css
+++ b/test/transition.expect.css
@@ -16,60 +16,12 @@
 	transition-property: border-inline, border-inline-color, border-inline-style, border-inline-width;
 }
 
-.transition-start:dir(ltr) {
-	transition: 1s top ease,1s left ease;
-}
-
-.transition-start:dir(rtl) {
-	transition: 1s top ease,1s right ease;
-}
-
-.transition-start:dir(ltr) {
-	transition: 1s margin-top ease,1s margin-left ease;
-}
-
-.transition-start:dir(rtl) {
-	transition: 1s margin-top ease,1s margin-right ease;
-}
-
-.transition-start:dir(ltr) {
-	transition: 1s padding-top ease,1s padding-left ease;
-}
-
-.transition-start:dir(rtl) {
-	transition: 1s padding-top ease,1s padding-right ease;
-}
-
 .transition-block-start {
 	transition: 1s inset-block-start ease;
 	transition: 1s margin-block-start ease;
 	transition: 1s padding-block-start ease;
 }
 
-.transition-end:dir(ltr) {
-	transition: 1s bottom ease,1s right ease;
-}
-
-.transition-end:dir(rtl) {
-	transition: 1s bottom ease,1s left ease;
-}
-
-.transition-end:dir(ltr) {
-	transition: 1s margin-bottom ease,1s margin-right ease;
-}
-
-.transition-end:dir(rtl) {
-	transition: 1s margin-bottom ease,1s margin-left ease;
-}
-
-.transition-end:dir(ltr) {
-	transition: 1s padding-bottom ease,1s padding-right ease;
-}
-
-.transition-end:dir(rtl) {
-	transition: 1s padding-bottom ease,1s padding-left ease;
-}
-
 .transition-inline-end:dir(ltr) {
 	transition: 1s right ease;
 }
diff --git a/test/transition.ltr.expect.css b/test/transition.ltr.expect.css
index 469b058..a204700 100644
--- a/test/transition.ltr.expect.css
+++ b/test/transition.ltr.expect.css
@@ -16,24 +16,12 @@
 	transition-property: border-left,border-right, border-left-color, border-right-color, border-left-style, border-right-style, border-left-width, border-right-width;
 }
 
-.transition-start {
-	transition: 1s top ease,1s left ease;
-	transition: 1s margin-top ease,1s margin-left ease;
-	transition: 1s padding-top ease,1s padding-left ease;
-}
-
 .transition-block-start {
 	transition: 1s top ease;
 	transition: 1s margin-top ease;
 	transition: 1s padding-top ease;
 }
 
-.transition-end {
-	transition: 1s bottom ease,1s right ease;
-	transition: 1s margin-bottom ease,1s margin-right ease;
-	transition: 1s padding-bottom ease,1s padding-right ease;
-}
-
 .transition-inline-end {
 	transition: 1s right ease;
 	transition: 1s margin-right ease;
-- 
2.33.1

