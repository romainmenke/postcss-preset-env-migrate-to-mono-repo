From a76e3f87f9156ee0dddd7acc1946a4edc36fa79a Mon Sep 17 00:00:00 2001
From: Jonathan Neal <jonathantneal@hotmail.com>
Date: Fri, 2 Jun 2017 12:46:41 -0400
Subject: [PATCH 02/34] Update Plugin: Organize and document source

---
 index.js | 22 ++++++++++++++++------
 1 file changed, 16 insertions(+), 6 deletions(-)

diff --git a/index.js b/index.js
index 9de45ab..d745d51 100644
--- a/index.js
+++ b/index.js
@@ -1,22 +1,27 @@
 // tooling
-const postcss = require('postcss');
+const postcss        = require('postcss');
 const selectorParser = require('postcss-selector-parser');
 
 // plugin
-module.exports = postcss.plugin('postcss-dir-pseudo-class', () => (root) => {
+module.exports = postcss.plugin('postcss-dir-pseudo-class', (opts) => (root) => {
+	// walk rules using the :dir pseudo-class
 	root.walkRules(/:dir\([^\)]*\)/, (rule) => {
+		// update the rule selector
 		rule.selector = selectorParser((selectors) => {
+			// for each (comma separated) selector
 			selectors.nodes.forEach(
 				(selector) => {
+					// walk all selector nodes that are :dir pseudo-classes
 					selector.walk((node) => {
-						// ...
 						if ('pseudo' === node.type && ':dir' === node.value) {
+							// previous and next selector nodes
 							const prev = node.prev();
-							const prevIsSpaceCombinator = prev && prev.type && 'combinator' === prev.type && ' ' === prev.value;
-
 							const next = node.next();
+
+							const prevIsSpaceCombinator = prev && prev.type && 'combinator' === prev.type && ' ' === prev.value;
 							const nextIsSpaceCombinator = next && next.type && 'combinator' === next.type && ' ' === next.value;
 
+							// preserve the selector tree
 							if (prevIsSpaceCombinator && (nextIsSpaceCombinator || !next)) {
 								node.replaceWith(
 									selectorParser.universal()
@@ -25,6 +30,7 @@ module.exports = postcss.plugin('postcss-dir-pseudo-class', () => (root) => {
 								node.remove();
 							}
 
+							// conditionally prepend a combinator before inserting the [dir] attribute
 							const first = selector.nodes[0];
 							const firstIsSpaceCombinator = first && 'combinator' === first.type && ' ' === first.value;
 
@@ -36,11 +42,15 @@ module.exports = postcss.plugin('postcss-dir-pseudo-class', () => (root) => {
 								);
 							}
 
+							// value of the :dir pseudo-class
+							const value = node.nodes.toString();
+
+							// prepend the dir attribute
 							selector.prepend(
 								selectorParser.attribute({
 									attribute: 'dir',
 									operator: '=',
-									value: `"${ node.nodes.toString() }"`
+									value: `"${ value }"`
 								})
 							);
 						}
-- 
2.33.1

