From ca9d4ff2daf34dc0a83f0cb29de087027235e27b Mon Sep 17 00:00:00 2001
From: Dmitry Semigradsky <semigradskyd@gmail.com>
Date: Thu, 12 Mar 2020 03:34:47 +0300
Subject: [PATCH 080/103] Plugins enabled via `features` should override
 browserslist (csstools/postcss-preset-env#165)

---
 .tape.js                                  | 9 +++++++++
 src/postcss.js                            | 4 +++-
 test/custom-properties.enabled.expect.css | 8 ++++++++
 3 files changed, 20 insertions(+), 1 deletion(-)
 create mode 100644 test/custom-properties.enabled.expect.css

diff --git a/.tape.js b/.tape.js
index 4c3d459..fa748df 100644
--- a/.tape.js
+++ b/.tape.js
@@ -65,6 +65,15 @@ module.exports = {
 			}
 		}
 	},
+	'custom-properties:enabled': {
+		message: 'supports { browsers: "chrome >= 60", features: { "custom-properties": true } } usage',
+		options: {
+			browsers: 'chrome >= 60',
+			features: {
+				'custom-properties': true
+			}
+		}
+	},
 	'insert:before': {
 		message: 'supports { stage: 1, features: { "color-mod-function": true }, insertBefore: { "color-mod-function": [ require("postcss-simple-vars") ] } } usage',
 		options: {
diff --git a/src/postcss.js b/src/postcss.js
index 322cd8c..4ac5888 100644
--- a/src/postcss.js
+++ b/src/postcss.js
@@ -88,7 +88,9 @@ export default postcss.plugin('postcss-preset-env', opts => {
 
 	// features supported by the stage and browsers
 	const supportedFeatures = stagedFeatures.filter(
-		feature => supportedBrowsers.some(
+		feature => feature.id in features
+			? features[feature.id]
+		: supportedBrowsers.some(
 			supportedBrowser => browserslist(feature.browsers, {
 				ignoreUnknownVersions: true
 			}).some(
diff --git a/test/custom-properties.enabled.expect.css b/test/custom-properties.enabled.expect.css
new file mode 100644
index 0000000..e91ce5b
--- /dev/null
+++ b/test/custom-properties.enabled.expect.css
@@ -0,0 +1,8 @@
+:root {
+	--black: black;
+}
+
+test-css-variables {
+	color: black;
+	color: var(--black);
+}
-- 
2.33.1

