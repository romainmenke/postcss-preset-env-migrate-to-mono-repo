From 00ac4a9a7b3a7be0b2b779552e9692b5deb72e93 Mon Sep 17 00:00:00 2001
From: Jonathan Neal <jonathantneal@hotmail.com>
Date: Sat, 7 Apr 2018 23:39:04 -0400
Subject: [PATCH 26/84] 4.0.0

---
 .tape.js                                      |  34 +--
 CHANGELOG.md                                  |   8 +
 CONTRIBUTING.md                               |   2 +-
 README.md                                     |   8 +-
 index.js                                      |  34 +--
 lib/get-transformed-insertions.js             |   4 +-
 lib/ids-by-execution-order.js                 |  25 +++
 ...y-specification-id.js => plugins-by-id.js} |  60 ++---
 lib/specification-ids-by-execution-order.js   |  23 --
 package.json                                  |   9 +-
 test/basic.ch38.expect.css                    | 119 ++++++++--
 test/basic.css                                | 108 +++++++--
 test/basic.expect.css                         | 211 ++++++++++++++++--
 test/basic.ff49.expect.css                    | 119 ++++++++--
 test/basic.nesting.expect.css                 | 104 ++++++++-
 test/basic.stage1-ff49.expect.css             | 107 ++++++++-
 test/basic.stage1.expect.css                  | 201 ++++++++++++++++-
 ...ss-variables.css => custom-properties.css} |   0
 ... => custom-properties.disabled.expect.css} |   0
 ...xpect.css => custom-properties.expect.css} |   0
 20 files changed, 998 insertions(+), 178 deletions(-)
 create mode 100644 lib/ids-by-execution-order.js
 rename lib/{plugins-by-specification-id.js => plugins-by-id.js} (55%)
 delete mode 100644 lib/specification-ids-by-execution-order.js
 rename test/{css-variables.css => custom-properties.css} (100%)
 rename test/{css-variables.disabled.expect.css => custom-properties.disabled.expect.css} (100%)
 rename test/{css-variables.expect.css => custom-properties.expect.css} (100%)

diff --git a/.tape.js b/.tape.js
index 49cc26d..2983dde 100644
--- a/.tape.js
+++ b/.tape.js
@@ -29,49 +29,49 @@ module.exports = {
 			}
 		},
 		'basic:nesting': {
-			message: 'supports { stage: false, features: { "css-nesting": true } } usage',
+			message: 'supports { stage: false, features: { "nesting-rules": true } } usage',
 			options: {
 				stage: false,
 				features: {
-					'css-nesting': true
+					'nesting-rules': true
 				}
 			}
 		},
-		'css-variables': {
+		'custom-properties': {
 			message: 'supports { browsers: "ie >= 10" } usage',
 			options: {
 				browsers: 'ie >= 10'
 			}
 		},
-		'css-variables:disabled': {
-			message: 'supports { browsers: "ie >= 10", features: { "css-variables": false } } usage',
+		'custom-properties:disabled': {
+			message: 'supports { browsers: "ie >= 10", features: { "custom-properties": false } } usage',
 			options: {
 				browsers: 'ie >= 10',
 				features: {
-					'css-variables': false
+					'custom-properties': false
 				}
 			}
 		},
 		'insert:before': {
-			message: 'supports { stage: 2, before: { "css-color-modifying-colors": [ require("postcss-simple-vars") ] } } usage',
+			message: 'supports { stage: 2, before: { "color-mod-function": [ require("postcss-simple-vars") ] } } usage',
 			options: {
 				stage: 2,
 				insertBefore: {
-					'css-color-modifying-colors': [
+					'color-mod-function': [
 						require('postcss-simple-vars')
 					]
 				}
 			}
 		},
 		'insert:after': {
-			message: 'supports { stage: 2, after: { "css-color-modifying-colors": [ require("postcss-simple-vars")() ] } } usage',
+			message: 'supports { stage: 2, after: { "color-mod-function": [ require("postcss-simple-vars")() ] } } usage',
 			options: {
 				stage: 2,
 				insertAfter: {
-					'css-color-modifying-colors': require('postcss-simple-vars')
+					'color-mod-function': require('postcss-simple-vars')
 				},
 				features: {
-					'css-color-modifying-colors': {
+					'color-mod-function': {
 						unresolved: 'warn'
 					}
 				}
@@ -79,14 +79,14 @@ module.exports = {
 			warning: 2
 		},
 		'insert:after:exec': {
-			message: 'supports { stage: 2, after: { "css-color-modifying-colors": require("postcss-simple-vars")() } } usage',
+			message: 'supports { stage: 2, after: { "color-mod-function": require("postcss-simple-vars")() } } usage',
 			options: {
 				stage: 2,
 				insertAfter: {
-					'css-color-modifying-colors': require('postcss-simple-vars')()
+					'color-mod-function': require('postcss-simple-vars')()
 				},
 				features: {
-					'css-color-modifying-colors': {
+					'color-mod-function': {
 						unresolved: 'ignore'
 					}
 				}
@@ -94,16 +94,16 @@ module.exports = {
 			expect: 'insert.after.expect.css'
 		},
 		'insert:after:array': {
-			message: 'supports { stage: 2, after: { "css-color-modifying-colors": [ require("postcss-simple-vars") ] } } usage',
+			message: 'supports { stage: 2, after: { "color-mod-function": [ require("postcss-simple-vars") ] } } usage',
 			options: {
 				stage: 2,
 				insertAfter: {
-					'css-color-modifying-colors': [
+					'color-mod-function': [
 						require('postcss-simple-vars')
 					]
 				},
 				features: {
-					'css-color-modifying-colors': {
+					'color-mod-function': {
 						unresolved: 'ignore'
 					}
 				}
diff --git a/CHANGELOG.md b/CHANGELOG.md
index 4b12ac7..7efc92d 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,5 +1,13 @@
 # Changes to PostCSS Preset Env
 
+### 4.0.0 (April 7, 2018)
+
+- Added: `postcss-focus-within`
+- Updated: `postcss-focus-visible` to v3.0.0 (major update)
+- Updated: `caniuse-lite` to v1.0.30000824 (patch update)
+- Updated: `cssdb` to v2.0.0 (major update)
+- Changed: All `specificationId` names to new `id` names for the `cssdb` update.
+
 ### 3.5.0 (April 5, 2018)
 
 - Fixed: `selectors-matches-pseudo` mapping to allow `:matches` polyfilling
diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
index 20a9137..0f18cad 100644
--- a/CONTRIBUTING.md
+++ b/CONTRIBUTING.md
@@ -66,7 +66,7 @@ If you want to add a new plugin, follow the
 - Ensure the feature exists in [cssdb](https://github.com/jonathantneal/css-db).
 - Add the plugin to the `dependencies` list in [`package.json`](package.json).
 - Add the plugin to
-  [`lib/plugins-by-specification-id.js`](lib/plugins-by-specification-id.js).
+  [`lib/plugins-by-id.js`](lib/plugins-by-id.js).
 
 [already been reported]: issues
 [fork this project]:     fork
diff --git a/README.md b/README.md
index 625f776..373fe71 100644
--- a/README.md
+++ b/README.md
@@ -186,10 +186,10 @@ require('postcss-preset-env')({
 ### features
 
 The `features` key determines which CSS features to polyfill based upon their
-unique specification id found at [cssdb]. Pass `true` to enable a feature, and
-pass `false` to disable a feature. Pass an object `{}` to configure options of
-an individual polyfill. Any features not explicitly toggled here will be
-determined by [stage](#stage).
+unique id found at [cssdb]. Pass `true` to enable a feature, and pass `false`
+to disable a feature. Pass an object `{}` to configure options of an individual
+polyfill. Any features not explicitly toggled here will be determined by
+[stage](#stage).
 
 ```js
 require('postcss-preset-env')({
diff --git a/index.js b/index.js
index 294e7a8..140bd7f 100644
--- a/index.js
+++ b/index.js
@@ -2,10 +2,10 @@
 import browserslist from 'browserslist';
 import cssdb from 'cssdb';
 import postcss from 'postcss';
-import plugins from './lib/plugins-by-specification-id';
+import plugins from './lib/plugins-by-id';
 import getTransformedInsertions from './lib/get-transformed-insertions';
 import getUnsupportedBrowsersByFeature from './lib/get-unsupported-browsers-by-feature';
-import specificationIdsByExecutionOrder from './lib/specification-ids-by-execution-order';
+import idsByExecutionOrder from './lib/ids-by-execution-order';
 
 // plugin
 export default postcss.plugin('postcss-preset-env', opts => {
@@ -28,10 +28,10 @@ export default postcss.plugin('postcss-preset-env', opts => {
 		getTransformedInsertions(insertAfter, 'insertAfter')
 	).filter(
 		// inserted features or features with an available postcss plugin
-		feature => feature.insertBefore || feature.specificationId in plugins
+		feature => feature.insertBefore || feature.id in plugins
 	).sort(
 		// features sorted by execution order and then insertion order
-		(a, b) => specificationIdsByExecutionOrder.indexOf(a.specificationId) - specificationIdsByExecutionOrder.indexOf(b.specificationId) || (a.insertBefore ? -1 : b.insertBefore ? 1 : 0) || (a.insertAfter ? 1 : b.insertAfter ? -1 : 0)
+		(a, b) => idsByExecutionOrder.indexOf(a.id) - idsByExecutionOrder.indexOf(b.id) || (a.insertBefore ? -1 : b.insertBefore ? 1 : 0) || (a.insertAfter ? 1 : b.insertAfter ? -1 : 0)
 	).map(
 		// polyfillable features as an object
 		feature => {
@@ -39,33 +39,33 @@ export default postcss.plugin('postcss-preset-env', opts => {
 			const unsupportedBrowsers = getUnsupportedBrowsersByFeature(feature.caniuse);
 
 			return feature.insertBefore || feature.insertAfter ? {
-				browsers:        unsupportedBrowsers,
-				plugin:          feature.plugin,
-				specificationId: `${feature.insertBefore ? 'before' : 'after'}-${feature.specificationId}`,
-				stage:           6
+				browsers: unsupportedBrowsers,
+				plugin:   feature.plugin,
+				id:       `${feature.insertBefore ? 'before' : 'after'}-${feature.id}`,
+				stage:    6
 			} : {
-				browsers:        unsupportedBrowsers,
-				plugin:          plugins[feature.specificationId],
-				specificationId: feature.specificationId,
-				stage:           feature.stage
+				browsers: unsupportedBrowsers,
+				plugin:   plugins[feature.id],
+				id:       feature.id,
+				stage:    feature.stage
 			};
 		}
 	);
 
 	// staged features (those at or above the selected stage)
 	const stagedFeatures = polyfillableFeatures.filter(
-		feature => feature.specificationId in features
-			? features[feature.specificationId]
+		feature => feature.id in features
+			? features[feature.id]
 		: feature.stage >= stage
 	).map(
 		feature => ({
 			browsers: feature.browsers,
 			plugin: typeof feature.plugin.process === 'function'
-				? features[feature.specificationId] === true
+				? features[feature.id] === true
 					? feature.plugin()
-				: feature.plugin(features[feature.specificationId])
+				: feature.plugin(features[feature.id])
 			: feature.plugin,
-			specificationId: feature.specificationId
+			id: feature.id
 		})
 	);
 
diff --git a/lib/get-transformed-insertions.js b/lib/get-transformed-insertions.js
index 26615dc..6fc643c 100644
--- a/lib/get-transformed-insertions.js
+++ b/lib/get-transformed-insertions.js
@@ -1,11 +1,11 @@
 // return a list of features to be inserted before or after cssdb features
 export default function getTransformedInsertions(insertions, placement) {
 	return Object.keys(insertions).map(
-		specificationId => [].concat(insertions[specificationId]).map(
+		id => [].concat(insertions[id]).map(
 			plugin => ({
 				[placement]: true,
 				plugin,
-				specificationId
+				id
 			})
 		)
 	).reduce(
diff --git a/lib/ids-by-execution-order.js b/lib/ids-by-execution-order.js
new file mode 100644
index 0000000..b60209d
--- /dev/null
+++ b/lib/ids-by-execution-order.js
@@ -0,0 +1,25 @@
+// ids ordered by execution
+export default [
+	'custom-properties',
+	'custom-property-sets',
+	'image-set-function',
+	'logical-properties-and-values',
+	'nesting-rules',
+	'custom-media-queries',
+	'media-query-ranges',
+	'custom-selectors',
+	'case-insensitive-attributes',
+	'rebeccapurple-color',
+	'hexadecimal-alpha-notation',
+	'color-mod-function',
+	'system-ui-font-family',
+	'font-variant-property',
+	'all-property',
+	'matches-pseudo-class',
+	'not-pseudo-class',
+	'any-link-pseudo-class',
+	'dir-pseudo-class',
+	'overflow-wrap-property',
+	'focus-visible-pseudo-class',
+	'focus-within-pseudo-class'
+];
diff --git a/lib/plugins-by-specification-id.js b/lib/plugins-by-id.js
similarity index 55%
rename from lib/plugins-by-specification-id.js
rename to lib/plugins-by-id.js
index d493943..a4a28c2 100644
--- a/lib/plugins-by-specification-id.js
+++ b/lib/plugins-by-id.js
@@ -1,49 +1,51 @@
 // tooling
 import postcssApply from 'postcss-apply';
-import postcssInitial from 'postcss-initial';
+import postcssAttributeCaseInsensitive from 'postcss-attribute-case-insensitive';
 import postcssColorHexAlpha from 'postcss-color-hex-alpha';
 import postcssColorModFunction from 'postcss-color-mod-function';
 import postcssColorRebeccapurple from 'postcss-color-rebeccapurple';
+import postcssCustomMedia from 'postcss-custom-media';
+import postcssCustomProperties from 'postcss-custom-properties';
 import postcssCustomSelectors from 'postcss-custom-selectors';
+import postcssDirPseudoClass from 'postcss-dir-pseudo-class';
 import postcssFocusVisible from 'postcss-focus-visible';
+import postcssFocusWithin from 'postcss-focus-within';
 import postcssFontVariant from 'postcss-font-variant';
 import postcssFontFamilySystemUi from 'postcss-font-family-system-ui';
 import postcssImageSetPolyfill from '@csstools/postcss-image-set-function';
+import postcssInitial from 'postcss-initial';
 import postcssLogical from 'postcss-logical';
-import postcssNesting from 'postcss-nesting';
-import postcssReplaceOverflowWrap from 'postcss-replace-overflow-wrap';
-import postcssCustomProperties from 'postcss-custom-properties';
-import postcssCustomMedia from 'postcss-custom-media';
 import postcssMediaMinmax from 'postcss-media-minmax';
+import postcssNesting from 'postcss-nesting';
 import postcssPageBreak from 'postcss-page-break';
 import postcssPseudoClassAnyLink from 'postcss-pseudo-class-any-link';
-import postcssAttributeCaseInsensitive from 'postcss-attribute-case-insensitive';
+import postcssReplaceOverflowWrap from 'postcss-replace-overflow-wrap';
 import postcssSelectorMatches from 'postcss-selector-matches';
 import postcssSelectorNot from 'postcss-selector-not';
-import postcssDirPseudoClass from 'postcss-dir-pseudo-class';
 
-// postcss plugins ordered by specification id
+// postcss plugins ordered by id
 export default {
+	'all-property': postcssInitial,
+	'any-link-pseudo-class': postcssPseudoClassAnyLink,
 	'break-properties': postcssPageBreak,
-	'css-apply-rule': postcssApply,
-	'css-cascade-all-shorthand': postcssInitial,
-	'css-color-hex-notation': postcssColorHexAlpha,
-	'css-color-modifying-colors': postcssColorModFunction,
-	'css-color-valdef-color-rebeccapurple': postcssColorRebeccapurple,
-	'css-extensions-custom-selectors': postcssCustomSelectors,
-	'css-fonts-propdef-font-variant': postcssFontVariant,
-	'css-fonts-system-ui-def': postcssFontFamilySystemUi,
-	'css-images-image-set-notation': postcssImageSetPolyfill,
-	'css-logical': postcssLogical,
-	'css-nesting': postcssNesting,
-	'css-text-overflow-wrap-property': postcssReplaceOverflowWrap,
-	'css-variables': postcssCustomProperties,
-	'mediaqueries-custom-mq': postcssCustomMedia,
-	'mediaqueries-mq-ranges': postcssMediaMinmax,
-	'selectors-any-link-pseudo': postcssPseudoClassAnyLink,
-	'selectors-attribute-case': postcssAttributeCaseInsensitive,
-	'selectors-dir-pseudo': postcssDirPseudoClass,
-	'selectors-focus-visible-pseudo': postcssFocusVisible,
-	'selectors-matches-pseudo': postcssSelectorMatches,
-	'selectors-negation': postcssSelectorNot
+	'case-insensitive-attributes': postcssAttributeCaseInsensitive,
+	'color-mod-function': postcssColorModFunction,
+	'custom-media-queries': postcssCustomMedia,
+	'custom-properties': postcssCustomProperties,
+	'custom-property-sets': postcssApply,
+	'custom-selectors': postcssCustomSelectors,
+	'dir-pseudo-class': postcssDirPseudoClass,
+	'font-variant-property': postcssFontVariant,
+	'hexadecimal-alpha-notation': postcssColorHexAlpha,
+	'image-set-function': postcssImageSetPolyfill,
+	'logical-properties-and-values': postcssLogical,
+	'matches-pseudo-class': postcssSelectorMatches,
+	'media-query-ranges': postcssMediaMinmax,
+	'nesting-rules': postcssNesting,
+	'not-pseudo-class': postcssSelectorNot,
+	'overflow-wrap-property': postcssReplaceOverflowWrap,
+	'rebeccapurple-color': postcssColorRebeccapurple,
+	'focus-visible-pseudo-class': postcssFocusVisible,
+	'focus-within-pseudo-class': postcssFocusWithin,
+	'system-ui-font-family': postcssFontFamilySystemUi
 };
diff --git a/lib/specification-ids-by-execution-order.js b/lib/specification-ids-by-execution-order.js
deleted file mode 100644
index 0170aa3..0000000
--- a/lib/specification-ids-by-execution-order.js
+++ /dev/null
@@ -1,23 +0,0 @@
-// specification ids ordered by execution
-export default [
-	'css-variables',
-	'postcss-apply',
-	'css-images-image-set-notation',
-	'css-logical',
-	'css-nesting',
-	'mediaqueries-5-custom-mq',
-	'mediaqueries-mq-ranges',
-	'css-extensions-custom-selectors',
-	'selectors-attribute-case',
-	'css-color-valdef-color-rebeccapurple',
-	'css-color-hex-notation',
-	'css-color-modifying-colors',
-	'css-fonts-system-ui-def',
-	'css-fonts-propdef-font-variant',
-	'css-cascade-all-shorthand',
-	'selectors-matches',
-	'selectors-negation',
-	'selectors-any-link-pseudo',
-	'selectors-dir-pseudo',
-	'css-text-overflow-wrap-property'
-];
diff --git a/package.json b/package.json
index 7de8b4e..8508cdc 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "postcss-preset-env",
-  "version": "3.5.0",
+  "version": "4.0.0",
   "description": "Convert modern CSS into something browsers understand",
   "author": "Jonathan Neal <jonathantneal@hotmail.com>",
   "license": "CC0-1.0",
@@ -28,8 +28,8 @@
   "dependencies": {
     "@csstools/postcss-image-set-function": "^1.0.0",
     "browserslist": "^3.2.4",
-    "caniuse-lite": "^1.0.30000823",
-    "cssdb": "^1.6.0",
+    "caniuse-lite": "^1.0.30000824",
+    "cssdb": "^2.0.0",
     "postcss": "^6.0.21",
     "postcss-apply": "^0.9.0",
     "postcss-attribute-case-insensitive": "^2.0.0",
@@ -41,7 +41,8 @@
     "postcss-custom-properties": "^7.0.0",
     "postcss-custom-selectors": "^4.0.1",
     "postcss-dir-pseudo-class": "^3.0.0",
-    "postcss-focus-visible": "^2.0.0",
+    "postcss-focus-visible": "^3.0.0",
+    "postcss-focus-within": "^2.0.0",
     "postcss-font-family-system-ui": "^3.0.0",
     "postcss-font-variant": "^3.0.0",
     "postcss-initial": "^2.0.0",
diff --git a/test/basic.ch38.expect.css b/test/basic.ch38.expect.css
index 96371c1..89ea112 100644
--- a/test/basic.ch38.expect.css
+++ b/test/basic.ch38.expect.css
@@ -1,27 +1,120 @@
-[dir="ltr"] test-selectors-dir-pseudo {
+:root {
+	--order: 1;
+}
+
+.test-custom-properties {
 	order: 1;
+	order: var(--order);
 }
 
-test-css-nesting {
-	& {
-		order: 2;
-	}
+.test-image-set-function {
+	background-image: image-set(url(img/test.png) 1x, url(img/test-2x.png) 2x);
+	order: 2;
 }
 
-test-css-color-valdef-color-rebeccapurple {
-	color: rebeccapurple;
+.test-logical-properties-and-values {
+	[dir="ltr"] & {
+	margin: 1px 4px 3px 2px;
+	}
+	[dir="rtl"] & {
+	margin: 1px 2px 3px 4px;
+	}
 	order: 3;
+	padding-top: 5px;
+	padding-bottom: 5px;
 }
 
-test.focus-visible {
+.test-nesting-rules {
 	order: 4;
+
+	& p {
+		order: 5;
+	}
+
+	order: 6;
+}
+
+@custom-media --narrow-window (max-width: 30em);
+
+@media (--narrow-window) {
+	.test-custom-media-queries {
+		order: 7;
+	}
+}
+
+@media (min-width: 480px) and (max-width: 767px) {
+	.test-media-query-ranges {
+		order: 8;
+	}
+}
+
+@custom-selector :--heading h1, h2, h3, h4, h5, h6
+
+.test-custom-selectors:--heading {
+	order: 9;
+}
+
+.test-case-insensitive-attributes[frame=hsides],.test-case-insensitive-attributes[frame=Hsides],.test-case-insensitive-attributes[frame=hSides],.test-case-insensitive-attributes[frame=HSides],.test-case-insensitive-attributes[frame=hsIdes],.test-case-insensitive-attributes[frame=HsIdes],.test-case-insensitive-attributes[frame=hSIdes],.test-case-insensitive-attributes[frame=HSIdes],.test-case-insensitive-attributes[frame=hsiDes],.test-case-insensitive-attributes[frame=HsiDes],.test-case-insensitive-attributes[frame=hSiDes],.test-case-insensitive-attributes[frame=HSiDes],.test-case-insensitive-attributes[frame=hsIDes],.test-case-insensitive-attributes[frame=HsIDes],.test-case-insensitive-attributes[frame=hSIDes],.test-case-insensitive-attributes[frame=HSIDes],.test-case-insensitive-attributes[frame=hsidEs],.test-case-insensitive-attributes[frame=HsidEs],.test-case-insensitive-attributes[frame=hSidEs],.test-case-insensitive-attributes[frame=HSidEs],.test-case-insensitive-attributes[frame=hsIdEs],.test-case-insensitive-attributes[frame=HsIdEs],.test-case-insensitive-attributes[frame=hSIdEs],.test-case-insensitive-attributes[frame=HSIdEs],.test-case-insensitive-attributes[frame=hsiDEs],.test-case-insensitive-attributes[frame=HsiDEs],.test-case-insensitive-attributes[frame=hSiDEs],.test-case-insensitive-attributes[frame=HSiDEs],.test-case-insensitive-attributes[frame=hsIDEs],.test-case-insensitive-attributes[frame=HsIDEs],.test-case-insensitive-attributes[frame=hSIDEs],.test-case-insensitive-attributes[frame=HSIDEs],.test-case-insensitive-attributes[frame=hsideS],.test-case-insensitive-attributes[frame=HsideS],.test-case-insensitive-attributes[frame=hSideS],.test-case-insensitive-attributes[frame=HSideS],.test-case-insensitive-attributes[frame=hsIdeS],.test-case-insensitive-attributes[frame=HsIdeS],.test-case-insensitive-attributes[frame=hSIdeS],.test-case-insensitive-attributes[frame=HSIdeS],.test-case-insensitive-attributes[frame=hsiDeS],.test-case-insensitive-attributes[frame=HsiDeS],.test-case-insensitive-attributes[frame=hSiDeS],.test-case-insensitive-attributes[frame=HSiDeS],.test-case-insensitive-attributes[frame=hsIDeS],.test-case-insensitive-attributes[frame=HsIDeS],.test-case-insensitive-attributes[frame=hSIDeS],.test-case-insensitive-attributes[frame=HSIDeS],.test-case-insensitive-attributes[frame=hsidES],.test-case-insensitive-attributes[frame=HsidES],.test-case-insensitive-attributes[frame=hSidES],.test-case-insensitive-attributes[frame=HSidES],.test-case-insensitive-attributes[frame=hsIdES],.test-case-insensitive-attributes[frame=HsIdES],.test-case-insensitive-attributes[frame=hSIdES],.test-case-insensitive-attributes[frame=HSIdES],.test-case-insensitive-attributes[frame=hsiDES],.test-case-insensitive-attributes[frame=HsiDES],.test-case-insensitive-attributes[frame=hSiDES],.test-case-insensitive-attributes[frame=HSiDES],.test-case-insensitive-attributes[frame=hsIDES],.test-case-insensitive-attributes[frame=HsIDES],.test-case-insensitive-attributes[frame=hSIDES],.test-case-insensitive-attributes[frame=HSIDES] {
+	order: 10;
+}
+
+.test-rebeccapurple-color {
+	color: rebeccapurple;
+	order: 11;
+}
+
+.test-hexadecimal-alpha-notation {
+	background-color: rgba(243, 243, 243, 0.95294);
+	color: rgba(0, 0, 0, 0.2);
+	order: 12;
+}
+
+.test-color-mod-function {
+	color: rgba(0, 0, 0, 0.5);
+	order: 13;
+}
+
+.test-system-ui-font-family {
+	font-family: system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Droid Sans, Helvetica Neue;
+	order: 14;
+}
+
+.test-font-variant-property {
+	font-feature-settings: "c2sc";
+	font-variant-caps: small-caps;
+	order: 15;
+}
+
+.test-all-property {
+	all: initial;
+	order: 16;
+}
+
+.test-matches-pseudo-class:first-child, .test-matches-pseudo-class.special {
+	order: 17;
+}
+
+.test-not-pseudo-class:not(:first-child):not(.special) {
+	order: 18;
+}
+
+.test-any-link-pseudo-class:any-link {
+	order: 19;
+}
+
+[dir="rtl"] .test-dir-pseudo-class {
+	order: 20;
+}
+
+.test-overflow-wrap-property {
+	order: 21;
+	overflow-wrap: break-word;
 }
 
-test-matches.foo, test-matches.bar {
-	order: 5;
+.test-focus-visible-pseudo-class.focus-visible {
+	order: 22;
 }
 
-test-break {
-	page-break-inside: avoid;
-	break-inside: avoid;
+.test-focus-visible-pseudo-class:focus-visible {
+	order: 22;
 }
diff --git a/test/basic.css b/test/basic.css
index 3da5c4b..c41a95a 100644
--- a/test/basic.css
+++ b/test/basic.css
@@ -1,26 +1,108 @@
-test-selectors-dir-pseudo:dir(ltr) {
-	order: 1;
+:root {
+	--order: 1;
 }
 
-test-css-nesting {
-	& {
-		order: 2;
-	}
+.test-custom-properties {
+	order: var(--order);
 }
 
-test-css-color-valdef-color-rebeccapurple {
-	color: rebeccapurple;
+.test-image-set-function {
+	background-image: image-set(url(img/test.png) 1x, url(img/test-2x.png) 2x);
+	order: 2;
+}
+
+.test-logical-properties-and-values {
+	margin: logical 1px 2px 3px 4px;
 	order: 3;
+	padding-block: 5px;
 }
 
-test:focus-visible {
+.test-nesting-rules {
 	order: 4;
+
+	& p {
+		order: 5;
+	}
+
+	order: 6;
+}
+
+@custom-media --narrow-window (max-width: 30em);
+
+@media (--narrow-window) {
+	.test-custom-media-queries {
+		order: 7;
+	}
+}
+
+@media (480px <= width < 768px) {
+	.test-media-query-ranges {
+		order: 8;
+	}
+}
+
+@custom-selector :--heading h1, h2, h3, h4, h5, h6
+
+.test-custom-selectors:--heading {
+	order: 9;
+}
+
+.test-case-insensitive-attributes[frame=hsides i] {
+	order: 10;
+}
+
+.test-rebeccapurple-color {
+	color: rebeccapurple;
+	order: 11;
+}
+
+.test-hexadecimal-alpha-notation {
+	background-color: #f3f3f3f3;
+	color: #0003;
+	order: 12;
+}
+
+.test-color-mod-function {
+	color: color-mod(black alpha(50%));
+	order: 13;
+}
+
+.test-system-ui-font-family {
+	font-family: system-ui;
+	order: 14;
+}
+
+.test-font-variant-property {
+	font-variant-caps: small-caps;
+	order: 15;
+}
+
+.test-all-property {
+	all: initial;
+	order: 16;
+}
+
+.test-matches-pseudo-class:matches(:first-child, .special) {
+	order: 17;
+}
+
+.test-not-pseudo-class:not(:first-child, .special) {
+	order: 18;
+}
+
+.test-any-link-pseudo-class:any-link {
+	order: 19;
+}
+
+.test-dir-pseudo-class:dir(rtl) {
+	order: 20;
 }
 
-test-matches:matches(.foo, .bar) {
-	order: 5;
+.test-overflow-wrap-property {
+	order: 21;
+	overflow-wrap: break-word;
 }
 
-test-break {
-	break-inside: avoid;
+.test-focus-visible-pseudo-class:focus-visible {
+	order: 22;
 }
diff --git a/test/basic.expect.css b/test/basic.expect.css
index 6806bc1..a9d60ab 100644
--- a/test/basic.expect.css
+++ b/test/basic.expect.css
@@ -1,27 +1,212 @@
-[dir="ltr"] test-selectors-dir-pseudo {
+:root {
+	--order: 1;
+}
+
+.test-custom-properties {
 	order: 1;
+	order: var(--order);
 }
 
-test-css-nesting {
-	& {
-		order: 2;
-	}
+.test-image-set-function {
+	background-image: url(img/test.png);
 }
 
-test-css-color-valdef-color-rebeccapurple {
-	color: #639;
+@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
+
+.test-image-set-function {
+	background-image: url(img/test-2x.png);
+}
+}
+
+.test-image-set-function {
+	order: 2;
+}
+
+.test-logical-properties-and-values {
+	[dir="ltr"] & {
+	margin: 1px 4px 3px 2px;
+	}
+	[dir="rtl"] & {
+	margin: 1px 2px 3px 4px;
+	}
 	order: 3;
+	padding-top: 5px;
+	padding-bottom: 5px;
 }
 
-test.focus-visible {
+.test-nesting-rules {
 	order: 4;
+
+	& p {
+		order: 5;
+	}
+
+	order: 6;
+}
+
+@custom-media --narrow-window (max-width: 30em);
+
+@media (--narrow-window) {
+	.test-custom-media-queries {
+		order: 7;
+	}
+}
+
+@media (min-width: 480px) and (max-width: 767px) {
+	.test-media-query-ranges {
+		order: 8;
+	}
+}
+
+@custom-selector :--heading h1, h2, h3, h4, h5, h6
+
+.test-custom-selectors:--heading {
+	order: 9;
+}
+
+.test-case-insensitive-attributes[frame=hsides],.test-case-insensitive-attributes[frame=Hsides],.test-case-insensitive-attributes[frame=hSides],.test-case-insensitive-attributes[frame=HSides],.test-case-insensitive-attributes[frame=hsIdes],.test-case-insensitive-attributes[frame=HsIdes],.test-case-insensitive-attributes[frame=hSIdes],.test-case-insensitive-attributes[frame=HSIdes],.test-case-insensitive-attributes[frame=hsiDes],.test-case-insensitive-attributes[frame=HsiDes],.test-case-insensitive-attributes[frame=hSiDes],.test-case-insensitive-attributes[frame=HSiDes],.test-case-insensitive-attributes[frame=hsIDes],.test-case-insensitive-attributes[frame=HsIDes],.test-case-insensitive-attributes[frame=hSIDes],.test-case-insensitive-attributes[frame=HSIDes],.test-case-insensitive-attributes[frame=hsidEs],.test-case-insensitive-attributes[frame=HsidEs],.test-case-insensitive-attributes[frame=hSidEs],.test-case-insensitive-attributes[frame=HSidEs],.test-case-insensitive-attributes[frame=hsIdEs],.test-case-insensitive-attributes[frame=HsIdEs],.test-case-insensitive-attributes[frame=hSIdEs],.test-case-insensitive-attributes[frame=HSIdEs],.test-case-insensitive-attributes[frame=hsiDEs],.test-case-insensitive-attributes[frame=HsiDEs],.test-case-insensitive-attributes[frame=hSiDEs],.test-case-insensitive-attributes[frame=HSiDEs],.test-case-insensitive-attributes[frame=hsIDEs],.test-case-insensitive-attributes[frame=HsIDEs],.test-case-insensitive-attributes[frame=hSIDEs],.test-case-insensitive-attributes[frame=HSIDEs],.test-case-insensitive-attributes[frame=hsideS],.test-case-insensitive-attributes[frame=HsideS],.test-case-insensitive-attributes[frame=hSideS],.test-case-insensitive-attributes[frame=HSideS],.test-case-insensitive-attributes[frame=hsIdeS],.test-case-insensitive-attributes[frame=HsIdeS],.test-case-insensitive-attributes[frame=hSIdeS],.test-case-insensitive-attributes[frame=HSIdeS],.test-case-insensitive-attributes[frame=hsiDeS],.test-case-insensitive-attributes[frame=HsiDeS],.test-case-insensitive-attributes[frame=hSiDeS],.test-case-insensitive-attributes[frame=HSiDeS],.test-case-insensitive-attributes[frame=hsIDeS],.test-case-insensitive-attributes[frame=HsIDeS],.test-case-insensitive-attributes[frame=hSIDeS],.test-case-insensitive-attributes[frame=HSIDeS],.test-case-insensitive-attributes[frame=hsidES],.test-case-insensitive-attributes[frame=HsidES],.test-case-insensitive-attributes[frame=hSidES],.test-case-insensitive-attributes[frame=HSidES],.test-case-insensitive-attributes[frame=hsIdES],.test-case-insensitive-attributes[frame=HsIdES],.test-case-insensitive-attributes[frame=hSIdES],.test-case-insensitive-attributes[frame=HSIdES],.test-case-insensitive-attributes[frame=hsiDES],.test-case-insensitive-attributes[frame=HsiDES],.test-case-insensitive-attributes[frame=hSiDES],.test-case-insensitive-attributes[frame=HSiDES],.test-case-insensitive-attributes[frame=hsIDES],.test-case-insensitive-attributes[frame=HsIDES],.test-case-insensitive-attributes[frame=hSIDES],.test-case-insensitive-attributes[frame=HSIDES] {
+	order: 10;
+}
+
+.test-rebeccapurple-color {
+	color: #639;
+	order: 11;
+}
+
+.test-hexadecimal-alpha-notation {
+	background-color: rgba(243, 243, 243, 0.95294);
+	color: rgba(0, 0, 0, 0.2);
+	order: 12;
+}
+
+.test-color-mod-function {
+	color: rgba(0, 0, 0, 0.5);
+	order: 13;
+}
+
+.test-system-ui-font-family {
+	font-family: system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Droid Sans, Helvetica Neue;
+	order: 14;
+}
+
+.test-font-variant-property {
+	font-feature-settings: "c2sc";
+	font-variant-caps: small-caps;
+	order: 15;
+}
+
+.test-all-property {
+	animation: none 0s ease 0s 1 normal none running;
+	backface-visibility: visible;
+	background: transparent none repeat 0 0 / auto auto padding-box border-box scroll;
+	border: medium none currentColor;
+	border-collapse: separate;
+	border-image: none;
+	border-radius: 0;
+	border-spacing: 0;
+	bottom: auto;
+	box-shadow: none;
+	box-sizing: content-box;
+	caption-side: top;
+	clear: none;
+	clip: auto;
+	color: #000;
+	columns: auto;
+	column-count: auto;
+	column-fill: balance;
+	column-gap: normal;
+	column-rule: medium none currentColor;
+	column-span: 1;
+	column-width: auto;
+	content: normal;
+	counter-increment: none;
+	counter-reset: none;
+	cursor: auto;
+	direction: ltr;
+	display: inline;
+	empty-cells: show;
+	float: none;
+	font-family: serif;
+	font-size: medium;
+	font-style: normal;
+	font-variant: normal;
+	font-weight: normal;
+	font-stretch: normal;
+	line-height: normal;
+	height: auto;
+	hyphens: none;
+	left: auto;
+	letter-spacing: normal;
+	list-style: disc outside none;
+	margin: 0;
+	max-height: none;
+	max-width: none;
+	min-height: 0;
+	min-width: 0;
+	opacity: 1;
+	orphans: 2;
+	outline: medium none invert;
+	overflow: visible;
+	overflow-x: visible;
+	overflow-y: visible;
+	padding: 0;
+	page-break-after: auto;
+	page-break-before: auto;
+	page-break-inside: auto;
+	perspective: none;
+	perspective-origin: 50% 50%;
+	position: static;
+	right: auto;
+	tab-size: 8;
+	table-layout: auto;
+	text-align: left;
+	text-align-last: auto;
+	text-decoration: none;
+	text-indent: 0;
+	text-shadow: none;
+	text-transform: none;
+	top: auto;
+	transform: none;
+	transform-origin: 50% 50% 0;
+	transform-style: flat;
+	transition: none 0s ease 0s;
+	unicode-bidi: normal;
+	vertical-align: baseline;
+	visibility: visible;
+	white-space: normal;
+	widows: 2;
+	width: auto;
+	word-spacing: normal;
+	z-index: auto;
+	all: initial;
+	order: 16;
+}
+
+.test-matches-pseudo-class:first-child, .test-matches-pseudo-class.special {
+	order: 17;
+}
+
+.test-not-pseudo-class:not(:first-child):not(.special) {
+	order: 18;
+}
+
+.test-any-link-pseudo-class:link,.test-any-link-pseudo-class:visited {
+	order: 19;
+}
+
+[dir="rtl"] .test-dir-pseudo-class {
+	order: 20;
+}
+
+.test-overflow-wrap-property {
+	order: 21;
+	word-wrap: break-word;
 }
 
-test-matches.foo, test-matches.bar {
-	order: 5;
+.test-focus-visible-pseudo-class.focus-visible {
+	order: 22;
 }
 
-test-break {
-	page-break-inside: avoid;
-	break-inside: avoid;
+.test-focus-visible-pseudo-class:focus-visible {
+	order: 22;
 }
diff --git a/test/basic.ff49.expect.css b/test/basic.ff49.expect.css
index a543be5..08d6a10 100644
--- a/test/basic.ff49.expect.css
+++ b/test/basic.ff49.expect.css
@@ -1,27 +1,118 @@
-test-selectors-dir-pseudo:dir(ltr) {
-	order: 1;
+:root {
+	--order: 1;
 }
 
-test-css-nesting {
-	& {
-		order: 2;
-	}
+.test-custom-properties {
+	order: var(--order);
 }
 
-test-css-color-valdef-color-rebeccapurple {
-	color: rebeccapurple;
+.test-image-set-function {
+	background-image: url(img/test.png);
+}
+
+@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
+
+.test-image-set-function {
+	background-image: url(img/test-2x.png);
+}
+}
+
+.test-image-set-function {
+	order: 2;
+}
+
+.test-logical-properties-and-values {
+	margin: logical 1px 2px 3px 4px;
 	order: 3;
+	padding-block: 5px;
 }
 
-test:focus-visible {
+.test-nesting-rules {
 	order: 4;
+
+	& p {
+		order: 5;
+	}
+
+	order: 6;
+}
+
+@custom-media --narrow-window (max-width: 30em);
+
+@media (--narrow-window) {
+	.test-custom-media-queries {
+		order: 7;
+	}
+}
+
+@media (min-width: 480px) and (max-width: 767px) {
+	.test-media-query-ranges {
+		order: 8;
+	}
+}
+
+@custom-selector :--heading h1, h2, h3, h4, h5, h6
+
+.test-custom-selectors:--heading {
+	order: 9;
+}
+
+.test-case-insensitive-attributes[frame=hsides i] {
+	order: 10;
+}
+
+.test-rebeccapurple-color {
+	color: rebeccapurple;
+	order: 11;
+}
+
+.test-hexadecimal-alpha-notation {
+	background-color: #f3f3f3f3;
+	color: #0003;
+	order: 12;
+}
+
+.test-color-mod-function {
+	color: rgba(0, 0, 0, 0.5);
+	order: 13;
+}
+
+.test-system-ui-font-family {
+	font-family: system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Droid Sans, Helvetica Neue;
+	order: 14;
+}
+
+.test-font-variant-property {
+	font-variant-caps: small-caps;
+	order: 15;
+}
+
+.test-all-property {
+	all: initial;
+	order: 16;
+}
+
+.test-matches-pseudo-class:first-child, .test-matches-pseudo-class.special {
+	order: 17;
+}
+
+.test-not-pseudo-class:not(:first-child):not(.special) {
+	order: 18;
+}
+
+.test-any-link-pseudo-class:any-link {
+	order: 19;
+}
+
+.test-dir-pseudo-class:dir(rtl) {
+	order: 20;
 }
 
-test-matches.foo, test-matches.bar {
-	order: 5;
+.test-overflow-wrap-property {
+	order: 21;
+	overflow-wrap: break-word;
 }
 
-test-break {
-	page-break-inside: avoid;
-	break-inside: avoid;
+.test-focus-visible-pseudo-class:focus-visible {
+	order: 22;
 }
diff --git a/test/basic.nesting.expect.css b/test/basic.nesting.expect.css
index fe3b2a1..4aafeca 100644
--- a/test/basic.nesting.expect.css
+++ b/test/basic.nesting.expect.css
@@ -1,24 +1,110 @@
-test-selectors-dir-pseudo:dir(ltr) {
-	order: 1;
+:root {
+	--order: 1;
 }
 
-test-css-nesting {
+.test-custom-properties {
+	order: var(--order);
+}
+
+.test-image-set-function {
+	background-image: image-set(url(img/test.png) 1x, url(img/test-2x.png) 2x);
 	order: 2;
 }
 
-test-css-color-valdef-color-rebeccapurple {
-	color: rebeccapurple;
+.test-logical-properties-and-values {
+	margin: logical 1px 2px 3px 4px;
 	order: 3;
+	padding-block: 5px;
 }
 
-test:focus-visible {
+.test-nesting-rules {
 	order: 4;
 }
 
-test-matches:matches(.foo, .bar) {
+.test-nesting-rules p {
 	order: 5;
 }
 
-test-break {
-	break-inside: avoid;
+.test-nesting-rules {
+	order: 6;
+}
+
+@custom-media --narrow-window (max-width: 30em);
+
+@media (--narrow-window) {
+	.test-custom-media-queries {
+		order: 7;
+	}
+}
+
+@media (480px <= width < 768px) {
+	.test-media-query-ranges {
+		order: 8;
+	}
+}
+
+@custom-selector :--heading h1, h2, h3, h4, h5, h6
+
+.test-custom-selectors:--heading {
+	order: 9;
+}
+
+.test-case-insensitive-attributes[frame=hsides i] {
+	order: 10;
+}
+
+.test-rebeccapurple-color {
+	color: rebeccapurple;
+	order: 11;
+}
+
+.test-hexadecimal-alpha-notation {
+	background-color: #f3f3f3f3;
+	color: #0003;
+	order: 12;
+}
+
+.test-color-mod-function {
+	color: color-mod(black alpha(50%));
+	order: 13;
+}
+
+.test-system-ui-font-family {
+	font-family: system-ui;
+	order: 14;
+}
+
+.test-font-variant-property {
+	font-variant-caps: small-caps;
+	order: 15;
+}
+
+.test-all-property {
+	all: initial;
+	order: 16;
+}
+
+.test-matches-pseudo-class:matches(:first-child, .special) {
+	order: 17;
+}
+
+.test-not-pseudo-class:not(:first-child, .special) {
+	order: 18;
+}
+
+.test-any-link-pseudo-class:any-link {
+	order: 19;
+}
+
+.test-dir-pseudo-class:dir(rtl) {
+	order: 20;
+}
+
+.test-overflow-wrap-property {
+	order: 21;
+	overflow-wrap: break-word;
+}
+
+.test-focus-visible-pseudo-class:focus-visible {
+	order: 22;
 }
diff --git a/test/basic.stage1-ff49.expect.css b/test/basic.stage1-ff49.expect.css
index 8306b9d..5ff6d32 100644
--- a/test/basic.stage1-ff49.expect.css
+++ b/test/basic.stage1-ff49.expect.css
@@ -1,25 +1,112 @@
-test-selectors-dir-pseudo:dir(ltr) {
-	order: 1;
+:root {
+	--order: 1;
 }
 
-test-css-nesting {
+.test-custom-properties {
+	order: var(--order);
+}
+
+.test-image-set-function {
+	background-image: url(img/test.png);
+}
+
+@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
+
+.test-image-set-function {
+	background-image: url(img/test-2x.png);
+}
+}
+
+.test-image-set-function {
 	order: 2;
 }
 
-test-css-color-valdef-color-rebeccapurple {
-	color: rebeccapurple;
+.test-logical-properties-and-values {
+	margin: logical 1px 2px 3px 4px;
 	order: 3;
+	padding-block: 5px;
 }
 
-test:focus-visible {
+.test-nesting-rules {
 	order: 4;
 }
 
-test-matches.foo, test-matches.bar {
+.test-nesting-rules p {
 	order: 5;
 }
 
-test-break {
-	page-break-inside: avoid;
-	break-inside: avoid;
+.test-nesting-rules {
+	order: 6;
+}
+
+@media (max-width: 30em) {
+	.test-custom-media-queries {
+		order: 7;
+	}
+}
+
+@media (min-width: 480px) and (max-width: 767px) {
+	.test-media-query-ranges {
+		order: 8;
+	}
+}
+
+.test-case-insensitive-attributes[frame=hsides i] {
+	order: 10;
+}
+
+.test-rebeccapurple-color {
+	color: rebeccapurple;
+	order: 11;
+}
+
+.test-hexadecimal-alpha-notation {
+	background-color: #f3f3f3f3;
+	color: #0003;
+	order: 12;
+}
+
+.test-color-mod-function {
+	color: rgba(0, 0, 0, 0.5);
+	order: 13;
+}
+
+.test-system-ui-font-family {
+	font-family: system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Droid Sans, Helvetica Neue;
+	order: 14;
+}
+
+.test-font-variant-property {
+	font-variant-caps: small-caps;
+	order: 15;
+}
+
+.test-all-property {
+	all: initial;
+	order: 16;
+}
+
+.test-matches-pseudo-class:first-child, .test-matches-pseudo-class.special {
+	order: 17;
+}
+
+.test-not-pseudo-class:not(:first-child):not(.special) {
+	order: 18;
+}
+
+.test-any-link-pseudo-class:any-link {
+	order: 19;
+}
+
+.test-dir-pseudo-class:dir(rtl) {
+	order: 20;
+}
+
+.test-overflow-wrap-property {
+	order: 21;
+	overflow-wrap: break-word;
+}
+
+.test-focus-visible-pseudo-class:focus-visible {
+	order: 22;
 }
diff --git a/test/basic.stage1.expect.css b/test/basic.stage1.expect.css
index 44d1261..35a3954 100644
--- a/test/basic.stage1.expect.css
+++ b/test/basic.stage1.expect.css
@@ -1,25 +1,208 @@
-[dir="ltr"] test-selectors-dir-pseudo {
+:root {
+	--order: 1;
+}
+
+.test-custom-properties {
 	order: 1;
+	order: var(--order);
+}
+
+.test-image-set-function {
+	background-image: url(img/test.png);
+}
+
+@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
+
+.test-image-set-function {
+	background-image: url(img/test-2x.png);
+}
 }
 
-test-css-nesting {
+.test-image-set-function {
 	order: 2;
 }
 
-test-css-color-valdef-color-rebeccapurple {
-	color: #639;
+[dir="ltr"] .test-logical-properties-and-values {
+	margin: 1px 4px 3px 2px;
+}
+
+[dir="rtl"] .test-logical-properties-and-values {
+	margin: 1px 2px 3px 4px;
+}
+
+.test-logical-properties-and-values {
 	order: 3;
+	padding-top: 5px;
+	padding-bottom: 5px;
 }
 
-test.focus-visible {
+.test-nesting-rules {
 	order: 4;
 }
 
-test-matches.foo, test-matches.bar {
+.test-nesting-rules p {
 	order: 5;
 }
 
-test-break {
-	page-break-inside: avoid;
-	break-inside: avoid;
+.test-nesting-rules {
+	order: 6;
+}
+
+@media (max-width: 30em) {
+	.test-custom-media-queries {
+		order: 7;
+	}
+}
+
+@media (min-width: 480px) and (max-width: 767px) {
+	.test-media-query-ranges {
+		order: 8;
+	}
+}
+
+.test-case-insensitive-attributes[frame=hsides],.test-case-insensitive-attributes[frame=Hsides],.test-case-insensitive-attributes[frame=hSides],.test-case-insensitive-attributes[frame=HSides],.test-case-insensitive-attributes[frame=hsIdes],.test-case-insensitive-attributes[frame=HsIdes],.test-case-insensitive-attributes[frame=hSIdes],.test-case-insensitive-attributes[frame=HSIdes],.test-case-insensitive-attributes[frame=hsiDes],.test-case-insensitive-attributes[frame=HsiDes],.test-case-insensitive-attributes[frame=hSiDes],.test-case-insensitive-attributes[frame=HSiDes],.test-case-insensitive-attributes[frame=hsIDes],.test-case-insensitive-attributes[frame=HsIDes],.test-case-insensitive-attributes[frame=hSIDes],.test-case-insensitive-attributes[frame=HSIDes],.test-case-insensitive-attributes[frame=hsidEs],.test-case-insensitive-attributes[frame=HsidEs],.test-case-insensitive-attributes[frame=hSidEs],.test-case-insensitive-attributes[frame=HSidEs],.test-case-insensitive-attributes[frame=hsIdEs],.test-case-insensitive-attributes[frame=HsIdEs],.test-case-insensitive-attributes[frame=hSIdEs],.test-case-insensitive-attributes[frame=HSIdEs],.test-case-insensitive-attributes[frame=hsiDEs],.test-case-insensitive-attributes[frame=HsiDEs],.test-case-insensitive-attributes[frame=hSiDEs],.test-case-insensitive-attributes[frame=HSiDEs],.test-case-insensitive-attributes[frame=hsIDEs],.test-case-insensitive-attributes[frame=HsIDEs],.test-case-insensitive-attributes[frame=hSIDEs],.test-case-insensitive-attributes[frame=HSIDEs],.test-case-insensitive-attributes[frame=hsideS],.test-case-insensitive-attributes[frame=HsideS],.test-case-insensitive-attributes[frame=hSideS],.test-case-insensitive-attributes[frame=HSideS],.test-case-insensitive-attributes[frame=hsIdeS],.test-case-insensitive-attributes[frame=HsIdeS],.test-case-insensitive-attributes[frame=hSIdeS],.test-case-insensitive-attributes[frame=HSIdeS],.test-case-insensitive-attributes[frame=hsiDeS],.test-case-insensitive-attributes[frame=HsiDeS],.test-case-insensitive-attributes[frame=hSiDeS],.test-case-insensitive-attributes[frame=HSiDeS],.test-case-insensitive-attributes[frame=hsIDeS],.test-case-insensitive-attributes[frame=HsIDeS],.test-case-insensitive-attributes[frame=hSIDeS],.test-case-insensitive-attributes[frame=HSIDeS],.test-case-insensitive-attributes[frame=hsidES],.test-case-insensitive-attributes[frame=HsidES],.test-case-insensitive-attributes[frame=hSidES],.test-case-insensitive-attributes[frame=HSidES],.test-case-insensitive-attributes[frame=hsIdES],.test-case-insensitive-attributes[frame=HsIdES],.test-case-insensitive-attributes[frame=hSIdES],.test-case-insensitive-attributes[frame=HSIdES],.test-case-insensitive-attributes[frame=hsiDES],.test-case-insensitive-attributes[frame=HsiDES],.test-case-insensitive-attributes[frame=hSiDES],.test-case-insensitive-attributes[frame=HSiDES],.test-case-insensitive-attributes[frame=hsIDES],.test-case-insensitive-attributes[frame=HsIDES],.test-case-insensitive-attributes[frame=hSIDES],.test-case-insensitive-attributes[frame=HSIDES] {
+	order: 10;
+}
+
+.test-rebeccapurple-color {
+	color: #639;
+	order: 11;
+}
+
+.test-hexadecimal-alpha-notation {
+	background-color: rgba(243, 243, 243, 0.95294);
+	color: rgba(0, 0, 0, 0.2);
+	order: 12;
+}
+
+.test-color-mod-function {
+	color: rgba(0, 0, 0, 0.5);
+	order: 13;
+}
+
+.test-system-ui-font-family {
+	font-family: system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Droid Sans, Helvetica Neue;
+	order: 14;
+}
+
+.test-font-variant-property {
+	font-feature-settings: "c2sc";
+	font-variant-caps: small-caps;
+	order: 15;
+}
+
+.test-all-property {
+	animation: none 0s ease 0s 1 normal none running;
+	backface-visibility: visible;
+	background: transparent none repeat 0 0 / auto auto padding-box border-box scroll;
+	border: medium none currentColor;
+	border-collapse: separate;
+	border-image: none;
+	border-radius: 0;
+	border-spacing: 0;
+	bottom: auto;
+	box-shadow: none;
+	box-sizing: content-box;
+	caption-side: top;
+	clear: none;
+	clip: auto;
+	color: #000;
+	columns: auto;
+	column-count: auto;
+	column-fill: balance;
+	column-gap: normal;
+	column-rule: medium none currentColor;
+	column-span: 1;
+	column-width: auto;
+	content: normal;
+	counter-increment: none;
+	counter-reset: none;
+	cursor: auto;
+	direction: ltr;
+	display: inline;
+	empty-cells: show;
+	float: none;
+	font-family: serif;
+	font-size: medium;
+	font-style: normal;
+	font-variant: normal;
+	font-weight: normal;
+	font-stretch: normal;
+	line-height: normal;
+	height: auto;
+	hyphens: none;
+	left: auto;
+	letter-spacing: normal;
+	list-style: disc outside none;
+	margin: 0;
+	max-height: none;
+	max-width: none;
+	min-height: 0;
+	min-width: 0;
+	opacity: 1;
+	orphans: 2;
+	outline: medium none invert;
+	overflow: visible;
+	overflow-x: visible;
+	overflow-y: visible;
+	padding: 0;
+	page-break-after: auto;
+	page-break-before: auto;
+	page-break-inside: auto;
+	perspective: none;
+	perspective-origin: 50% 50%;
+	position: static;
+	right: auto;
+	tab-size: 8;
+	table-layout: auto;
+	text-align: left;
+	text-align-last: auto;
+	text-decoration: none;
+	text-indent: 0;
+	text-shadow: none;
+	text-transform: none;
+	top: auto;
+	transform: none;
+	transform-origin: 50% 50% 0;
+	transform-style: flat;
+	transition: none 0s ease 0s;
+	unicode-bidi: normal;
+	vertical-align: baseline;
+	visibility: visible;
+	white-space: normal;
+	widows: 2;
+	width: auto;
+	word-spacing: normal;
+	z-index: auto;
+	all: initial;
+	order: 16;
+}
+
+.test-matches-pseudo-class:first-child, .test-matches-pseudo-class.special {
+	order: 17;
+}
+
+.test-not-pseudo-class:not(:first-child):not(.special) {
+	order: 18;
+}
+
+.test-any-link-pseudo-class:link,.test-any-link-pseudo-class:visited {
+	order: 19;
+}
+
+[dir="rtl"] .test-dir-pseudo-class {
+	order: 20;
+}
+
+.test-overflow-wrap-property {
+	order: 21;
+	word-wrap: break-word;
+}
+
+.test-focus-visible-pseudo-class.focus-visible {
+	order: 22;
+}
+
+.test-focus-visible-pseudo-class:focus-visible {
+	order: 22;
 }
diff --git a/test/css-variables.css b/test/custom-properties.css
similarity index 100%
rename from test/css-variables.css
rename to test/custom-properties.css
diff --git a/test/css-variables.disabled.expect.css b/test/custom-properties.disabled.expect.css
similarity index 100%
rename from test/css-variables.disabled.expect.css
rename to test/custom-properties.disabled.expect.css
diff --git a/test/css-variables.expect.css b/test/custom-properties.expect.css
similarity index 100%
rename from test/css-variables.expect.css
rename to test/custom-properties.expect.css
-- 
2.33.1

