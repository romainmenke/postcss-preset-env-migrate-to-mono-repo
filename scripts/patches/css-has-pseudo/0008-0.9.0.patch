From ad0c3e58522c8b696df7896b537f37a5cd42c488 Mon Sep 17 00:00:00 2001
From: Jonathan Neal <jonathantneal@hotmail.com>
Date: Mon, 26 Nov 2018 21:50:32 -0500
Subject: [PATCH 08/17] 0.9.0

---
 CHANGELOG.md |  4 ++++
 package.json |  2 +-
 src/cli.js   | 41 +++++++++++++++++++++++++++--------------
 3 files changed, 32 insertions(+), 15 deletions(-)

diff --git a/CHANGELOG.md b/CHANGELOG.md
index b0a5152..e0bbbb2 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,5 +1,9 @@
 # Changes to CSS Has Pseudo
 
+### 0.9.0 (November 26, 2018)
+
+- Improved CLI usage
+
 ### 0.8.0 (November 26, 2018)
 
 - Fixed an issue where attribute names were not being properly encoded
diff --git a/package.json b/package.json
index 0fde6fc..bc44a40 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "css-has-pseudo",
-  "version": "0.8.0",
+  "version": "0.9.0",
   "description": "Style elements relative to other elements in CSS",
   "author": "Jonathan Neal <jonathantneal@hotmail.com>",
   "license": "CC0-1.0",
diff --git a/src/cli.js b/src/cli.js
index e619e73..392fbd9 100644
--- a/src/cli.js
+++ b/src/cli.js
@@ -1,18 +1,6 @@
 import fs from 'fs';
 import plugin from './postcss';
 
-if (process.argv.length < 3) {
-	console.log([
-		'CSS Has Pseudo\n',
-		'  Transforms CSS with :has {}\n',
-		'Usage:\n',
-		'  css-has-pseudo source.css transformed.css',
-		'  css-has-pseudo --in=source.css --out=transformed.css --opts={}',
-		'  echo "body:has(:focus) {}" | css-has-pseudo\n'
-	].join('\n'));
-	process.exit(0);
-}
-
 // get process and plugin options from the command line
 const fileRegExp = /^[\w\/.]+$/;
 const argRegExp = /^--(\w+)=("|')?(.+)\2$/;
@@ -41,6 +29,19 @@ const argo = process.argv.slice(2).reduce(
 // get css from command line arguments or stdin
 (argo.from === '<stdin>' ? getStdin() : readFile(argo.from))
 .then(css => {
+	if (argo.from === '<stdin>' && !css) {
+		console.log([
+			'CSS Has Pseudo\n',
+			'  Transforms CSS with :has {}\n',
+			'Usage:\n',
+			'  css-has-pseudo source.css transformed.css',
+			'  css-has-pseudo --from=source.css --to=transformed.css --opts={}',
+			'  echo "body:has(:focus) {}" | css-has-pseudo\n'
+		].join('\n'));
+
+		process.exit(0);
+	}
+
 	const pluginOpts = JSON.parse(
 		argo.opts
 		.replace(relaxedJsonPropRegExp, '"$2": ')
@@ -57,14 +58,26 @@ const argo = process.argv.slice(2).reduce(
 			() => `CSS was written to "${argo.to}"`
 		)
 	}
-}).then(
+}).catch(
+	error => {
+		if (Object(error).name === 'CssSyntaxError') {
+			throw new Error(`PostCSS had trouble reading the file (${error.reason} on line ${error.line}, column ${error.column}).`);
+		}
+
+		if (Object(error).errno === -2) {
+			throw new Error(`Sorry, "${error.path}" could not be read.`);
+		}
+
+		throw error;
+	}
+).then(
 	result => {
 		console.log(result);
 
 		process.exit(0);
 	},
 	error => {
-		console.error(error);
+		console.error(Object(error).message || 'Something bad happened and we donâ€™t even know what it was.');
 
 		process.exit(1);
 	}
-- 
2.33.1

