From 6d2040ac0007e7465450f84519073a3f661abd9c Mon Sep 17 00:00:00 2001
From: Jonathan Neal <jonathantneal@hotmail.com>
Date: Fri, 11 May 2018 17:28:08 -0400
Subject: [PATCH 02/22] 1.0.1

---
 CHANGELOG.md | 4 ++++
 index.js     | 9 ++++-----
 package.json | 4 ++--
 3 files changed, 10 insertions(+), 7 deletions(-)

diff --git a/CHANGELOG.md b/CHANGELOG.md
index c229c7f..5641f69 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,5 +1,9 @@
 # Changes to PostCSS Color Functional Notation
 
+### 1.0.1 (May 11, 2018)
+
+- Fixed: A non-percentage 0 works alongside other percentages
+
 ### 1.0.0 (May 7, 2018)
 
 - Initial version
diff --git a/index.js b/index.js
index 4e00f5f..18e90cc 100644
--- a/index.js
+++ b/index.js
@@ -1,9 +1,6 @@
 import postcss from 'postcss';
 import parser from 'postcss-values-parser';
 
-const colorAnyRegExp = /(^|[^\w-])(hsla?|rgba?)\(/i;
-const colorRegExp = /^(hsla?|rgba?)$/i;
-
 export default postcss.plugin('postcss-color-functional-notation', opts => {
 	const preserve = 'preserve' in Object(opts) ? Boolean(opts.preserve) : false;
 
@@ -70,14 +67,16 @@ export default postcss.plugin('postcss-color-functional-notation', opts => {
 
 const alphaUnitMatch = /^%?$/i;
 const calcFuncMatch = /^calc$/i;
-const hueUnitMatch = /^(deg|grad|rad|turn)?$/i;
+const colorAnyRegExp = /(^|[^\w-])(hsla?|rgba?)\(/i;
+const colorRegExp = /^(hsla?|rgba?)$/i;
 const hslRgbFuncMatch = /^(hsl|rgb)$/i;
 const hslaRgbaFuncMatch = /^(hsla|rgba)$/i;
+const hueUnitMatch = /^(deg|grad|rad|turn)?$/i;
 const isAlphaValue = node => isCalc(node) || Object(node).type === 'number' && alphaUnitMatch.test(node.unit);
 const isCalc = node => Object(node).type === 'func' && calcFuncMatch.test(node.value);
 const isHue = node => isCalc(node) || Object(node).type === 'number' && hueUnitMatch.test(node.unit);
 const isNumber = node => isCalc(node) || Object(node).type === 'number' && node.unit === '';
-const isPercentage = node => isCalc(node) || Object(node).type === 'number' && node.unit === '%';
+const isPercentage = node => isCalc(node) || Object(node).type === 'number' && (node.unit === '%' || node.unit === '' && node.value === '0');
 const isHslRgb = node => Object(node).type === 'func' && hslRgbFuncMatch.test(node.value);
 const isHslaRgba = node => Object(node).type === 'func' && hslaRgbaFuncMatch.test(node.value);
 const isSlash = node => Object(node).type === 'operator' && node.value === '/';
diff --git a/package.json b/package.json
index 1a1e867..db870cc 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "postcss-color-functional-notation",
-  "version": "1.0.0",
+  "version": "1.0.1",
   "description": "Use space and slash separated color notation in CSS",
   "author": "Jonathan Neal <jonathantneal@hotmail.com>",
   "license": "CC0-1.0",
@@ -31,7 +31,7 @@
   "devDependencies": {
     "babel-core": "^6.26.3",
     "babel-eslint": "^8.2.3",
-    "babel-preset-env": "^1.6.1",
+    "babel-preset-env": "^1.7.0",
     "eslint": "^4.19.1",
     "eslint-config-dev": "^2.0.0",
     "postcss-tape": "^2.2.0",
-- 
2.33.1

