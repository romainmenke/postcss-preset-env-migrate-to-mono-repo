From 519fffe159f1a022252618c6aea31f235e1ce4dc Mon Sep 17 00:00:00 2001
From: romainmenke <romainmenke@gmail.com>
Date: Sun, 7 Nov 2021 12:16:38 +0100
Subject: [PATCH 7/7] wip

---
 cli/postcss-base-plugin-cli/test/test.sh |  2 +-
 packages/base-cli/package.json           |  1 +
 packages/base-cli/src/args.ts            | 46 ++++-----------
 packages/base-cli/src/index.ts           |  2 +-
 packages/base-cli/test/test.mjs          | 73 +++++++++---------------
 5 files changed, 43 insertions(+), 81 deletions(-)

diff --git a/cli/postcss-base-plugin-cli/test/test.sh b/cli/postcss-base-plugin-cli/test/test.sh
index 7a211d5..6093ea0 100644
--- a/cli/postcss-base-plugin-cli/test/test.sh
+++ b/cli/postcss-base-plugin-cli/test/test.sh
@@ -4,7 +4,7 @@ set -e
 echo '' > ./test/basic.result.css;
 
 # Test with long flag
-postcss-base-plugin-cli ./test/basic.css --output=./test/basic.result.css --plugin-options='{ "option": true }'
+postcss-base-plugin-cli ./test/basic.css --output ./test/basic.result.css --plugin-options '{ "option": true }'
 
 # Check result
 git --no-pager diff --no-index --word-diff ./test/basic.expect.css ./test/basic.result.css
diff --git a/packages/base-cli/package.json b/packages/base-cli/package.json
index 6c8e83c..9a4a2bc 100644
--- a/packages/base-cli/package.json
+++ b/packages/base-cli/package.json
@@ -18,6 +18,7 @@
     "test": "npm run test:lint && npm run test:js",
     "test:lint": "eslint src/**/*.ts --quiet",
     "test:js": "node ./test/test.mjs",
+    "stryker": "stryker run --logLevel error",
     "build": "tsc"
   },
   "peerDependencies": {
diff --git a/packages/base-cli/src/args.ts b/packages/base-cli/src/args.ts
index 1e60476..cf2e4de 100644
--- a/packages/base-cli/src/args.ts
+++ b/packages/base-cli/src/args.ts
@@ -14,26 +14,8 @@ export enum SignalValue {
 }
 
 export function parseArguments(args: Array<string>, allowedPluginOpts: Array<string>, helpLogger: () => void): Arguments | SignalValue {
-	// Stryker disable next-line all
-	const fileRegExp = /^[\w/.]+$/;
-	// Stryker disable next-line all
-	const argRegExpA = /^(--?\w(?:[\w-]*?))=(?:("|')(.+)\2)$/;
-	// Stryker disable next-line all
-	const argRegExpB = /^(--?\w(?:[\w-]*?))=(([^'"].*?[^'"]))$/;
-
-	const flatArgs = args.flatMap((x) => {
-		const argMatchA = x.match(argRegExpA);
-		if (argMatchA) {
-			// Stryker disable next-line ArrayDeclaration
-			return [argMatchA[1], argMatchA[3]];
-		}
-
-		const argMatchB = x.match(argRegExpB);
-		if (argMatchB) {
-			return [argMatchB[1], argMatchB[2]];
-		}
-
-		return [x];
+	const flatArgs = args.map((x) => {
+		return x.trim();
 	}).filter((x) => {
 		return !!x;
 	});
@@ -63,27 +45,18 @@ export function parseArguments(args: Array<string>, allowedPluginOpts: Array<str
 				parsedArgs.output = flatArgs[i + 1];
 				// Stryker disable next-line UpdateOperator
 				i++;
+				encounteredFlagsOrArgs = true;
 				break;
 
 			case '-m':
 			case '--map':
 				parsedArgs.map = true;
-				// Stryker disable next-line all
-				if (!(/^--?\w/.test(flatArgs[i + 1]))) {
-					// Stryker disable next-line UpdateOperator
-					i++;
-				}
 				encounteredFlagsOrArgs = true;
 				break;
 
 			case '-r':
 			case '--replace':
 				parsedArgs.replace = true;
-				// Stryker disable next-line all
-				if (!(/^--?\w/.test(flatArgs[i + 1]))) {
-					// Stryker disable next-line UpdateOperator
-					i++;
-				}
 				encounteredFlagsOrArgs = true;
 				break;
 
@@ -100,18 +73,23 @@ export function parseArguments(args: Array<string>, allowedPluginOpts: Array<str
 				pluginOpts = flatArgs[i + 1];
 				// Stryker disable next-line UpdateOperator
 				i++;
-				// Stryker disable next-line BooleanLiteral
 				encounteredFlagsOrArgs = true;
 				break;
 
 			default:
-				if (!encounteredFlagsOrArgs && fileRegExp.test(arg)) {
+				if (arg.indexOf('-') === 0) {
+					// Stryker disable next-line all
+					console.warn(`[error] unknown argument : ${arg}\n`);
+					// Stryker disable next-line all
+					helpLogger();
+					return SignalValue.InvalidArguments;
+				}
+
+				if (!encounteredFlagsOrArgs) {
 					parsedArgs.inputs.push(arg);
 					break;
 				}
 
-				// Stryker disable next-line all
-				console.warn(`[error] unknown argument : ${arg}\n`);
 				// Stryker disable next-line all
 				helpLogger();
 				return SignalValue.InvalidArguments;
diff --git a/packages/base-cli/src/index.ts b/packages/base-cli/src/index.ts
index 87da673..46d5254 100644
--- a/packages/base-cli/src/index.ts
+++ b/packages/base-cli/src/index.ts
@@ -17,7 +17,7 @@ export function helpTextLogger(name: string, description: string, exampleOptions
 			];
 
 			pluginOptions.push(
-			`\n${JSON.stringify(exampleOptions, null, 2)}`
+			`\n  ${JSON.stringify(exampleOptions, null, 2).split('\n').join('\n  ')}`
 			)
 		}
 	}
diff --git a/packages/base-cli/test/test.mjs b/packages/base-cli/test/test.mjs
index f39deb2..7ab4bfc 100644
--- a/packages/base-cli/test/test.mjs
+++ b/packages/base-cli/test/test.mjs
@@ -21,13 +21,24 @@ const argumentParsingCases = [
 	{
 		message: "with input files at the end (o)",
 		args: [
-			'-o="o"',
+			'-o',
+			'"o"',
 			'./foo.css',
 			'../baz/bar.css'
 		],
 		allowedPluginOpts: [],
 		expected: 'INVALID_ARGUMENTS'
 	},
+	{
+		message: "with input files at the end (o)",
+		args: [
+			'--output',
+			'foo.css',
+			'./foo.css',
+		],
+		allowedPluginOpts: [],
+		expected: 'INVALID_ARGUMENTS'
+	},
 	{
 		message: "with input files at the end (m)",
 		args: [
@@ -51,7 +62,8 @@ const argumentParsingCases = [
 	{
 		message: "with input files at the end (d)",
 		args: [
-			'-d="d"',
+			'-d',
+			'"d"',
 			'./foo.css',
 			'../baz/bar.css'
 		],
@@ -72,7 +84,8 @@ const argumentParsingCases = [
 	{
 		message: "with input files in the middle",
 		args: [
-			'-d="o"',
+			'-d',
+			'"d"',
 			'./foo.css',
 			'../baz/bar.css',
 			"-m"
@@ -85,14 +98,17 @@ const argumentParsingCases = [
 		args: [
 			'./foo.css',
 			'../baz/bar.css',
-			'-d="o"',
-			"--dir='dir'",
+			'-d',
+			'"d"',
+			"--dir",
+			"'dir'",
 			"-m",
 			"--replace",
 			"",
 			"-p",
 			'{ "an_option": true }',
-			"--plugin-options={ \"an_option\": false }"
+			"--plugin-options",
+			"{ \"an_option\": false }"
 		],
 		allowedPluginOpts: [
 			"an_option"
@@ -194,7 +210,7 @@ const argumentParsingCases = [
 	},
 	{
 		message: "replace with multiple inputs",
-		args: ['./foo.css', './fooz.css', '-r', "foo"],
+		args: ['./foo.css', './fooz.css', '-r'],
 		allowedPluginOpts: [],
 		expected: {
 			stdin: false,
@@ -223,23 +239,8 @@ const argumentParsingCases = [
 		}
 	},
 	{
-		message: "short flag o with equal sign",
-		args: ['./foo.css', '-o=foo'],
-		allowedPluginOpts: [],
-		expected: {
-			stdin: false,
-			stdout: false,
-			output: 'foo',
-			outputDir: null,
-			inputs: [ './foo.css' ],
-			map: false,
-			replace: false,
-			pluginOptions: {}
-		}
-	},
-	{
-		message: "long flag output with equal sign",
-		args: ['./foo.css', '--output=foo'],
+		message: "long flag o",
+		args: ['./foo.css', '--output', 'foo'],
 		allowedPluginOpts: [],
 		expected: {
 			stdin: false,
@@ -286,31 +287,13 @@ const argumentParsingCases = [
 		message: "short flag m with invalid trailer",
 		args: ['./foo.css', '-m', 'foo'],
 		allowedPluginOpts: [],
-		expected: {
-			stdin: false,
-			stdout: true,
-			output: null,
-			outputDir: null,
-			inputs: [ './foo.css' ],
-			map: true,
-			replace: false,
-			pluginOptions: {}
-		},
+		expected: 'INVALID_ARGUMENTS',
 	},
 	{
 		message: "long flag map with invalid trailer",
 		args: ['./foo.css', '--map', 'foo'],
 		allowedPluginOpts: [],
-		expected: {
-			stdin: false,
-			stdout: true,
-			output: null,
-			outputDir: null,
-			inputs: [ './foo.css' ],
-			map: true,
-			replace: false,
-			pluginOptions: {}
-		}
+		expected: 'INVALID_ARGUMENTS'
 	},
 	{
 		message: "long flag map with valid trailer",
@@ -331,5 +314,5 @@ const argumentParsingCases = [
 
 argumentParsingCases.forEach((testCase) => {
 	const result = parseArguments(testCase.args, testCase.allowedPluginOpts, () => { });
-	assert.deepEqual(result, testCase.expected, testCase.message);
+	assert.strict.deepEqual(result, testCase.expected, testCase.message);
 });
-- 
2.33.1

