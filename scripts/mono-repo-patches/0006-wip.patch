From 082cac09a80c5540e5abce8cc142ebeaa9646736 Mon Sep 17 00:00:00 2001
From: romainmenke <romainmenke@gmail.com>
Date: Sat, 13 Nov 2021 11:19:22 +0100
Subject: [PATCH 06/10] wip

---
 packages/convert-colors/.gitignore         |  4 ++++
 packages/convert-colors/dist/index.js      |  2 --
 packages/convert-colors/dist/index.js.map  |  1 -
 packages/convert-colors/dist/index.mjs     |  2 --
 packages/convert-colors/dist/index.mjs.map |  1 -
 packages/convert-colors/src/index.js       | 25 ++++++++++++----------
 packages/convert-colors/src/xyz-p3.js      | 23 ++++++++++++++++++++
 7 files changed, 41 insertions(+), 17 deletions(-)
 create mode 100644 packages/convert-colors/.gitignore
 delete mode 100644 packages/convert-colors/dist/index.js
 delete mode 100644 packages/convert-colors/dist/index.js.map
 delete mode 100644 packages/convert-colors/dist/index.mjs
 delete mode 100644 packages/convert-colors/dist/index.mjs.map
 create mode 100644 packages/convert-colors/src/xyz-p3.js

diff --git a/packages/convert-colors/.gitignore b/packages/convert-colors/.gitignore
new file mode 100644
index 0000000..ca9a7b7
--- /dev/null
+++ b/packages/convert-colors/.gitignore
@@ -0,0 +1,4 @@
+node_modules
+package-lock.json
+yarn.lock
+# dist/*
diff --git a/packages/convert-colors/dist/index.js b/packages/convert-colors/dist/index.js
deleted file mode 100644
index 9a88560..0000000
--- a/packages/convert-colors/dist/index.js
+++ /dev/null
@@ -1,2 +0,0 @@
-"use strict";function t(t,r,o,s=0){const u=n(t,r,o),c=u-e(t,r,o);if(c){const n=u===t?(r-o)/c:u===r?(o-t)/c:(t-r)/c;return 60*(n+(u===t?n<0?6:0:u===r?2:4))}return s}function r(t,r,n){const e=n<0?n+360:n>360?n-360:n;return 6*e<360?t+(r-t)*e/60:2*e<360?r:3*e<720?t+(r-t)*(240-e)/60:t}function n(t,r,n){return m(t,r,n)}function e(t,r,n){return k(t,r,n)}function o(t,r){return r.map((r=>r.reduce(((r,n,e)=>r+t[e]*s*(n*s)/s/s),0)))}Object.defineProperty(exports,"__esModule",{value:!0});const s=1e8,[u,c,i]=[96.42,100,82.49],a=(t,r)=>p(d(t,r)),l=t=>g(h(t)),h=t=>t*v/180,p=t=>180*t/v,x=t=>M(h(t)),f=Math.abs,d=Math.atan2,b=Math.cbrt,g=Math.cos,y=Math.exp,w=Math.floor,m=Math.max,k=Math.min,v=Math.PI,z=Math.pow,M=Math.sin,q=Math.sqrt,I=z(6,3)/z(29,3),j=z(29,3)/z(3,3);function P(r,o,s,u){const c=t(r,o,s,u),i=n(r,o,s),a=e(r,o,s),l=i-a,h=(i+a)/2;return[c,0===l?0:l/(100-f(2*h-100))*100,h]}function S(t,n,e){const o=e<=50?e*(n+100)/100:e+n-e*n/100,s=2*e-o,[u,c,i]=[r(s,o,t+120),r(s,o,t),r(s,o,t-120)];return[u,c,i]}function $(r,o,s,u){return[t(r,o,s,u),e(r,o,s),100-n(r,o,s)]}function _(t,r,n,e){const[o,s,u]=S(t,100,50).map((t=>t*(100-r-n)/100+r));return[o,s,u]}function C(r,o,s,u){const c=n(r,o,s),i=e(r,o,s);return[t(r,o,s,u),c===i?0:(c-i)/c*100,c]}function L(t,r,n){const e=w(t/60),o=t/60-e&1?t/60-e:1-t/60-e,s=n*(100-r)/100,u=n*(100-r*o)/100,c=n*(100-(100-o)*r/100)/100,[i,a,l]=5===e?[n,s,u]:4===e?[c,s,n]:3===e?[s,u,n]:2===e?[s,n,c]:1===e?[u,n,s]:[n,c,s];return[i,a,l]}function O(t,r,n){const[e,s,u]=[t,r,n].map((t=>t>4.045?100*z((t+5.5)/105.5,2.4):t/12.92)),[c,i,a]=o([e,s,u],[[.4124564,.3575761,.1804375],[.2126729,.7151522,.072175],[.0193339,.119192,.9503041]]);return[c,i,a]}function A(t,r,n){const[e,s,u]=o([t,r,n],[[3.2404542,-1.5371385,-.4985314],[-.969266,1.8760108,.041556],[.0556434,-.2040259,1.0572252]]),[c,i,a]=[e,s,u].map((t=>t>.31308?1.055*z(t/100,1/2.4)*100-5.5:12.92*t));return[c,i,a]}function B(t,r,n){const e=r*(n<50?n:100-n)/100;return[t,0===e?0:2*e/(n+e)*100,n+e]}function D(t,r,n){const e=(200-r)*n/100,[o,s]=[0===e||200===e?0:r*n/100/(e<=100?e:200-e)*100,5*e/10];return[t,o,s]}function E(t,r,n){const[e,o,s]=[t,100===n?0:100-r/(100-n)*100,100-n];return[e,o,s]}function F(t,r,n){const[e,o,s]=[t,(100-r)*n/100,100-n];return[e,o,s]}function G(t,r,n){const e=(t+16)/116,s=r/500+e,a=e-n/200,[l,h,p]=[z(s,3)>I?z(s,3):(116*s-16)/j,t>j*I?z((t+16)/116,3):t/j,z(a,3)>I?z(a,3):(116*a-16)/j],[x,f,d]=o([l*u,h*c,p*i],[[.9555766,-.0230393,.0631636],[-.0282895,1.0099416,.0210077],[.0122982,-.020483,1.3299098]]);return[x,f,d]}function H(t,r,n){const[e,s,a]=o([t,r,n],[[1.0478112,.0228866,-.050127],[.0295424,.9904844,-.0170491],[-.0092345,.0150436,.7521316]]),[l,h,p]=[e/u,s/c,a/i].map((t=>t>I?b(t):(j*t+16)/116)),[x,f,d]=[116*h-16,500*(l-h),200*(h-p)];return[x,f,d]}function J(t,r,n){const[e,o]=[q(z(r,2)+z(n,2)),p(d(n,r))];return[t,e,o]}function K(t,r,n){const[e,o]=[r*l(n),r*x(n)];return[t,e,o]}function N(t,r){return function(t,r){const n=m(t,r),e=k(t,r);return(n*s+.05*s)/(e*s+.05*s)}(Q(...t),Q(...r))}function Q(t,r,n){return(R(t)*V+R(r)*W+R(n)*X)/s}const R=t=>t<=3.928?t/U:T(t),T=t=>z((t+5.5)/105.5,2.4),U=1292,V=.2126*s,W=.7152*s,X=.0722*s;function Y(t){const[,r,n,e,o,s,u,c,i]=t.match(tt)||[];if(void 0!==s||void 0!==r){return[void 0!==s?parseInt(s,16):parseInt(r+r,16),void 0!==u?parseInt(u,16):parseInt(n+n,16),void 0!==c?parseInt(c,16):parseInt(e+e,16),void 0!==i?parseInt(i,16):void 0!==o?parseInt(o+o,16):255].map((t=>100*t/255))}}function Z(t,r,n){return`#${((1<<24)+(Math.round(255*t/100)<<16)+(Math.round(255*r/100)<<8)+Math.round(255*n/100)).toString(16).slice(1)}`}const tt=/^#?(?:([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])?|([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})?)$/i;function rt(t){const r=nt[String(t).toLowerCase()];return r?r.map((t=>100*t/255)):null}const nt={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],transparent:[0,0,0],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]};function et([t,r,n],[e,o,u]){const c=q(z(r,2)+z(n,2)),i=q(z(o,2)+z(u,2)),h=e-t,p=(t+e)/2,d=z((c+i)/2,7),b=q(d/(d+z(25,7))),g=r+r/2*(1-b),w=o+o/2*(1-b),m=q(g*g+n*n),k=q(w*w+u*u),v=(m+k)/2,M=k-m,I=0===g&&0===n?0:a(n,g)%360,j=0===w&&0===u?0:a(u,w)%360;let P,S,$;0===m||0===k?(P=0,S=0,$=I+j):(P=f(I-j)<=180?j-I:j<=I?j-I+360:j-I-360,S=2*q(m*k)*x(P/2),$=f(I-j)<=180?(I+j)/2:I+j<360?(I+j+360)/2:(I+j-360)/2);const _=1-.17*s*l($-30)+.24*s*l(2*$)+.32*s*l(3*$+6)-.2*s*l(4*$-63)/s/s,C=(p-50)*(p-50),L=1+.015*s*C/q(20+C)/s,O=1+.045*s*v/s,A=1+.015*s*v*_/s,B=60*y(-($-275)/25*(($-275)/25)),D=-2*b*x(B),E=h/(ot*L),F=M/(st*O),G=S/(ut*A);return q(E*E+F*F+G*G+D*F*G)}const ot=1,st=1,ut=1;function ct(t,r,n){const[e,o,s]=O(t,r,n),[u,c,i]=H(e,o,s);return[u,c,i]}function it(t,r,n){const[e,o,s]=G(t,r,n),[u,c,i]=A(e,o,s);return[u,c,i]}function at(t,r,n){const[e,o,s]=O(t,r,n),[u,c,i]=H(e,o,s),[a,l,h]=J(u,c,i);return[a,l,h]}function lt(t,r,n){const[e,o,s]=K(t,r,n),[u,c,i]=G(e,o,s),[a,l,h]=A(u,c,i);return[a,l,h]}function ht(t,r,n){const[e,o,s]=S(t,r,n),[u,c,i]=O(e,o,s),[a,l,h]=H(u,c,i);return[a,l,h]}function pt(t,r,n){const[e,o,s]=_(t,r,n),[u,c,i]=O(e,o,s),[a,l,h]=H(u,c,i);return[a,l,h]}function xt(t,r,n){const[e,o,s]=L(t,r,n),[u,c,i]=O(e,o,s),[a,l,h]=H(u,c,i);return[a,l,h]}function ft(t){return ct(...Y(t))}function dt(t){return ct(...rt(t))}exports.hex2ciede=function(t,r){return et(ft(t),ft(r))},exports.hex2contrast=function(t,r){return N(Y(t),Y(r))},exports.hex2hsl=function(t){return P(...Y(t))},exports.hex2hsv=function(t){return C(...Y(t))},exports.hex2hwb=function(t){return $(...Y(t))},exports.hex2lab=ft,exports.hex2lch=function(t){return at(...Y(t))},exports.hex2rgb=Y,exports.hex2xyz=function(t){return O(...Y(t))},exports.hsl2ciede=function(t,r){return et(ht(...t),ht(...r))},exports.hsl2contrast=function(t,r){return N(S(...t),S(...r))},exports.hsl2hex=function(t,r,n){return Z(...S(t,r,n))},exports.hsl2hsv=B,exports.hsl2hwb=function(t,r,n){const[,e,o]=B(t,r,n),[,s,u]=F(t,e,o);return[t,s,u]},exports.hsl2lab=ht,exports.hsl2lch=function(t,r,n){const[e,o,s]=S(t,r,n),[u,c,i]=O(e,o,s),[a,l,h]=H(u,c,i),[p,x,f]=J(a,l,h);return[p,x,f]},exports.hsl2rgb=S,exports.hsl2xyz=function(t,r,n){const[e,o,s]=S(t,r,n),[u,c,i]=O(e,o,s);return[u,c,i]},exports.hsv2ciede=function(t,r){return et(xt(...t),xt(...r))},exports.hsv2contrast=function(t,r){return N(L(...t),L(...r))},exports.hsv2hex=function(t,r,n){return Z(...S(t,r,n))},exports.hsv2hsl=D,exports.hsv2hwb=F,exports.hsv2lab=xt,exports.hsv2lch=function(t,r,n){const[e,o,s]=L(t,r,n),[u,c,i]=O(e,o,s),[a,l,h]=H(u,c,i),[p,x,f]=J(a,l,h);return[p,x,f]},exports.hsv2rgb=L,exports.hsv2xyz=function(t,r,n){const[e,o,s]=L(t,r,n),[u,c,i]=O(e,o,s);return[u,c,i]},exports.hwb2ciede=function(t,r){return et(pt(...t),pt(...r))},exports.hwb2contrast=function(t,r){return N(_(...t),_(...r))},exports.hwb2hex=function(t,r,n){return Z(..._(t,r,n))},exports.hwb2hsl=function(t,r,n){const[e,o,s]=E(t,r,n),[u,c,i]=D(e,o,s);return[u,c,i]},exports.hwb2hsv=E,exports.hwb2lab=pt,exports.hwb2lch=function(t,r,n){const[e,o,s]=_(t,r,n),[u,c,i]=O(e,o,s),[a,l,h]=H(u,c,i),[p,x,f]=J(a,l,h);return[p,x,f]},exports.hwb2rgb=_,exports.hwb2xyz=function(t,r,n){const[e,o,s]=_(t,r,n),[u,c,i]=O(e,o,s);return[u,c,i]},exports.keyword2ciede=function(t,r){return et(dt(t),dt(r))},exports.keyword2contrast=function(t,r){return N(rt(t),rt(r))},exports.keyword2hex=function(t){return Z(...rt(t))},exports.keyword2hsl=function(t){return P(...rt(t))},exports.keyword2hsv=function(t){return C(...rt(t))},exports.keyword2hwb=function(t){return $(...rt(t))},exports.keyword2lab=dt,exports.keyword2lch=function(t){return at(...rt(t))},exports.keyword2rgb=rt,exports.keyword2xyz=function(t){return O(...rt(t))},exports.lab2ciede=et,exports.lab2contrast=function(t,r){return N(it(...t),it(...r))},exports.lab2hex=function(t,r,n){return Z(...it(t,r,n))},exports.lab2hsl=function(t,r,n,e){const[o,s,u]=G(t,r,n),[c,i,a]=A(o,s,u),[l,h,p]=P(c,i,a,e);return[l,h,p]},exports.lab2hsv=function(t,r,n,e){const[o,s,u]=G(t,r,n),[c,i,a]=A(o,s,u),[l,h,p]=C(c,i,a,e);return[l,h,p]},exports.lab2hwb=function(t,r,n,e){const[o,s,u]=G(t,r,n),[c,i,a]=A(o,s,u),[l,h,p]=$(c,i,a,e);return[l,h,p]},exports.lab2lch=J,exports.lab2rgb=it,exports.lab2xyz=G,exports.lch2ciede=function(t,r){return et(K(...t),K(...r))},exports.lch2contrast=function(t,r){return N(lt(...t),lt(...r))},exports.lch2hex=function(t,r,n){return Z(...lt(t,r,n))},exports.lch2hsl=function(t,r,n,e){const[o,s,u]=K(t,r,n),[c,i,a]=G(o,s,u),[l,h,p]=A(c,i,a),[x,f,d]=P(l,h,p,e);return[x,f,d]},exports.lch2hsv=function(t,r,n,e){const[o,s,u]=K(t,r,n),[c,i,a]=G(o,s,u),[l,h,p]=A(c,i,a),[x,f,d]=C(l,h,p,e);return[x,f,d]},exports.lch2hwb=function(t,r,n,e){const[o,s,u]=K(t,r,n),[c,i,a]=G(o,s,u),[l,h,p]=A(c,i,a),[x,f,d]=$(l,h,p,e);return[x,f,d]},exports.lch2lab=K,exports.lch2rgb=lt,exports.lch2xyz=function(t,r,n){const[e,o,s]=K(t,r,n),[u,c,i]=G(e,o,s);return[u,c,i]},exports.rgb2ciede=function(t,r){return et(ct(...t),ct(...r))},exports.rgb2contrast=N,exports.rgb2hex=Z,exports.rgb2hsl=P,exports.rgb2hsv=C,exports.rgb2hwb=$,exports.rgb2lab=ct,exports.rgb2lch=at,exports.rgb2xyz=O,exports.xyz2ciede=function(t,r){return et(H(...t),H(...r))},exports.xyz2contrast=function(t,r){return N(A(...t),A(...r))},exports.xyz2hex=function(t,r,n){return Z(...A(t,r,n))},exports.xyz2hsl=function(t,r,n,e){const[o,s,u]=A(t,r,n),[c,i,a]=P(o,s,u,e);return[c,i,a]},exports.xyz2hsv=function(t,r,n,e){const[o,s,u]=A(t,r,n),[c,i,a]=C(o,s,u,e);return[c,i,a]},exports.xyz2hwb=function(t,r,n,e){const[o,s,u]=A(t,r,n),[c,i,a]=$(o,s,u,e);return[c,i,a]},exports.xyz2lab=H,exports.xyz2lch=function(t,r,n){const[e,o,s]=H(t,r,n),[u,c,i]=J(e,o,s);return[u,c,i]},exports.xyz2rgb=A;
-//# sourceMappingURL=index.js.map
diff --git a/packages/convert-colors/dist/index.js.map b/packages/convert-colors/dist/index.js.map
deleted file mode 100644
index 0305977..0000000
--- a/packages/convert-colors/dist/index.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"index.js","sources":["../src/util.js","../src/rgb-hsl.js","../src/rgb-hwb.js","../src/rgb-hsv.js","../src/rgb-xyz.js","../src/hsl-hsv.js","../src/hwb-hsv.js","../src/lab-xyz.js","../src/lab-lch.js","../src/rgb-contrast.js","../src/hex-rgb.js","../src/keyword-rgb.js","../src/lab-ciede.js","../src/index.js"],"sourcesContent":["/**\n* @private\n* @func rgb2hue\n* @desc Return a hue angle from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Red (0 - 100)\n* @param {Number} b - Red (0 - 100)\n* @param {Number} f - Hue Fallback (0 - 360)\n* @return {Number} Hue Angle (0 - 360)\n* @example\n* rgb2hue(100, 0, 0)\n* @example\n* rgb2hue(100, 0, 0, 0)\n*/\n\nexport function rgb2hue(rgbR, rgbG, rgbB, fallbackhue = 0) {\n\tconst value     = rgb2value(rgbR, rgbG, rgbB);\n\tconst whiteness = rgb2whiteness(rgbR, rgbG, rgbB);\n\tconst delta     = value - whiteness;\n\n\tif (delta) {\n\t\t// calculate segment\n\t\tconst segment = value === rgbR\n\t\t\t? (rgbG - rgbB) / delta\n\t\t: value === rgbG\n\t\t\t? (rgbB - rgbR) / delta\n\t\t: (rgbR - rgbG) / delta;\n\n\t\t// calculate shift\n\t\tconst shift = value === rgbR\n\t\t\t? segment < 0\n\t\t\t\t? 360 / 60\n\t\t\t\t: 0 / 60\n\t\t: value === rgbG\n\t\t\t? 120 / 60\n\t\t: 240 / 60;\n\n\t\t// calculate hue\n\t\tconst hue = (segment + shift) * 60;\n\n\t\treturn hue;\n\t} else {\n\t\t// otherwise return the Hue Fallback\n\t\treturn fallbackhue;\n\t}\n}\n\n/**\n* @private\n* @func hue2rgb\n* @desc Return an RGB channel from a hue angle\n* @param {Number} t1\n* @param {Number} t2\n* @param {Number} h - Hue Angle (0 - 360)\n* @return {Number} RGB channel (0 - 100)\n* @example\n* hue2rgb(0, 0, 0)\n*/\n\nexport function hue2rgb(t1, t2, hue) {\n\t// calculate the ranged hue\n\tconst rhue = hue < 0 ? hue + 360 : hue > 360 ? hue - 360 : hue;\n\n\t// calculate the rgb value\n\tconst rgb = rhue * 6 < 360\n\t\t? t1 + (t2 - t1) * rhue / 60\n\t: rhue * 2 < 360\n\t\t? t2\n\t: rhue * 3 < 720\n\t\t? t1 + (t2 - t1) * (240 - rhue) / 60\n\t: t1;\n\n\treturn rgb;\n}\n\n/**\n* @private\n* @func luminance2contrast\n* @desc Return the contrast ratio between 2 luminance.\n* @param {Number} l1 - Relative luminance of one color\n* @param {Number} l2 - Relative luminance of another color\n* @return {Number} Contrast ratio between the 2 luminance\n* @example\n* luminance2contrast(0.2126, 0) // => 5.252\n* @link https://www.w3.org/TR/WCAG21/#dfn-contrast-ratio\n*/\n\nexport function luminance2contrast(relativeLuminance1, relativeLuminance2) {\n\t// l1 is the relative luminance of the lighter of the colors\n\tconst l1 = max(relativeLuminance1, relativeLuminance2);\n\n\t// l1 is the relative luminance of the darker of the colors\n\tconst l2 = min(relativeLuminance1, relativeLuminance2);\n\n\treturn (l1 * precision + 0.05 * precision) / (l2 * precision + 0.05 * precision);\n}\n\n\n/* RGB tooling\n/* ========================================================================== */\n\nexport function rgb2value(rgbR, rgbG, rgbB) {\n\tconst value = max(rgbR, rgbG, rgbB);\n\n\treturn value;\n}\n\nexport function rgb2whiteness(rgbR, rgbG, rgbB) {\n\tconst whiteness = min(rgbR, rgbG, rgbB);\n\n\treturn whiteness;\n}\n\n/* Math matrix\n/* ========================================================================== */\n\nexport function matrix(params, mats) {\n\treturn mats.map(\n\t\tmat => mat.reduce(\n\t\t\t// (acc, value, index) => acc + params[index] * value,\n\t\t\t(acc, value, index) => acc + params[index] * precision * (value * precision) / precision / precision,\n\t\t\t0,\n\t\t),\n\t);\n}\n\n/* Precision\n/* ========================================================================== */\n\nexport const precision = 100000000;\n\n/* D50 reference white\n/* ========================================================================== */\n\nexport const [ wd50X, wd50Y, wd50Z ] = [ 96.42, 100, 82.49 ];\n\n/* Math Expressions\n/* ========================================================================== */\n\nexport const atan2d = (y, x) => rad2deg(atan2(y, x)); // arc-tangent in degrees\nexport const cosd = x => cos(deg2rad(x)); // cosine of the specified angle in degrees\nexport const deg2rad = x => x * PI / 180; // degree to radian\nexport const rad2deg = x => x * 180 / PI; // radian to degree\nexport const sind = x => sin(deg2rad(x)); // sine in degrees\n\n/* Math Constants\n/* ========================================================================== */\n\nexport const abs = Math.abs;\nexport const atan2 = Math.atan2;\nexport const cbrt = Math.cbrt;\nexport const cos = Math.cos;\nexport const exp = Math.exp;\nexport const floor = Math.floor;\nexport const max = Math.max;\nexport const min = Math.min;\nexport const PI = Math.PI;\nexport const pow = Math.pow;\nexport const sin = Math.sin;\nexport const sqrt = Math.sqrt;\n\nexport const epsilon = pow(6, 3) / pow(29, 3);\nexport const kappa = pow(29, 3) / pow(3, 3);\n","import { abs, rgb2hue, rgb2value, rgb2whiteness, hue2rgb } from './util';\n\n/**\n* @func rgb2hsl\n* @desc Return a HSL color from an RGB color\n* @param {Number} r - red (0 - 100)\n* @param {Number} g - green (0 - 100)\n* @param {Number} b - blue (0 - 100)\n* @param {Number=} f - Hue Fallback (0 - 360)\n* @return {ArrayHSL}\n* @example\n* rgb2hsl(0, 100, 100) // => [0, 100, 50]\n* @link https://www.w3.org/TR/css-color-3/#hsl-color\n* @link https://www.w3.org/TR/css-color-4/#hsl-to-rgb\n* @link https://www.rapidtables.com/convert/color/rgb-to-hsl.html\n* @link https://www.rapidtables.com/convert/color/hsl-to-rgb.html\n*/\n\nexport function rgb2hsl(rgbR, rgbG, rgbB, fallbackhue) {\n\tconst hslH = rgb2hue(rgbR, rgbG, rgbB, fallbackhue);\n\tconst hslV = rgb2value(rgbR, rgbG, rgbB);\n\tconst hslW = rgb2whiteness(rgbR, rgbG, rgbB);\n\n\t// calculate value/whiteness delta\n\tconst hslD = hslV - hslW;\n\n\t// calculate lightness\n\tconst hslL = (hslV + hslW) / 2;\n\n\t// calculate saturation\n\tconst hslS = hslD === 0 ? 0 : hslD / (100 - abs(2 * hslL - 100)) * 100;\n\n\treturn [ hslH, hslS, hslL ];\n}\n\n/**\n* @func hsl2rgb\n* @desc Return an RGB color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayRGB}\n* @example\n* hsl2rgb(0, 100, 50) // => [0, 100, 100]\n* @link https://www.w3.org/TR/css-color-3/#hsl-color\n* @link https://www.w3.org/TR/css-color-4/#hsl-to-rgb\n* @link https://www.rapidtables.com/convert/color/rgb-to-hsl.html\n* @link https://www.rapidtables.com/convert/color/hsl-to-rgb.html\n*/\n\nexport function hsl2rgb(hslH, hslS, hslL) {\n\t// calcuate t2\n\tconst t2 = hslL <= 50 ? hslL * (hslS + 100) / 100 : hslL + hslS - hslL * hslS / 100;\n\n\t// calcuate t1\n\tconst t1 = hslL * 2 - t2;\n\n\t// calculate rgb\n\tconst [ rgbR, rgbG, rgbB ] = [\n\t\thue2rgb(t1, t2, hslH + 120),\n\t\thue2rgb(t1, t2, hslH),\n\t\thue2rgb(t1, t2, hslH - 120),\n\t];\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n","import { rgb2hue, rgb2whiteness, rgb2value } from './util';\nimport { hsl2rgb } from './rgb-hsl';\n\n/**\n* @func rgb2hwb\n* @desc Return an HWB color from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @param {Number} f - Hue Fallback (0 - 360)\n* @return {ArrayHWB}\n* @example\n* rgb2hwb(100, 0, 0) // => [0, 0, 0]\n* @link https://www.w3.org/TR/css-color-4/#hwb-to-rgb\n* @link http://alvyray.com/Papers/CG/hwb2rgb.htm\n*/\n\nexport function rgb2hwb(rgbR, rgbG, rgbB, fallbackhue) {\n\tconst hwbH = rgb2hue(rgbR, rgbG, rgbB, fallbackhue);\n\tconst hwbW = rgb2whiteness(rgbR, rgbG, rgbB);\n\tconst hwbV = rgb2value(rgbR, rgbG, rgbB);\n\tconst hwbB = 100 - hwbV;\n\n\treturn [hwbH, hwbW, hwbB];\n}\n\n/**\n* @func hwb2rgb\n* @desc Return an RGB color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayRGB}\n* @example\n* hwb2rgb(0, 0, 0) // => [100, 0, 0]\n* @link https://www.w3.org/TR/css-color-4/#hwb-to-rgb\n* @link http://alvyray.com/Papers/CG/hwb2rgb.htm\n*/\n\nexport function hwb2rgb(hwbH, hwbW, hwbB, fallbackhue) {\n\tconst [ rgbR, rgbG, rgbB ] = hsl2rgb(hwbH, 100, 50, fallbackhue).map(\n\t\tv => v * (100 - hwbW - hwbB) / 100 + hwbW,\n\t);\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n","import { floor, rgb2value, rgb2whiteness, rgb2hue } from './util';\n\n/**\n* @func rgb2hsv\n* @desc Return an HSV color from an RGB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @param {Number=} f - Hue Fallback (0 - 360)\n* @return {ArrayHSV}\n* @example\n* rgb2hsv(100, 0, 0) // => [0, 100, 100]\n* @link http://alvyray.com/Papers/CG/hsv2rgb.htm\n*/\n\nexport function rgb2hsv(rgbR, rgbG, rgbB, fallbackhue) {\n\tconst hsvV = rgb2value(rgbR, rgbG, rgbB);\n\tconst hsvW = rgb2whiteness(rgbR, rgbG, rgbB);\n\tconst hsvH = rgb2hue(rgbR, rgbG, rgbB, fallbackhue);\n\n\t// calculate saturation\n\tconst hsvS = hsvV === hsvW ? 0 : (hsvV - hsvW) / hsvV * 100;\n\n\treturn [ hsvH, hsvS, hsvV ];\n}\n\n/**\n* @func hsv2rgb\n* @desc Return an RGB color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayRGB}\n* @example\n* hsv2rgb(100, 0, 0) // => [100, 0, 0]\n* @link http://alvyray.com/Papers/CG/hsv2rgb.htm\n*/\n\nexport function hsv2rgb(hsvH, hsvS, hsvV) {\n\tconst rgbI = floor(hsvH / 60);\n\n\t// calculate rgb parts\n\tconst rgbF = hsvH / 60 - rgbI & 1 ? hsvH / 60 - rgbI : 1 - hsvH / 60 - rgbI;\n\tconst rgbM = hsvV * (100 - hsvS) / 100;\n\tconst rgbN = hsvV * (100 - hsvS * rgbF) / 100;\n\tconst rgbT = hsvV * (100 - (100 - rgbF) * hsvS / 100) / 100;\n\n\tconst [ rgbR, rgbG, rgbB ] = rgbI === 5\n\t\t? [ hsvV, rgbM, rgbN ]\n\t: rgbI === 4\n\t\t? [ rgbT, rgbM, hsvV ]\n\t: rgbI === 3\n\t\t? [ rgbM, rgbN, hsvV ]\n\t: rgbI === 2\n\t\t? [ rgbM, hsvV, rgbT ]\n\t: rgbI === 1\n\t\t? [ rgbN, hsvV, rgbM ]\n\t: [ hsvV, rgbT, rgbM ];\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n","import { matrix, pow } from './util';\n\n/**\n* @func rgb2xyz\n* @desc Return an XYZ color from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @return {ArrayXYZ}\n* @example\n* rgb2xyz(100, 0, 0) // => [41.25, 21.27, 1.93]\n* @link https://www.w3.org/TR/css-color-4/#rgb-to-lab\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n*/\n\nexport function rgb2xyz(rgbR, rgbG, rgbB) {\n\tconst [ lrgbR, lrgbB, lrgbG ] = [ rgbR, rgbG, rgbB ].map(\n\t\tv => v > 4.045 ? pow((v + 5.5) / 105.5, 2.4) * 100 : v / 12.92,\n\t);\n\n\tconst [ xyzX, xyzY, xyzZ ] = matrix([ lrgbR, lrgbB, lrgbG ], [\n\t\t[0.4124564, 0.3575761, 0.1804375],\n\t\t[0.2126729, 0.7151522, 0.0721750],\n\t\t[0.0193339, 0.1191920, 0.9503041],\n\t]);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/**\n* @func xyz2rgb\n* @desc Return an XYZ color from an RGB color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayRGB}\n* @example\n* xyz2rgb(41.25, 21.27, 1.93) // => [100, 0, 0]\n* @link https://www.w3.org/TR/css-color-4/#rgb-to-lab\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n*/\n\nexport function xyz2rgb(xyzX, xyzY, xyzZ) {\n\tconst [ lrgbR, lrgbB, lrgbG ] = matrix([ xyzX, xyzY, xyzZ ], [\n\t\t[ 3.2404542, -1.5371385, -0.4985314],\n\t\t[-0.9692660,  1.8760108,  0.0415560],\n\t\t[ 0.0556434, -0.2040259,  1.0572252],\n\t]);\n\n\tconst [ rgbR, rgbG, rgbB ] = [ lrgbR, lrgbB, lrgbG ].map(\n\t\tv => v > 0.31308 ? 1.055 * pow(v / 100, 1 / 2.4) * 100 - 5.5 : 12.92 * v,\n\t);\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n","/**\n* @func hsl2hsv\n* @desc Return an HSV color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayHSV}\n* @example\n* hsl2hsv(0, 100, 50)\n* @link https://gist.github.com/defims/0ca2ef8832833186ed396a2f8a204117\n*/\n\nexport function hsl2hsv(hslH, hslS, hslL) {\n\tconst hsv1 = hslS * (hslL < 50 ? hslL : 100 - hslL) / 100;\n\tconst hsvS = hsv1 === 0 ? 0 : 2 * hsv1 / (hslL + hsv1) * 100;\n\tconst hsvV = hslL + hsv1;\n\n\treturn [ hslH, hsvS, hsvV ];\n}\n\n/**\n* @func hsv2hsl\n* @desc Return an HSL color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayHSL}\n* @example\n* hsv2hsl(0, 0, 0) // => [0, 100, 50]\n* @link https://gist.github.com/defims/0ca2ef8832833186ed396a2f8a204117\n*/\n\nexport function hsv2hsl(hsvH, hsvS, hsvV) {\n\tconst hslL = (200 - hsvS) * hsvV / 100;\n\n\tconst [ hslS, hslV ] = [\n\t\thslL === 0 || hslL === 200 ? 0 : hsvS * hsvV / 100 / (hslL <= 100 ? hslL : 200 - hslL) * 100,\n\t\thslL * 5 / 10,\n\t];\n\n\treturn [ hsvH, hslS, hslV ];\n}\n","/**\n* @func hwb2hsv\n* @desc Return an HSV color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayHSV}\n* @example\n* hwb2hsv(0, 0, 0) // => [0, 100, 100]\n* @link https://en.wikipedia.org/wiki/HWB_color_model#Converting_to_and_from_HSV\n*/\n\nexport function hwb2hsv(hwbH, hwbW, hwbB) {\n\tconst [ hsvH, hsvS, hsvV ] = [\n\t\thwbH,\n\t\thwbB === 100 ? 0 : 100 - hwbW / (100 - hwbB) * 100,\n\t\t100 - hwbB,\n\t];\n\n\treturn [ hsvH, hsvS, hsvV ];\n}\n\n\n/**\n* @func hsv2hwb\n* @desc Return an HWB color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayHWB}\n* @example\n* hsv2hwb(0, 100, 100) // => [0, 0, 0]\n* @link https://en.wikipedia.org/wiki/HWB_color_model#Converting_to_and_from_HSV\n*/\n\nexport function hsv2hwb(hsvH, hsvS, hsvV) {\n\tconst [ hwbH, hwbW, hwbB ] = [\n\t\thsvH,\n\t\t(100 - hsvS) * hsvV / 100,\n\t\t100 - hsvV,\n\t];\n\n\treturn [ hwbH, hwbW, hwbB ];\n}\n","import { cbrt, epsilon, kappa, pow, wd50X, wd50Y, wd50Z, matrix } from './util';\n\n/**\n* @func lab2xyz\n* @desc Return an XYZ color from a LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {ArrayXYZ}\n* @example\n* lab2xyz(54.29, 80.82, 69.88) // => 41.25, 21.27, 1.93\n* @link https://www.w3.org/TR/css-color-4/#rgb-to-lab\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n* @link https://www.easyrgb.com/en/math.php\n*/\n\nexport function lab2xyz(labL, labA, labB) {\n\t// compute f, starting with the luminance-related term\n\tconst f2 = (labL + 16) / 116;\n\tconst f1 = labA / 500 + f2;\n\tconst f3 = f2 - labB / 200;\n\n\t// compute pre-scaled XYZ\n\tconst [ initX, initY, initZ ] = [\n\t\tpow(f1, 3) > epsilon   ? pow(f1, 3)                : (116 * f1 - 16) / kappa,\n\t\tlabL > kappa * epsilon ? pow((labL + 16) / 116, 3) : labL / kappa,\n\t\tpow(f3, 3) > epsilon   ? pow(f3, 3)                : (116 * f3 - 16) / kappa,\n\t];\n\n\tconst [ xyzX, xyzY, xyzZ ] = matrix(\n\t\t// compute XYZ by scaling pre-scaled XYZ by reference white\n\t\t[ initX * wd50X, initY * wd50Y, initZ * wd50Z ],\n\t\t// calculate D65 XYZ from D50 XYZ\n\t\t[\n\t\t\t[ 0.9555766, -0.0230393,  0.0631636],\n\t\t\t[-0.0282895,  1.0099416,  0.0210077],\n\t\t\t[ 0.0122982, -0.0204830,  1.3299098],\n\t\t],\n\t);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/**\n* @func xyz2lab\n* @desc Return an LAB color from a XYZ color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayLAB}\n* @example\n* xyz2lab(41.25, 21.27, 1.93) // => [54.29, 80.82, 69.88]\n* @link https://www.w3.org/TR/css-color-4/#rgb-to-lab\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n* @link https://www.easyrgb.com/en/math.php\n*/\n\nexport function xyz2lab(xyzX, xyzY, xyzZ) {\n\t// calculate D50 XYZ from D65 XYZ\n\tconst [ d50X, d50Y, d50Z ] = matrix([ xyzX, xyzY, xyzZ ], [\n\t\t[ 1.0478112,  0.0228866, -0.0501270],\n\t\t[ 0.0295424,  0.9904844, -0.0170491],\n\t\t[-0.0092345,  0.0150436,  0.7521316],\n\t]);\n\n\t// calculate f\n\tconst [ f1, f2, f3 ] = [\n\t\td50X / wd50X,\n\t\td50Y / wd50Y,\n\t\td50Z / wd50Z,\n\t].map(\n\t\tvalue => value > epsilon ? cbrt(value) : (kappa * value + 16) / 116,\n\t);\n\n\tconst [ labL, labA, labB ] = [\n\t\t116 * f2 - 16,\n\t\t500 * (f1 - f2),\n\t\t200 * (f2 - f3),\n\t];\n\n\treturn [ labL, labA, labB ];\n}\n","import { atan2, cosd, pow, rad2deg, sind, sqrt } from './util';\n\n/**\n* @func lab2lch\n* @desc Return an LCH color from a LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {ArrayLAB}\n* @example\n* lab2lch(54.29, 80.82, 69.88) // => [54.29, 106.84, 40.85]\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n* @link https://www.w3.org/TR/css-color-4/#lch-to-lab\n*/\n\nexport function lab2lch(labL, labA, labB) {\n\tconst [ lchC, lchH ] = [\n\t\tsqrt(pow(labA, 2) + pow(labB, 2)), // convert to chroma\n\t\trad2deg(atan2(labB, labA)), // convert to hue, in degrees\n\t];\n\n\treturn [ labL, lchC, lchH ];\n}\n\n/**\n* @func lch2lab\n* @desc Return a LAB color from an LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {ArrayLCH}\n* @example\n* lch2lab(54.29, 106.84, 40.85) // => [54.29, 80.82, 69.88]\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n* @link https://www.w3.org/TR/css-color-4/#lch-to-lab\n*/\n\nexport function lch2lab(lchL, lchC, lchH) {\n\t// convert to Lab a and b from the polar form\n\tconst [ labA, labB ] = [\n\t\tlchC * cosd(lchH),\n\t\tlchC * sind(lchH),\n\t];\n\n\treturn [ lchL, labA, labB ];\n}\n","import { luminance2contrast, pow, precision } from './util';\n\n/**\n* @func rgb2contrast\n* @desc Return the contrast ratio of of RGB colors\n* @param {ArrayRGB} rgb1 - RGB Color Array\n* @param {ArrayRGB} rgb2 - RGB Color Array\n* @return {NumberContrast}\n* @example\n* rgb2contrast([100, 0, 0], [0, 0, 0]) // => 5.252\n* @link https://www.w3.org/TR/WCAG21/#dfn-contrast-ratio\n*/\n\nexport default function rgb2contrast(rgb1, rgb2) {\n\tconst luminance1 = rgb2luminance(...rgb1);\n\tconst luminance2 = rgb2luminance(...rgb2);\n\n\treturn luminance2contrast(luminance1, luminance2);\n}\n\n/**\n* @private\n* @func rgb2luminance\n* @desc Return the relative brightness of RGB\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @return {Number} Relative luminance of the color\n* @example\n* rgb2luminance(100, 0, 0) // => 0.2126\n* @link https://www.w3.org/TR/WCAG21/#dfn-relative-luminance\n*/\n\nexport function rgb2luminance(rgbR, rgbG, rgbB) {\n\treturn (adjustChannel(rgbR) * coefficientR + adjustChannel(rgbG) * coefficientG + adjustChannel(rgbB) * coefficientB) / precision;\n}\n\n// low-gamma adjust coefficients\nconst adjustChannel = x => x <= 3.928 ? x / lowc : adjustGamma(x);\nconst adjustGamma = x => pow((x + 5.5) / 105.5, 2.4);\nconst lowc = 1292;\n\n// red/green/blue coefficients\nconst coefficientR = 0.2126 * precision;\nconst coefficientG = 0.7152 * precision;\nconst coefficientB = 0.0722 * precision;\n","/**\n* @func hex2rgb\n* @desc Return an RGBA color from a Hex color.\n* @param {StringHex} hex\n* @return {ArrayRGBA}\n* @example\n* hex2rgb(\"#f00\") // => [100, 0, 0, 100]\n* hex2rgb(\"#f00f\") // => [100, 0, 0, 100]\n* @example\n* hex2rgb(\"#ff0000\") // => [100, 0, 0, 100]\n* hex2rgb(\"#ff0000ff\") // => [100, 0, 0, 100]\n*/\n\nexport function hex2rgb(hex) {\n\t// #<hex-color>{3,4,6,8}\n\tconst [, r, g, b, a, rr, gg, bb, aa] = hex.match(hexColorMatch) || [];\n\n\tif (rr !== undefined || r !== undefined) {\n\t\tconst red   = rr !== undefined ? parseInt(rr, 16) : parseInt(r + r, 16);\n\t\tconst green = gg !== undefined ? parseInt(gg, 16) : parseInt(g + g, 16);\n\t\tconst blue  = bb !== undefined ? parseInt(bb, 16) : parseInt(b + b, 16);\n\t\tconst alpha = aa !== undefined ? parseInt(aa, 16) : a !== undefined ? parseInt(a + a, 16) : 255;\n\n\t\treturn [red, green, blue, alpha].map(c => c * 100 / 255);\n\t}\n\n\treturn undefined;\n}\n\n/**\n* @func rgb2hex\n* @desc Return a HEX color from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @return {StringHex}\n* @example\n* rgb2hex(100, 0, 0) // => \"#ff0000\"\n*/\n\nexport function rgb2hex(rgbR, rgbG, rgbB) {\n\treturn `#${((1 << 24) + (Math.round(rgbR * 255 / 100) << 16) + (Math.round(rgbG * 255 / 100) << 8) + Math.round(rgbB * 255 / 100)).toString(16).slice(1)}`;\n}\n\nconst hexColorMatch = /^#?(?:([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])?|([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})?)$/i;\n","/**\n* @func keyword2rgb\n* @desc Return an RGB color from a CSS keyword color\n* @param {StringKeyword} keyword\n* @return {ArrayRGB}\n* @example\n* keyword2rgb('red') // => [100, 0, 0]\n*/\n\nexport default function keyword2rgb(keyword) {\n\tconst rgb255 = keywords[String(keyword).toLowerCase()];\n\n\treturn rgb255 ? rgb255.map(x => x * 100 / 255) : null;\n}\n\nconst keywords = {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\ttransparent: [0, 0, 0],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50],\n};\n","import { abs, atan2d, cosd, exp, pow, sind, sqrt, precision } from './util';\n\n/* Return\n/* ========================================================================== */\n\n/**\n* @func lab2ciede\n* @desc Return the CIEDE2000 difference between 2 CIE LAB colors (International Commission on Illumination, Delta E).\n* @param {Array} lab1 - CIE LAB color\n* @param {Number} lab1.0 - Lightness\n* @param {Number} lab1.1 - Red/Green Coordinate\n* @param {Number} lab1.2 - Yellow/Blue Coordinate\n* @param {Array} lab2 - CIE LAB color\n* @param {Number} lab2.0 - Lightness\n* @param {Number} lab2.1 - Red/Green Coordinate\n* @param {Number} lab2.2 - Yellow/Blue Coordinate\n* @return {NumberCIEDE}\n* @example\n* lab2ciede([97.14, -21.56, 94.48], [0, 0, 0]) // => 100\n* @link https://en.wikipedia.org/wiki/Color_difference#CIEDE2000\n*/\n\nexport default function lab2ciede([L1, a1, b1], [L2, a2, b2]) {\n\tconst c1 = sqrt(pow(a1, 2) + pow(b1, 2));\n\tconst c2 = sqrt(pow(a2, 2) + pow(b2, 2));\n\n\tconst deltaLPrime = L2 - L1;\n\n\tconst lBar = (L1 + L2) / 2;\n\tconst cBar = (c1 + c2) / 2;\n\n\tconst cBarPow7 = pow(cBar, 7);\n\tconst cCoeff = sqrt(cBarPow7 / (cBarPow7 + pow(25, 7)));\n\tconst a1Prime = a1 + a1 / 2 * (1 - cCoeff);\n\tconst a2Prime = a2 + a2 / 2 * (1 - cCoeff);\n\n\tconst c1Prime = sqrt(a1Prime * a1Prime + b1 * b1);\n\tconst c2Prime = sqrt(a2Prime * a2Prime + b2 * b2);\n\tconst cBarPrime = (c1Prime + c2Prime) / 2;\n\tconst deltaCPrime = c2Prime - c1Prime;\n\n\tconst h1Prime = a1Prime === 0 && b1 === 0 ? 0 : atan2d(b1, a1Prime) % 360;\n\tconst h2Prime = a2Prime === 0 && b2 === 0 ? 0 : atan2d(b2, a2Prime) % 360;\n\n\tlet deltaSmallHPrime;\n\tlet deltaBigHPrime;\n\tlet hBarPrime;\n\n\tif (c1Prime === 0 || c2Prime === 0) {\n\t\tdeltaSmallHPrime = 0;\n\t\tdeltaBigHPrime = 0;\n\t\thBarPrime = h1Prime + h2Prime;\n\t} else {\n\t\tdeltaSmallHPrime = abs(h1Prime - h2Prime) <= 180\n\t\t\t? h2Prime - h1Prime\n\t\t: h2Prime <= h1Prime\n\t\t\t? h2Prime - h1Prime + 360\n\t\t: h2Prime - h1Prime - 360;\n\n\t\tdeltaBigHPrime = 2 * sqrt(c1Prime * c2Prime) * sind(deltaSmallHPrime / 2);\n\n\t\thBarPrime = abs(h1Prime - h2Prime) <= 180\n\t\t\t? (h1Prime + h2Prime) / 2\n\t\t: h1Prime + h2Prime < 360\n\t\t\t? (h1Prime + h2Prime + 360) / 2\n\t\t: (h1Prime + h2Prime - 360) / 2;\n\t}\n\n\tconst T = 1 - 0.17 * precision * cosd(hBarPrime - 30) + 0.24 * precision * cosd(2 * hBarPrime) + 0.32 * precision * cosd(3 * hBarPrime + 6) - 0.2 * precision * cosd(4 * hBarPrime - 63) / precision / precision;\n\n\tconst slCoeff = (lBar - 50) * (lBar - 50);\n\tconst sl = 1 + 0.015 * precision * slCoeff / sqrt(20 + slCoeff) / precision;\n\tconst sc = 1 + 0.045 * precision * cBarPrime / precision;\n\tconst sh = 1 + 0.015 * precision * cBarPrime * T / precision;\n\n\tconst RtCoeff = 60 * exp(-((hBarPrime - 275) / 25) * ((hBarPrime - 275) / 25));\n\tconst Rt = -2 * cCoeff * sind(RtCoeff);\n\n\tconst term1 = deltaLPrime / (kl * sl);\n\tconst term2 = deltaCPrime / (kc * sc);\n\tconst term3 = deltaBigHPrime / (kh * sh);\n\tconst term4 = Rt * term2 * term3;\n\n\treturn sqrt(term1 * term1 + term2 * term2 + term3 * term3 + term4);\n}\n\n// weight factors\nconst kl = 1;\nconst kc = 1;\nconst kh = 1;\n","import { rgb2hsl, hsl2rgb } from './rgb-hsl';\nimport { rgb2hwb, hwb2rgb } from './rgb-hwb';\nimport { rgb2hsv, hsv2rgb } from './rgb-hsv';\nimport { rgb2xyz, xyz2rgb } from './rgb-xyz';\nimport { hsl2hsv, hsv2hsl } from './hsl-hsv';\nimport { hwb2hsv, hsv2hwb } from './hwb-hsv';\nimport { lab2xyz, xyz2lab } from './lab-xyz';\nimport { lab2lch, lch2lab } from './lab-lch';\nimport rgb2contrast from './rgb-contrast';\nimport { hex2rgb, rgb2hex } from './hex-rgb';\nimport keyword2rgb from './keyword-rgb';\nimport lab2ciede from './lab-ciede';\n\n/* Convert between RGB and Lab\n/* ========================================================================== */\n\n/**\n* @func rgb2lab\n* @desc Return a CIE LAB color from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @return {ArrayLAB}\n* @example\n* rgb2lab(100, 0, 0) // => [54.29, 80.82, 69.88]\n*/\n\nfunction rgb2lab(rgbR, rgbG, rgbB) {\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\n\treturn [ labL, labA, labB ];\n}\n\n/**\n* @func lab2rgb\n* @desc Return an RGB color from a CIE LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {ArrayRGBA}\n* @example\n* lab2rgb(54.29, 80.82, 69.88) // => [100, 0, 0]\n*/\n\nfunction lab2rgb(labL, labA, labB) {\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n\n/* Convert between RGB and LCH\n/* ========================================================================== */\n\n/**\n* @func rgb2lch\n* @desc Return a CIE LAB color from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @return {ArrayLCH}\n* @example\n* rgb2lch(100, 0, 0) // => [54.29, 106.84, 40.85]\n*/\n\nfunction rgb2lch(rgbR, rgbG, rgbB) {\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\tconst [ lchL, lchC, lchH ] = lab2lch(labL, labA, labB);\n\n\treturn [ lchL, lchC, lchH ];\n}\n\n/**\n* @func lch2rgb\n* @desc Return an RGB color from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue\n* @return {ArrayRGBA}\n* @example\n* lch2rgb(54.29, 106.84, 40.85) // => [100, 0, 0]\n*/\n\nfunction lch2rgb(lchL, lchC, lchH) {\n\tconst [ labL, labA, labB ] = lch2lab(lchL, lchC, lchH);\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n\n/* Convert between HSL and HWB\n/* ========================================================================== */\n\n/**\n* @func hwb2hsl\n* @desc Return an HSV color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayHSL}\n* @example\n* hwb2hsl(0, 0, 0) // => [0, 0, 100]\n*/\n\nfunction hwb2hsl(hwbH, hwbW, hwbB) {\n\tconst [ hsvH, hsvS, hsvV ] = hwb2hsv(hwbH, hwbW, hwbB);\n\tconst [ hslH, hslS, hslL ] = hsv2hsl(hsvH, hsvS, hsvV);\n\n\treturn [ hslH, hslS, hslL ];\n}\n\n/**\n* @func hsl2hwb\n* @desc Return an HWB color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayHWB}\n* @example\n* hsl2hwb(0, 0, 100) // => [0, 0, 0]\n*/\n\nfunction hsl2hwb(hslH, hslS, hslL) {\n\tconst [ , hsvS, hsvV ] = hsl2hsv(hslH, hslS, hslL);\n\tconst [ , hwbW, hwbB ] = hsv2hwb(hslH, hsvS, hsvV);\n\n\treturn [ hslH, hwbW, hwbB ];\n}\n\n/* Convert between HSL and Lab\n/* ========================================================================== */\n\n/**\n* @func hsl2lab\n* @desc Return a CIE LAB color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayLAB}\n* @example\n* hsl2lab(0, 100, 50) // => [54.29, 80.82, 69.88]\n*/\n\nfunction hsl2lab(hslH, hslS, hslL) {\n\tconst [ rgbR, rgbG, rgbB ] = hsl2rgb(hslH, hslS, hslL);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\n\treturn [ labL, labA, labB ];\n}\n\n/**\n* @func lab2hsl\n* @desc Return a HSL color from a CIE LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @param {Number=} f - Hue Fallback (0 - 360)\n* @return {ArrayHSL}\n* @example\n* lab2hsl(54.29, 80.82, 69.88) // => [0, 100, 50]\n*/\n\nfunction lab2hsl(labL, labA, labB, fallbackhue) {\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hslH, hslS, hslL ] = rgb2hsl(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hslH, hslS, hslL ];\n}\n\n/* Convert between HSL and LCH\n/* ========================================================================== */\n\n/**\n* @func hsl2lch\n* @desc Return a CIE LCH color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayLCH}\n* @example\n* hsl2lch(0, 100, 50) // => [54.29, 106.84, 40.85]\n*/\n\nfunction hsl2lch(hslH, hslS, hslL) {\n\tconst [ rgbR, rgbG, rgbB ] = hsl2rgb(hslH, hslS, hslL);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\tconst [ lchL, lchC, lchH ] = lab2lch(labL, labA, labB);\n\n\treturn [ lchL, lchC, lchH ];\n}\n\n/**\n* @func lch2hsl\n* @desc Return an HSL from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {ArrayLCH}\n* @example\n* lch2hsl(54.29, 106.84, 40.85) // => [0, 100, 50]\n*/\n\nfunction lch2hsl(lchL, lchC, lchH, fallbackhue) {\n\tconst [ labL, labA, labB ] = lch2lab(lchL, lchC, lchH);\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hslH, hslS, hslL ] = rgb2hsl(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hslH, hslS, hslL ];\n}\n\n/* Convert between HSL and XYZ\n/* ========================================================================== */\n\n/**\n* @func hsl2xyz\n* @desc Return an XYZ color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayXYZ}\n* @example\n* hsl2xyz(0, 100, 50) // => [41.25, 21.27, 1.93]\n*/\n\nfunction hsl2xyz(hslH, hslS, hslL) {\n\tconst [ rgbR, rgbG, rgbB ] = hsl2rgb(hslH, hslS, hslL);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/**\n* @func xyz2hsl\n* @desc Return an HSL color from an XYZ color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayHSL}\n* @example\n* xyz2hsl(0, 100, 50) // => [41.25, 21.27, 1.93]\n*/\n\nfunction xyz2hsl(xyzX, xyzY, xyzZ, fallbackhue) {\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hslH, hslS, hslL ] = rgb2hsl(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hslH, hslS, hslL ];\n}\n\n/* Convert between HWB and Lab\n/* ========================================================================== */\n\n/**\n* @func hwb2lab\n* @desc Return a CIE LAB color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayLAB}\n* @example\n* hwb2lab(0, 0, 0) // => [54.29, 80.82, 69.88]\n*/\n\nfunction hwb2lab(hwbH, hwbW, hwbB) {\n\tconst [ rgbR, rgbG, rgbB ] = hwb2rgb(hwbH, hwbW, hwbB);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\n\treturn [ labL, labA, labB ];\n}\n\n/**\n* @func lab2hwb\n* @desc Return an HWB color from a CIE LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {ArrayHWB}\n* @example\n* lab2hwb(54.29, 80.82, 69.88) // => [0, 0, 0]\n*/\n\nfunction lab2hwb(labL, labA, labB, fallbackhue) {\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hwbH, hwbW, hwbB ] = rgb2hwb(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hwbH, hwbW, hwbB ];\n}\n\n/* Convert between HWB and LCH\n/* ========================================================================== */\n\n/**\n* @func hwb2lch\n* @desc Return a CIE LCH color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayLCH}\n* @example\n* hwb2lch(0, 0, 0) // => [54.29, 106.84, 40.85]\n*/\n\nfunction hwb2lch(hwbH, hwbW, hwbB) {\n\tconst [ rgbR, rgbG, rgbB ] = hwb2rgb(hwbH, hwbW, hwbB);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\tconst [ lchL, lchC, lchH ] = lab2lch(labL, labA, labB);\n\n\treturn [ lchL, lchC, lchH ];\n}\n\n/**\n* @func lch2hwb\n* @desc Return an HWB color from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {ArrayLCH}\n* @example\n* lch2hwb(54.29, 106.84, 40.85) // => [0, 0, 0]\n*/\n\nfunction lch2hwb(lchL, lchC, lchH, fallbackhue) {\n\tconst [ labL, labA, labB ] = lch2lab(lchL, lchC, lchH);\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hwbH, hwbW, hwbB ] = rgb2hwb(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hwbH, hwbW, hwbB ];\n}\n\n/* Convert between HWB and XYZ\n/* ========================================================================== */\n\n/**\n* @func hwb2xyz\n* @desc Return an XYZ color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayXYZ}\n* @example\n* hwb2xyz(0, 0, 0) // => [41.25, 21.27, 1.93]\n*/\n\nfunction hwb2xyz(hwbH, hwbW, hwbB) {\n\tconst [ rgbR, rgbG, rgbB ] = hwb2rgb(hwbH, hwbW, hwbB);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/**\n* @func xyz2hwb\n* @desc Return an HWB color from an XYZ color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayXYZ}\n* @example\n* xyz2hwb(0, 0, 0) // => [41.25, 21.27, 1.93]\n*/\n\nfunction xyz2hwb(xyzX, xyzY, xyzZ, fallbackhue) {\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hwbH, hwbW, hwbB ] = rgb2hwb(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hwbH, hwbW, hwbB ];\n}\n\n/* Convert between HSV and Lab\n/* ========================================================================== */\n\n/**\n* @func hsv2lab\n* @desc Return a CIE LAB color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayLAB}\n* @example\n* hsv2lab(0, 100, 100) // => [54.29, 80.82, 69.88]\n*/\n\nfunction hsv2lab(hsvH, hsvS, hsvV) {\n\tconst [ rgbR, rgbG, rgbB ] = hsv2rgb(hsvH, hsvS, hsvV);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\n\treturn [ labL, labA, labB ];\n}\n\n/**\n* @func lab2hsv\n* @desc Return an HSV color from a CIE LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {ArrayHSV}\n* @example\n* lab2hsv(54.29, 80.82, 69.88) // => [0, 100, 100]\n*/\n\nfunction lab2hsv(labL, labA, labB, fallbackhue) {\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hsvH, hsvS, hsvV ] = rgb2hsv(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hsvH, hsvS, hsvV ];\n}\n\n/* Convert between HSV and LCH\n/* ========================================================================== */\n\n/**\n* @func hsv2lch\n* @desc Return a CIE LCH color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayLCH}\n* @example\n* hsv2lch(0, 100, 100) // => [54.29, 106.84, 40.85]\n*/\n\nfunction hsv2lch(hsvH, hsvS, hsvV) {\n\tconst [ rgbR, rgbG, rgbB ] = hsv2rgb(hsvH, hsvS, hsvV);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\tconst [ lchL, lchC, lchH ] = lab2lch(labL, labA, labB);\n\n\treturn [ lchL, lchC, lchH ];\n}\n\n/**\n* @func lch2hsv\n* @desc Return an HSV color from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {ArrayHSV}\n* @example\n* lch2hsv(54.29, 106.84, 40.85) // => [0, 100, 100]\n*/\n\nfunction lch2hsv(lchL, lchC, lchH, fallbackhue) {\n\tconst [ labL, labA, labB ] = lch2lab(lchL, lchC, lchH);\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hsvH, hsvS, hsvV ] = rgb2hsv(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hsvH, hsvS, hsvV ];\n}\n\n/* Convert between HSV and XYZ\n/* ========================================================================== */\n\n/**\n* @func hsv2xyz\n* @desc Return an XYZ color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayXYZ}\n* @example\n* hsv2xyz(0, 100, 100) // => [41.25, 21.27, 1.93]\n*/\n\nfunction hsv2xyz(hsvH, hsvS, hsvV) {\n\tconst [ rgbR, rgbG, rgbB ] = hsv2rgb(hsvH, hsvS, hsvV);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/**\n* @func xyz2hsv\n* @desc Return an XYZ color from an HSV color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayHSV}\n* @example\n* xyz2hsv(41.25, 21.27, 1.93) // => [0, 100, 100]\n*/\n\nfunction xyz2hsv(xyzX, xyzY, xyzZ, fallbackhue) {\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hsvH, hsvS, hsvV ] = rgb2hsv(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hsvH, hsvS, hsvV ];\n}\n\n/* Convert between XYZ and LCH\n/* ========================================================================== */\n\n/**\n* @func xyz2lch\n* @desc Return a CIE LCH color from an XYZ color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayLCH}\n* @example\n* xyz2lch(41.25, 21.27, 1.93) // => [54.29, 106.84, 40.85]\n*/\n\nfunction xyz2lch(xyzX, xyzY, xyzZ) {\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\tconst [ lchL, lchC, lchH ] = lab2lch(labL, labA, labB);\n\n\treturn [ lchL, lchC, lchH ];\n}\n\n/**\n* @func lch2xyz\n* @desc Return an XYZ color from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {ArrayXYZ}\n* @example\n* lch2xyz(54.29, 106.84, 40.85) // => [41.25, 21.27, 1.93]\n*/\n\nfunction lch2xyz(lchL, lchC, lchH) {\n\tconst [ labL, labA, labB ] = lch2lab(lchL, lchC, lchH);\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/* Hex input conversions\n/* ========================================================================== */\n\n/**\n* @func hex2hsl\n* @desc Return an HSL color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayHSL}\n* @example\n* hex2hsl(\"#f00\") // => [0, 100, 50]\n*/\n\nfunction hex2hsl(hex) {\n\treturn rgb2hsl(...hex2rgb(hex));\n}\n\n/**\n* @func hex2hsv\n* @desc Return an HSL color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayHSV}\n* @example\n* hex2hsv(\"#f00\") // => [0, 100, 100]\n*/\n\nfunction hex2hsv(hex) {\n\treturn rgb2hsv(...hex2rgb(hex));\n}\n\n/**\n* @func hex2hwb\n* @desc Return an HWB color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayHWB}\n* @example\n* hex2hwb(\"#f00\") // => [0, 0, 0]\n*/\n\nfunction hex2hwb(hex) {\n\treturn rgb2hwb(...hex2rgb(hex));\n}\n\n/**\n* @func hex2lab\n* @desc Return a CIE LAB color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayLAB}\n* @example\n* hex2lab(\"#f00\") // => [54.29, 80.82, 69.88]\n*/\n\nfunction hex2lab(hex) {\n\treturn rgb2lab(...hex2rgb(hex));\n}\n\n/**\n* @func hex2lch\n* @desc Return a CIE LCH color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayLCH}\n* @example\n* hex2lch(\"#f00\") // => [54.29, 106.84, 40.85]\n*/\n\nfunction hex2lch(hex) {\n\treturn rgb2lch(...hex2rgb(hex));\n}\n\n/**\n* @func hex2xyz\n* @desc Return an XYZ color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayXYZ}\n* @example\n* hex2xyz(\"#f00\") // => [41.25, 21.27, 1.93]\n*/\n\nfunction hex2xyz(hex) {\n\treturn rgb2xyz(...hex2rgb(hex));\n}\n\n/* Hex output conversions\n/* ========================================================================== */\n\n/**\n* @func hsl2hex\n* @desc Return a Hex color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {StringHex}\n* @example\n* hsl2hex(0, 100, 50) // => \"#f00\"\n*/\n\nfunction hsl2hex(hslH, hslS, hslL) {\n\treturn rgb2hex(...hsl2rgb(hslH, hslS, hslL));\n}\n\n/**\n* @func hsv2hex\n* @desc Return a Hex color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {StringHex}\n* @example\n* hsv2hex(0, 100, 100) // => \"#f00\"\n*/\n\nfunction hsv2hex(hsvH, hsvS, hsvV) {\n\treturn rgb2hex(...hsl2rgb(hsvH, hsvS, hsvV));\n}\n\n/**\n* @func hwb2hex\n* @desc Return a Hex color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {StringHex}\n* @example\n* hwb2hex(0, 0, 0) // => \"#f00\"\n*/\n\nfunction hwb2hex(hwbH, hwbW, hwbB) {\n\treturn rgb2hex(...hwb2rgb(hwbH, hwbW, hwbB));\n}\n\n/**\n* @func lch2hex\n* @desc Return a Hex color from a CIE LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {StringHex}\n* @example\n* lch2hex(54.29, 80.82, 69.88) // => \"#f00\"\n*/\n\nfunction lab2hex(labL, labA, labB) {\n\treturn rgb2hex(...lab2rgb(labL, labA, labB));\n}\n\n/**\n* @func lch2hex\n* @desc Return a Hex color from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {StringHex}\n* @example\n* lch2hex(54.29, 106.84, 40.85) // => \"#f00\"\n*/\n\nfunction lch2hex(lchL, lchC, lchH) {\n\treturn rgb2hex(...lch2rgb(lchL, lchC, lchH));\n}\n\n/**\n* @func xyz2hex\n* @desc Return a Hex color from an XYZ color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {StringHex}\n* @example\n* xyz2hex(41.25, 21.27, 1.93) // => \"#f00\"\n*/\n\nfunction xyz2hex(xyzX, xyzY, xyzZ) {\n\treturn rgb2hex(...xyz2rgb(xyzX, xyzY, xyzZ));\n}\n\n/* CIEDE conversions\n/* ========================================================================== */\n\n/**\n* @func hex2ciede\n* @desc Return the CIEDE2000 difference between 2 HEX colors\n* @param {StringHex} hex1\n* @param {StringHex} hex2\n* @return {NumberCIEDE}\n* @example\n* hex2ciede('#fff', '#000') // => 100\n*/\n\nfunction hex2ciede(hex1, hex2) {\n\treturn lab2ciede(hex2lab(hex1), hex2lab(hex2));\n}\n\n/**\n* @func hsl2ciede\n* @desc Return the CIEDE2000 difference between 2 HSL colors\n* @param {ArrayHSL} hsl1\n* @param {ArrayHSL} hsl2\n* @return {NumberCIEDE}\n* @example\n* hsl2ciede([0, 0, 100], [0, 0, 0]) // => 100\n*/\n\nfunction hsl2ciede(hsl1, hsl2) {\n\treturn lab2ciede(hsl2lab(...hsl1), hsl2lab(...hsl2));\n}\n\n/**\n* @func hsv2ciede\n* @desc Return the CIEDE2000 difference between 2 HSV colors\n* @param {ArrayHSV} hsl1\n* @param {ArrayHSV} hsl2\n* @return {NumberCIEDE}.\n* @example\n* hsv2ciede([0, 0, 40], [0, 0, 0]) // => 100\n*/\n\nfunction hsv2ciede(hsv1, hsv2) {\n\treturn lab2ciede(hsv2lab(...hsv1), hsv2lab(...hsv2));\n}\n\n/**\n* @func hwb2ciede\n* @desc Return the CIEDE2000 difference between 2 HWB colors\n* @param {ArrayHWB} hwb1\n* @param {ArrayHWB} hwb2\n* @return {NumberCIEDE}.\n* @example\n* hwb2ciede([0, 0, 40], [0, 0, 0]) // => 100\n*/\n\nfunction hwb2ciede(hwb1, hwb2) {\n\treturn lab2ciede(hwb2lab(...hwb1), hwb2lab(...hwb2));\n}\n\n/**\n* @func keyword2ciede\n* @desc Return the CIEDE2000 difference between 2 keyword colors\n* @param {StringKeyword} keyword1\n* @param {StringKeyword} keyword2\n* @return {NumberCIEDE}.\n* @example\n* keyword2ciede('white', 'black') // => 100\n*/\n\nfunction keyword2ciede(keyword1, keyword2) {\n\treturn lab2ciede(keyword2lab(keyword1), keyword2lab(keyword2));\n}\n\n/**\n* @func lch2ciede\n* @desc Return the CIEDE2000 difference between 2 LCH colors\n* @param {ArrayLCH} lch1\n* @param {ArrayLCH} lch2\n* @return {NumberCIEDE}.\n* @example\n* lch2ciede([100, 0.03, -82.2], [0, 0, 0]) // => 100\n*/\n\nfunction lch2ciede(lch1, lch2) {\n\treturn lab2ciede(lch2lab(...lch1), lch2lab(...lch2));\n}\n\n/**\n* @func rgb2ciede\n* @desc Return the CIEDE2000 difference between 2 RGB colors\n* @param {ArrayRGB} rgb1\n* @param {ArrayRGB} rgb2\n* @return {NumberCIEDE}.\n* @example\n* rgb2ciede([100, 100, 100], [0, 0, 0]) // => 100\n*/\n\nfunction rgb2ciede(rgb1, rgb2) {\n\treturn lab2ciede(rgb2lab(...rgb1), rgb2lab(...rgb2));\n}\n\n/**\n* @func xyz2ciede\n* @desc Return the CIEDE2000 difference between 2 XYZ colors\n* @param {ArrayXYZ} xyz1\n* @param {ArrayXYZ} xyz2\n* @return {NumberCIEDE}.\n* @example\n* xyz2ciede([95.05, 100, 108.88], [0, 0, 0]) // => 100\n*/\n\nfunction xyz2ciede(xyz1, xyz2) {\n\treturn lab2ciede(xyz2lab(...xyz1), xyz2lab(...xyz2));\n}\n\n/* Contrast conversions\n/* ========================================================================== */\n\n/**\n* @func hex2contrast\n* @desc Return the contrast ratio of 2 HEX colors\n* @param {StringHex} hex1\n* @param {StringHex} hex2\n* @return {NumberContrast}\n* @example\n* rgb2contrast(\"#fff\", '#000') // => 21\n*/\n\nfunction hex2contrast(hex1, hex2) {\n\treturn rgb2contrast(hex2rgb(hex1), hex2rgb(hex2));\n}\n\n/**\n* @func hsl2contrast\n* @desc Return the contrast ratio of 2 HSL colors\n* @param {ArrayHSL} hsl1\n* @param {ArrayHSL} hsl2\n* @return {NumberContrast}\n* @example\n* hsl2contrast([0, 0, 100], [0, 0, 0]) // => 21\n*/\n\nfunction hsl2contrast(hsl1, hsl2) {\n\treturn rgb2contrast(hsl2rgb(...hsl1), hsl2rgb(...hsl2));\n}\n\n/**\n* @func hsv2contrast\n* @desc Return the contrast ratio of 2 HSV colors\n* @param {ArrayHSV} hsv1\n* @param {ArrayHSV} hsv2\n* @return {NumberContrast}\n* @example\n* hsv2contrast([0, 0, 100], [0, 0, 0]) // => 21\n*/\n\nfunction hsv2contrast(hsv1, hsv2) {\n\treturn rgb2contrast(hsv2rgb(...hsv1), hsv2rgb(...hsv2));\n}\n\n/**\n* @func hwb2contrast\n* @desc Return the contrast ratio of 2 HWB colors\n* @param {ArrayHWB} hwb1\n* @param {ArrayHWB} hwb2\n* @return {NumberContrast}\n* @example\n* hwb2contrast([0, 100, 0], [0, 0, 100]) // => 21\n*/\n\nfunction hwb2contrast(hwb1, hwb2) {\n\treturn rgb2contrast(hwb2rgb(...hwb1), hwb2rgb(...hwb2));\n}\n\n/**\n* @func keyword2contrast\n* @desc Return the contrast ratio of 2 keyword colors\n* @param {StringKeyword} keyword1\n* @param {StringKeyword} keyword2\n* @return {NumberContrast}\n* @example\n* keyword2contrast('white', 'black') // => 21\n*/\n\nfunction keyword2contrast(keyword1, keyword2) {\n\treturn rgb2contrast(keyword2rgb(keyword1), keyword2rgb(keyword2));\n}\n\n/**\n* @func lab2contrast\n* @desc Return the contrast ratio of 2 LAB colors\n* @param {ArrayLAB} lab1\n* @param {ArrayLAB} lab2\n* @return {NumberContrast}\n* @example\n* lab2contrast([100, 0.003, -0.025], [0, 0, 0]) // => 21\n*/\n\nfunction lab2contrast(lab1, lab2) {\n\treturn rgb2contrast(lab2rgb(...lab1), lab2rgb(...lab2));\n}\n\n/**\n* @func lch2contrast\n* @desc Return the contrast ratio of 2 LCH colors\n* @param {ArrayLCH} lch1\n* @param {ArrayLCH} lch2\n* @return {NumberContrast}\n* @example\n* lch2contrast([100, 0.025, -82.2], [0, 0, 0]) // => 21\n*/\n\nfunction lch2contrast(lch1, lch2) {\n\treturn rgb2contrast(lch2rgb(...lch1), lch2rgb(...lch2));\n}\n\n/**\n* @func xyz2contrast\n* @desc Return the contrast ratio of 2 XYZ colors\n* @param {ArrayXYZ} xyz1\n* @param {ArrayXYZ} xyz2\n* @return {NumberContrast}\n* @example\n* xyz2contrast([95.05, 100, 108.88], [0, 0, 0]) // => 21\n*/\n\nfunction xyz2contrast(xyz1, xyz2) {\n\treturn rgb2contrast(xyz2rgb(...xyz1), xyz2rgb(...xyz2));\n}\n\n/* Keyword Conversions\n/* ========================================================================== */\n\n/**\n* @func keyword2hex\n* @desc Return an RGB color from a keyword color\n* @param {StringKeyword} keyword - CSS Color Keyword\n* @return {String}\n* @example\n* keyword2hex('white') // => \"#ffffff\"\n*/\n\nfunction keyword2hex(keyword) {\n\treturn rgb2hex(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2hsl\n* @desc Return an HSL color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayHSL}\n* @example\n* keyword2hsl('white') // => [0, 0, 100]\n*/\n\nfunction keyword2hsl(keyword) {\n\treturn rgb2hsl(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2hsv\n* @desc Return an HSV color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayHSV}\n* @example\n* keyword2hsv('white') // => [0, 0, 100]\n*/\n\nfunction keyword2hsv(keyword) {\n\treturn rgb2hsv(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2hwb\n* @desc Return an HWB color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayHWB}\n* @example\n* keyword2hwb('red') // => [0, 0, 0]\n*/\n\nfunction keyword2hwb(keyword) {\n\treturn rgb2hwb(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2lab\n* @desc Return a CIE LAB color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayLAB}\n* @example\n* keyword2lab('red') // => [54.29, 80.82, 69.88]\n*/\n\nfunction keyword2lab(keyword) {\n\treturn rgb2lab(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2lch\n* @desc Return a CIE LCH color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayLCH}\n* @example\n* keyword2lch('red') // => [54.29, 106.84, 40.85]\n*/\n\nfunction keyword2lch(keyword) {\n\treturn rgb2lch(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2lch\n* @desc Return an XYZ color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayXYZ}\n* @example\n* keyword2lch('red') // => [41.25, 21.27, 1.93]\n*/\n\nfunction keyword2xyz(keyword) {\n\treturn rgb2xyz(...keyword2rgb(keyword));\n}\n\n/* All Conversions\n/* ========================================================================== */\n\nexport {\n\thex2ciede,\n\thex2contrast,\n\thex2hsl,\n\thex2hsv,\n\thex2hwb,\n\thex2lab,\n\thex2lch,\n\thex2rgb,\n\thex2xyz,\n\n\thsl2ciede,\n\thsl2contrast,\n\thsl2hex,\n\thsl2hsv,\n\thsl2hwb,\n\thsl2lab,\n\thsl2lch,\n\thsl2rgb,\n\thsl2xyz,\n\n\thsv2ciede,\n\thsv2contrast,\n\thsv2hex,\n\thsv2hsl,\n\thsv2hwb,\n\thsv2lab,\n\thsv2lch,\n\thsv2rgb,\n\thsv2xyz,\n\n\thwb2ciede,\n\thwb2contrast,\n\thwb2hex,\n\thwb2hsl,\n\thwb2hsv,\n\thwb2lab,\n\thwb2lch,\n\thwb2rgb,\n\thwb2xyz,\n\n\tkeyword2ciede,\n\tkeyword2contrast,\n\tkeyword2hex,\n\tkeyword2hsl,\n\tkeyword2hsv,\n\tkeyword2hwb,\n\tkeyword2lab,\n\tkeyword2lch,\n\tkeyword2rgb,\n\tkeyword2xyz,\n\n\tlab2ciede,\n\tlab2contrast,\n\tlab2hex,\n\tlab2hsl,\n\tlab2hsv,\n\tlab2hwb,\n\tlab2lch,\n\tlab2rgb,\n\tlab2xyz,\n\n\tlch2ciede,\n\tlch2contrast,\n\tlch2hex,\n\tlch2hsl,\n\tlch2hsv,\n\tlch2hwb,\n\tlch2lab,\n\tlch2rgb,\n\tlch2xyz,\n\n\trgb2ciede,\n\trgb2contrast,\n\trgb2hex,\n\trgb2hsl,\n\trgb2hsv,\n\trgb2hwb,\n\trgb2lab,\n\trgb2lch,\n\trgb2xyz,\n\n\txyz2ciede,\n\txyz2contrast,\n\txyz2hex,\n\txyz2hsl,\n\txyz2hsv,\n\txyz2hwb,\n\txyz2lab,\n\txyz2lch,\n\txyz2rgb,\n};\n\n/**\n* @typedef {Array} ArrayRGB\n* An array of red, green, and blue channels.\n* @property {Number} 0 - Red (0 - 100)\n* @property {Number} 1 - Green (0 - 100)\n* @property {Number} 2 - Blue (0 - 100)\n*\n*/\n/**\n* @typedef {Array} ArrayRGBA\n* An array of red, green, blue, and alpha channels.\n* @property {Number} 0 - Red (0 - 100)\n* @property {Number} 1 - Green (0 - 100)\n* @property {Number} 2 - Blue (0 - 100)\n* @property {Number} 3 - Alpha (0 - 100)\n*/\n/**\n* @typedef {Array} ArrayHSL\n* An array of hue, saturation, and lightness channels.\n* @property {Number} 0 - Hue Angle (0 - 360)\n* @property {Number} 1 - Saturation (0 - 100)\n* @property {Number} 2 - Lightness (0 - 100)\n*/\n/**\n* @typedef {Array} ArrayHSV\n* An array of hue, saturation, and value channels.\n* @property {Number} 0 - Hue Angle (0 - 360)\n* @property {Number} 1 - Saturation (0 - 100)\n* @property {Number} 2 - Value (0 - 100)\n*/\n/**\n* @typedef {Array} ArrayLAB\n* An array of CIELAB lightness, red/green, and yellow/blue.\n* @property {Number} 0 - CIE Lightness\n* @property {Number} 1 - Red/Green Coordinate\n* @property {Number} 2 - Yellow/Blue Coordinate\n*/\n/**\n* @typedef {Array} ArrayLCH\n* An array of CIELAB lightness, chroma, and hue.\n* @property {Number} 0 - CIE Lightness\n* @property {Number} 1 - CIE Chroma\n* @property {Number} 2 - CIE Hue\n*/\n/**\n* @typedef {Array} ArrayHWB\n* An array of hue, whiteness, and blackness channels.\n* @property {Number} 0 - Hue Angle (0 - 360)\n* @property {Number} 1 - Whiteness (0 - 100)\n* @property {Number} 2 - Blackness (0 - 100)\n*/\n/**\n* @typedef {Array} ArrayXYZ\n* An array of CIELAB chromacity.\n* @property {Number} 0 - X Chromacity\n* @property {Number} 1 - Y Chromacity\n* @property {Number} 2 - Z Chromacity\n* @example\n* [95.05, 100, 108.88]\n* @example\n* [0, 0, 0]\n*/\n/**\n* @typedef {String} StringHex\n* A string representing the 3, 4, 6, or 8 digit hexidecimal color.\n* @example\n* \"#f00\"\n* \"#f00f\"\n* @example\n* \"#ff0000\"\n* \"#ff0000ff\"\n*/\n/**\n* @typedef {String} StringKeyword\n* A case-insensitive string identifier that represents a specific color.\n* @example\n* \"#f00\"\n* \"#f00f\"\n* @example\n* \"#ff0000\"\n* \"#ff0000ff\"\n*/\n/**\n* @typedef {Number} NumberContrast\n* A contrast ratio of the colors (0 - 21)\n* @example\n* 0\n* @example\n* 21\n*/\n/**\n* @typedef {Number} NumberCIEDE\n* A CIEDE2000 difference between 2 colors (0 - 100)\n* @example\n* 0\n* @example\n* 100\n*/\n"],"names":["rgb2hue","rgbR","rgbG","rgbB","fallbackhue","value","rgb2value","delta","rgb2whiteness","segment","hue2rgb","t1","t2","hue","rhue","max","min","matrix","params","mats","map","mat","reduce","acc","index","precision","wd50X","wd50Y","wd50Z","atan2d","y","x","rad2deg","atan2","cosd","cos","deg2rad","PI","sind","sin","abs","Math","cbrt","exp","floor","pow","sqrt","epsilon","kappa","rgb2hsl","hslH","hslV","hslW","hslD","hslL","hsl2rgb","hslS","rgb2hwb","hwb2rgb","hwbH","hwbW","hwbB","v","rgb2hsv","hsvV","hsvW","hsv2rgb","hsvH","hsvS","rgbI","rgbF","rgbM","rgbN","rgbT","rgb2xyz","lrgbR","lrgbB","lrgbG","xyzX","xyzY","xyzZ","xyz2rgb","hsl2hsv","hsv1","hsv2hsl","hwb2hsv","hsv2hwb","lab2xyz","labL","labA","labB","f2","f1","f3","initX","initY","initZ","xyz2lab","d50X","d50Y","d50Z","lab2lch","lchC","lchH","lch2lab","lchL","rgb2contrast","rgb1","rgb2","relativeLuminance1","relativeLuminance2","l1","l2","luminance2contrast","rgb2luminance","adjustChannel","coefficientR","coefficientG","coefficientB","lowc","adjustGamma","hex2rgb","hex","r","g","b","a","rr","gg","bb","aa","match","hexColorMatch","undefined","parseInt","c","rgb2hex","round","toString","slice","keyword2rgb","keyword","rgb255","keywords","String","toLowerCase","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","transparent","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","lab2ciede","L1","a1","b1","L2","a2","b2","c1","c2","deltaLPrime","lBar","cBarPow7","cCoeff","a1Prime","a2Prime","c1Prime","c2Prime","cBarPrime","deltaCPrime","h1Prime","h2Prime","deltaSmallHPrime","deltaBigHPrime","hBarPrime","T","slCoeff","sl","sc","sh","RtCoeff","Rt","term1","kl","term2","kc","term3","kh","rgb2lab","lab2rgb","rgb2lch","lch2rgb","hsl2lab","hwb2lab","hsv2lab","hex2lab","keyword2lab","hex1","hex2","hsl1","hsl2","hsv2","hwb1","hwb2","keyword1","keyword2","lab1","lab2","lch1","lch2","xyz1","xyz2"],"mappings":"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"}
\ No newline at end of file
diff --git a/packages/convert-colors/dist/index.mjs b/packages/convert-colors/dist/index.mjs
deleted file mode 100644
index 647a292..0000000
--- a/packages/convert-colors/dist/index.mjs
+++ /dev/null
@@ -1,2 +0,0 @@
-function n(n,t,u,o=0){const i=r(n,t,u),c=i-e(n,t,u);if(c){const r=i===n?(t-u)/c:i===t?(u-n)/c:(n-t)/c;return 60*(r+(i===n?r<0?6:0:i===t?2:4))}return o}function t(n,t,r){const e=r<0?r+360:r>360?r-360:r;return 6*e<360?n+(t-n)*e/60:2*e<360?t:3*e<720?n+(t-n)*(240-e)/60:n}function r(n,t,r){return w(n,t,r)}function e(n,t,r){return v(n,t,r)}function u(n,t){return t.map((t=>t.reduce(((t,r,e)=>t+n[e]*o*(r*o)/o/o),0)))}const o=1e8,[i,c,a]=[96.42,100,82.49],s=(n,t)=>d(m(n,t)),l=n=>b(f(n)),f=n=>n*M/180,d=n=>180*n/M,g=n=>I(f(n)),h=Math.abs,m=Math.atan2,p=Math.cbrt,b=Math.cos,k=Math.exp,y=Math.floor,w=Math.max,v=Math.min,M=Math.PI,q=Math.pow,I=Math.sin,x=Math.sqrt,S=q(6,3)/q(29,3),$=q(29,3)/q(3,3);function j(t,u,o,i){const c=n(t,u,o,i),a=r(t,u,o),s=e(t,u,o),l=a-s,f=(a+s)/2;return[c,0===l?0:l/(100-h(2*f-100))*100,f]}function z(n,r,e){const u=e<=50?e*(r+100)/100:e+r-e*r/100,o=2*e-u,[i,c,a]=[t(o,u,n+120),t(o,u,n),t(o,u,n-120)];return[i,c,a]}function C(t,u,o,i){return[n(t,u,o,i),e(t,u,o),100-r(t,u,o)]}function L(n,t,r,e){const[u,o,i]=z(n,100,50).map((n=>n*(100-t-r)/100+t));return[u,o,i]}function P(t,u,o,i){const c=r(t,u,o),a=e(t,u,o);return[n(t,u,o,i),c===a?0:(c-a)/c*100,c]}function A(n,t,r){const e=y(n/60),u=n/60-e&1?n/60-e:1-n/60-e,o=r*(100-t)/100,i=r*(100-t*u)/100,c=r*(100-(100-u)*t/100)/100,[a,s,l]=5===e?[r,o,i]:4===e?[c,o,r]:3===e?[o,i,r]:2===e?[o,r,c]:1===e?[i,r,o]:[r,c,o];return[a,s,l]}function B(n,t,r){const[e,o,i]=[n,t,r].map((n=>n>4.045?100*q((n+5.5)/105.5,2.4):n/12.92)),[c,a,s]=u([e,o,i],[[.4124564,.3575761,.1804375],[.2126729,.7151522,.072175],[.0193339,.119192,.9503041]]);return[c,a,s]}function D(n,t,r){const[e,o,i]=u([n,t,r],[[3.2404542,-1.5371385,-.4985314],[-.969266,1.8760108,.041556],[.0556434,-.2040259,1.0572252]]),[c,a,s]=[e,o,i].map((n=>n>.31308?1.055*q(n/100,1/2.4)*100-5.5:12.92*n));return[c,a,s]}function E(n,t,r){const e=t*(r<50?r:100-r)/100;return[n,0===e?0:2*e/(r+e)*100,r+e]}function F(n,t,r){const e=(200-t)*r/100,[u,o]=[0===e||200===e?0:t*r/100/(e<=100?e:200-e)*100,5*e/10];return[n,u,o]}function G(n,t,r){const[e,u,o]=[n,100===r?0:100-t/(100-r)*100,100-r];return[e,u,o]}function H(n,t,r){const[e,u,o]=[n,(100-t)*r/100,100-r];return[e,u,o]}function J(n,t,r){const e=(n+16)/116,o=t/500+e,s=e-r/200,[l,f,d]=[q(o,3)>S?q(o,3):(116*o-16)/$,n>$*S?q((n+16)/116,3):n/$,q(s,3)>S?q(s,3):(116*s-16)/$],[g,h,m]=u([l*i,f*c,d*a],[[.9555766,-.0230393,.0631636],[-.0282895,1.0099416,.0210077],[.0122982,-.020483,1.3299098]]);return[g,h,m]}function K(n,t,r){const[e,o,s]=u([n,t,r],[[1.0478112,.0228866,-.050127],[.0295424,.9904844,-.0170491],[-.0092345,.0150436,.7521316]]),[l,f,d]=[e/i,o/c,s/a].map((n=>n>S?p(n):($*n+16)/116)),[g,h,m]=[116*f-16,500*(l-f),200*(f-d)];return[g,h,m]}function N(n,t,r){const[e,u]=[x(q(t,2)+q(r,2)),d(m(r,t))];return[n,e,u]}function O(n,t,r){const[e,u]=[t*l(r),t*g(r)];return[n,e,u]}function Q(n,t){return function(n,t){const r=w(n,t),e=v(n,t);return(r*o+.05*o)/(e*o+.05*o)}(R(...n),R(...t))}function R(n,t,r){return(T(n)*W+T(t)*X+T(r)*Y)/o}const T=n=>n<=3.928?n/V:U(n),U=n=>q((n+5.5)/105.5,2.4),V=1292,W=.2126*o,X=.7152*o,Y=.0722*o;function Z(n){const[,t,r,e,u,o,i,c,a]=n.match(nn)||[];if(void 0!==o||void 0!==t){return[void 0!==o?parseInt(o,16):parseInt(t+t,16),void 0!==i?parseInt(i,16):parseInt(r+r,16),void 0!==c?parseInt(c,16):parseInt(e+e,16),void 0!==a?parseInt(a,16):void 0!==u?parseInt(u+u,16):255].map((n=>100*n/255))}}function _(n,t,r){return`#${((1<<24)+(Math.round(255*n/100)<<16)+(Math.round(255*t/100)<<8)+Math.round(255*r/100)).toString(16).slice(1)}`}const nn=/^#?(?:([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])?|([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})?)$/i;function tn(n){const t=rn[String(n).toLowerCase()];return t?t.map((n=>100*n/255)):null}const rn={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],transparent:[0,0,0],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]};function en([n,t,r],[e,u,i]){const c=x(q(t,2)+q(r,2)),a=x(q(u,2)+q(i,2)),f=e-n,d=(n+e)/2,m=q((c+a)/2,7),p=x(m/(m+q(25,7))),b=t+t/2*(1-p),y=u+u/2*(1-p),w=x(b*b+r*r),v=x(y*y+i*i),M=(w+v)/2,I=v-w,S=0===b&&0===r?0:s(r,b)%360,$=0===y&&0===i?0:s(i,y)%360;let j,z,C;0===w||0===v?(j=0,z=0,C=S+$):(j=h(S-$)<=180?$-S:$<=S?$-S+360:$-S-360,z=2*x(w*v)*g(j/2),C=h(S-$)<=180?(S+$)/2:S+$<360?(S+$+360)/2:(S+$-360)/2);const L=1-.17*o*l(C-30)+.24*o*l(2*C)+.32*o*l(3*C+6)-.2*o*l(4*C-63)/o/o,P=(d-50)*(d-50),A=1+.015*o*P/x(20+P)/o,B=1+.045*o*M/o,D=1+.015*o*M*L/o,E=60*k(-(C-275)/25*((C-275)/25)),F=-2*p*g(E),G=f/(un*A),H=I/(on*B),J=z/(cn*D);return x(G*G+H*H+J*J+F*H*J)}const un=1,on=1,cn=1;function an(n,t,r){const[e,u,o]=B(n,t,r),[i,c,a]=K(e,u,o);return[i,c,a]}function sn(n,t,r){const[e,u,o]=J(n,t,r),[i,c,a]=D(e,u,o);return[i,c,a]}function ln(n,t,r){const[e,u,o]=B(n,t,r),[i,c,a]=K(e,u,o),[s,l,f]=N(i,c,a);return[s,l,f]}function fn(n,t,r){const[e,u,o]=O(n,t,r),[i,c,a]=J(e,u,o),[s,l,f]=D(i,c,a);return[s,l,f]}function dn(n,t,r){const[e,u,o]=G(n,t,r),[i,c,a]=F(e,u,o);return[i,c,a]}function gn(n,t,r){const[,e,u]=E(n,t,r),[,o,i]=H(n,e,u);return[n,o,i]}function hn(n,t,r){const[e,u,o]=z(n,t,r),[i,c,a]=B(e,u,o),[s,l,f]=K(i,c,a);return[s,l,f]}function mn(n,t,r,e){const[u,o,i]=J(n,t,r),[c,a,s]=D(u,o,i),[l,f,d]=j(c,a,s,e);return[l,f,d]}function pn(n,t,r){const[e,u,o]=z(n,t,r),[i,c,a]=B(e,u,o),[s,l,f]=K(i,c,a),[d,g,h]=N(s,l,f);return[d,g,h]}function bn(n,t,r,e){const[u,o,i]=O(n,t,r),[c,a,s]=J(u,o,i),[l,f,d]=D(c,a,s),[g,h,m]=j(l,f,d,e);return[g,h,m]}function kn(n,t,r){const[e,u,o]=z(n,t,r),[i,c,a]=B(e,u,o);return[i,c,a]}function yn(n,t,r,e){const[u,o,i]=D(n,t,r),[c,a,s]=j(u,o,i,e);return[c,a,s]}function wn(n,t,r){const[e,u,o]=L(n,t,r),[i,c,a]=B(e,u,o),[s,l,f]=K(i,c,a);return[s,l,f]}function vn(n,t,r,e){const[u,o,i]=J(n,t,r),[c,a,s]=D(u,o,i),[l,f,d]=C(c,a,s,e);return[l,f,d]}function Mn(n,t,r){const[e,u,o]=L(n,t,r),[i,c,a]=B(e,u,o),[s,l,f]=K(i,c,a),[d,g,h]=N(s,l,f);return[d,g,h]}function qn(n,t,r,e){const[u,o,i]=O(n,t,r),[c,a,s]=J(u,o,i),[l,f,d]=D(c,a,s),[g,h,m]=C(l,f,d,e);return[g,h,m]}function In(n,t,r){const[e,u,o]=L(n,t,r),[i,c,a]=B(e,u,o);return[i,c,a]}function xn(n,t,r,e){const[u,o,i]=D(n,t,r),[c,a,s]=C(u,o,i,e);return[c,a,s]}function Sn(n,t,r){const[e,u,o]=A(n,t,r),[i,c,a]=B(e,u,o),[s,l,f]=K(i,c,a);return[s,l,f]}function $n(n,t,r,e){const[u,o,i]=J(n,t,r),[c,a,s]=D(u,o,i),[l,f,d]=P(c,a,s,e);return[l,f,d]}function jn(n,t,r){const[e,u,o]=A(n,t,r),[i,c,a]=B(e,u,o),[s,l,f]=K(i,c,a),[d,g,h]=N(s,l,f);return[d,g,h]}function zn(n,t,r,e){const[u,o,i]=O(n,t,r),[c,a,s]=J(u,o,i),[l,f,d]=D(c,a,s),[g,h,m]=P(l,f,d,e);return[g,h,m]}function Cn(n,t,r){const[e,u,o]=A(n,t,r),[i,c,a]=B(e,u,o);return[i,c,a]}function Ln(n,t,r,e){const[u,o,i]=D(n,t,r),[c,a,s]=P(u,o,i,e);return[c,a,s]}function Pn(n,t,r){const[e,u,o]=K(n,t,r),[i,c,a]=N(e,u,o);return[i,c,a]}function An(n,t,r){const[e,u,o]=O(n,t,r),[i,c,a]=J(e,u,o);return[i,c,a]}function Bn(n){return j(...Z(n))}function Dn(n){return P(...Z(n))}function En(n){return C(...Z(n))}function Fn(n){return an(...Z(n))}function Gn(n){return ln(...Z(n))}function Hn(n){return B(...Z(n))}function Jn(n,t,r){return _(...z(n,t,r))}function Kn(n,t,r){return _(...z(n,t,r))}function Nn(n,t,r){return _(...L(n,t,r))}function On(n,t,r){return _(...sn(n,t,r))}function Qn(n,t,r){return _(...fn(n,t,r))}function Rn(n,t,r){return _(...D(n,t,r))}function Tn(n,t){return en(Fn(n),Fn(t))}function Un(n,t){return en(hn(...n),hn(...t))}function Vn(n,t){return en(Sn(...n),Sn(...t))}function Wn(n,t){return en(wn(...n),wn(...t))}function Xn(n,t){return en(dt(n),dt(t))}function Yn(n,t){return en(O(...n),O(...t))}function Zn(n,t){return en(an(...n),an(...t))}function _n(n,t){return en(K(...n),K(...t))}function nt(n,t){return Q(Z(n),Z(t))}function tt(n,t){return Q(z(...n),z(...t))}function rt(n,t){return Q(A(...n),A(...t))}function et(n,t){return Q(L(...n),L(...t))}function ut(n,t){return Q(tn(n),tn(t))}function ot(n,t){return Q(sn(...n),sn(...t))}function it(n,t){return Q(fn(...n),fn(...t))}function ct(n,t){return Q(D(...n),D(...t))}function at(n){return _(...tn(n))}function st(n){return j(...tn(n))}function lt(n){return P(...tn(n))}function ft(n){return C(...tn(n))}function dt(n){return an(...tn(n))}function gt(n){return ln(...tn(n))}function ht(n){return B(...tn(n))}export{Tn as hex2ciede,nt as hex2contrast,Bn as hex2hsl,Dn as hex2hsv,En as hex2hwb,Fn as hex2lab,Gn as hex2lch,Z as hex2rgb,Hn as hex2xyz,Un as hsl2ciede,tt as hsl2contrast,Jn as hsl2hex,E as hsl2hsv,gn as hsl2hwb,hn as hsl2lab,pn as hsl2lch,z as hsl2rgb,kn as hsl2xyz,Vn as hsv2ciede,rt as hsv2contrast,Kn as hsv2hex,F as hsv2hsl,H as hsv2hwb,Sn as hsv2lab,jn as hsv2lch,A as hsv2rgb,Cn as hsv2xyz,Wn as hwb2ciede,et as hwb2contrast,Nn as hwb2hex,dn as hwb2hsl,G as hwb2hsv,wn as hwb2lab,Mn as hwb2lch,L as hwb2rgb,In as hwb2xyz,Xn as keyword2ciede,ut as keyword2contrast,at as keyword2hex,st as keyword2hsl,lt as keyword2hsv,ft as keyword2hwb,dt as keyword2lab,gt as keyword2lch,tn as keyword2rgb,ht as keyword2xyz,en as lab2ciede,ot as lab2contrast,On as lab2hex,mn as lab2hsl,$n as lab2hsv,vn as lab2hwb,N as lab2lch,sn as lab2rgb,J as lab2xyz,Yn as lch2ciede,it as lch2contrast,Qn as lch2hex,bn as lch2hsl,zn as lch2hsv,qn as lch2hwb,O as lch2lab,fn as lch2rgb,An as lch2xyz,Zn as rgb2ciede,Q as rgb2contrast,_ as rgb2hex,j as rgb2hsl,P as rgb2hsv,C as rgb2hwb,an as rgb2lab,ln as rgb2lch,B as rgb2xyz,_n as xyz2ciede,ct as xyz2contrast,Rn as xyz2hex,yn as xyz2hsl,Ln as xyz2hsv,xn as xyz2hwb,K as xyz2lab,Pn as xyz2lch,D as xyz2rgb};
-//# sourceMappingURL=index.mjs.map
diff --git a/packages/convert-colors/dist/index.mjs.map b/packages/convert-colors/dist/index.mjs.map
deleted file mode 100644
index f8638f2..0000000
--- a/packages/convert-colors/dist/index.mjs.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"index.mjs","sources":["../src/util.js","../src/rgb-hsl.js","../src/rgb-hwb.js","../src/rgb-hsv.js","../src/rgb-xyz.js","../src/hsl-hsv.js","../src/hwb-hsv.js","../src/lab-xyz.js","../src/lab-lch.js","../src/rgb-contrast.js","../src/hex-rgb.js","../src/keyword-rgb.js","../src/lab-ciede.js","../src/index.js"],"sourcesContent":["/**\n* @private\n* @func rgb2hue\n* @desc Return a hue angle from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Red (0 - 100)\n* @param {Number} b - Red (0 - 100)\n* @param {Number} f - Hue Fallback (0 - 360)\n* @return {Number} Hue Angle (0 - 360)\n* @example\n* rgb2hue(100, 0, 0)\n* @example\n* rgb2hue(100, 0, 0, 0)\n*/\n\nexport function rgb2hue(rgbR, rgbG, rgbB, fallbackhue = 0) {\n\tconst value     = rgb2value(rgbR, rgbG, rgbB);\n\tconst whiteness = rgb2whiteness(rgbR, rgbG, rgbB);\n\tconst delta     = value - whiteness;\n\n\tif (delta) {\n\t\t// calculate segment\n\t\tconst segment = value === rgbR\n\t\t\t? (rgbG - rgbB) / delta\n\t\t: value === rgbG\n\t\t\t? (rgbB - rgbR) / delta\n\t\t: (rgbR - rgbG) / delta;\n\n\t\t// calculate shift\n\t\tconst shift = value === rgbR\n\t\t\t? segment < 0\n\t\t\t\t? 360 / 60\n\t\t\t\t: 0 / 60\n\t\t: value === rgbG\n\t\t\t? 120 / 60\n\t\t: 240 / 60;\n\n\t\t// calculate hue\n\t\tconst hue = (segment + shift) * 60;\n\n\t\treturn hue;\n\t} else {\n\t\t// otherwise return the Hue Fallback\n\t\treturn fallbackhue;\n\t}\n}\n\n/**\n* @private\n* @func hue2rgb\n* @desc Return an RGB channel from a hue angle\n* @param {Number} t1\n* @param {Number} t2\n* @param {Number} h - Hue Angle (0 - 360)\n* @return {Number} RGB channel (0 - 100)\n* @example\n* hue2rgb(0, 0, 0)\n*/\n\nexport function hue2rgb(t1, t2, hue) {\n\t// calculate the ranged hue\n\tconst rhue = hue < 0 ? hue + 360 : hue > 360 ? hue - 360 : hue;\n\n\t// calculate the rgb value\n\tconst rgb = rhue * 6 < 360\n\t\t? t1 + (t2 - t1) * rhue / 60\n\t: rhue * 2 < 360\n\t\t? t2\n\t: rhue * 3 < 720\n\t\t? t1 + (t2 - t1) * (240 - rhue) / 60\n\t: t1;\n\n\treturn rgb;\n}\n\n/**\n* @private\n* @func luminance2contrast\n* @desc Return the contrast ratio between 2 luminance.\n* @param {Number} l1 - Relative luminance of one color\n* @param {Number} l2 - Relative luminance of another color\n* @return {Number} Contrast ratio between the 2 luminance\n* @example\n* luminance2contrast(0.2126, 0) // => 5.252\n* @link https://www.w3.org/TR/WCAG21/#dfn-contrast-ratio\n*/\n\nexport function luminance2contrast(relativeLuminance1, relativeLuminance2) {\n\t// l1 is the relative luminance of the lighter of the colors\n\tconst l1 = max(relativeLuminance1, relativeLuminance2);\n\n\t// l1 is the relative luminance of the darker of the colors\n\tconst l2 = min(relativeLuminance1, relativeLuminance2);\n\n\treturn (l1 * precision + 0.05 * precision) / (l2 * precision + 0.05 * precision);\n}\n\n\n/* RGB tooling\n/* ========================================================================== */\n\nexport function rgb2value(rgbR, rgbG, rgbB) {\n\tconst value = max(rgbR, rgbG, rgbB);\n\n\treturn value;\n}\n\nexport function rgb2whiteness(rgbR, rgbG, rgbB) {\n\tconst whiteness = min(rgbR, rgbG, rgbB);\n\n\treturn whiteness;\n}\n\n/* Math matrix\n/* ========================================================================== */\n\nexport function matrix(params, mats) {\n\treturn mats.map(\n\t\tmat => mat.reduce(\n\t\t\t// (acc, value, index) => acc + params[index] * value,\n\t\t\t(acc, value, index) => acc + params[index] * precision * (value * precision) / precision / precision,\n\t\t\t0,\n\t\t),\n\t);\n}\n\n/* Precision\n/* ========================================================================== */\n\nexport const precision = 100000000;\n\n/* D50 reference white\n/* ========================================================================== */\n\nexport const [ wd50X, wd50Y, wd50Z ] = [ 96.42, 100, 82.49 ];\n\n/* Math Expressions\n/* ========================================================================== */\n\nexport const atan2d = (y, x) => rad2deg(atan2(y, x)); // arc-tangent in degrees\nexport const cosd = x => cos(deg2rad(x)); // cosine of the specified angle in degrees\nexport const deg2rad = x => x * PI / 180; // degree to radian\nexport const rad2deg = x => x * 180 / PI; // radian to degree\nexport const sind = x => sin(deg2rad(x)); // sine in degrees\n\n/* Math Constants\n/* ========================================================================== */\n\nexport const abs = Math.abs;\nexport const atan2 = Math.atan2;\nexport const cbrt = Math.cbrt;\nexport const cos = Math.cos;\nexport const exp = Math.exp;\nexport const floor = Math.floor;\nexport const max = Math.max;\nexport const min = Math.min;\nexport const PI = Math.PI;\nexport const pow = Math.pow;\nexport const sin = Math.sin;\nexport const sqrt = Math.sqrt;\n\nexport const epsilon = pow(6, 3) / pow(29, 3);\nexport const kappa = pow(29, 3) / pow(3, 3);\n","import { abs, rgb2hue, rgb2value, rgb2whiteness, hue2rgb } from './util';\n\n/**\n* @func rgb2hsl\n* @desc Return a HSL color from an RGB color\n* @param {Number} r - red (0 - 100)\n* @param {Number} g - green (0 - 100)\n* @param {Number} b - blue (0 - 100)\n* @param {Number=} f - Hue Fallback (0 - 360)\n* @return {ArrayHSL}\n* @example\n* rgb2hsl(0, 100, 100) // => [0, 100, 50]\n* @link https://www.w3.org/TR/css-color-3/#hsl-color\n* @link https://www.w3.org/TR/css-color-4/#hsl-to-rgb\n* @link https://www.rapidtables.com/convert/color/rgb-to-hsl.html\n* @link https://www.rapidtables.com/convert/color/hsl-to-rgb.html\n*/\n\nexport function rgb2hsl(rgbR, rgbG, rgbB, fallbackhue) {\n\tconst hslH = rgb2hue(rgbR, rgbG, rgbB, fallbackhue);\n\tconst hslV = rgb2value(rgbR, rgbG, rgbB);\n\tconst hslW = rgb2whiteness(rgbR, rgbG, rgbB);\n\n\t// calculate value/whiteness delta\n\tconst hslD = hslV - hslW;\n\n\t// calculate lightness\n\tconst hslL = (hslV + hslW) / 2;\n\n\t// calculate saturation\n\tconst hslS = hslD === 0 ? 0 : hslD / (100 - abs(2 * hslL - 100)) * 100;\n\n\treturn [ hslH, hslS, hslL ];\n}\n\n/**\n* @func hsl2rgb\n* @desc Return an RGB color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayRGB}\n* @example\n* hsl2rgb(0, 100, 50) // => [0, 100, 100]\n* @link https://www.w3.org/TR/css-color-3/#hsl-color\n* @link https://www.w3.org/TR/css-color-4/#hsl-to-rgb\n* @link https://www.rapidtables.com/convert/color/rgb-to-hsl.html\n* @link https://www.rapidtables.com/convert/color/hsl-to-rgb.html\n*/\n\nexport function hsl2rgb(hslH, hslS, hslL) {\n\t// calcuate t2\n\tconst t2 = hslL <= 50 ? hslL * (hslS + 100) / 100 : hslL + hslS - hslL * hslS / 100;\n\n\t// calcuate t1\n\tconst t1 = hslL * 2 - t2;\n\n\t// calculate rgb\n\tconst [ rgbR, rgbG, rgbB ] = [\n\t\thue2rgb(t1, t2, hslH + 120),\n\t\thue2rgb(t1, t2, hslH),\n\t\thue2rgb(t1, t2, hslH - 120),\n\t];\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n","import { rgb2hue, rgb2whiteness, rgb2value } from './util';\nimport { hsl2rgb } from './rgb-hsl';\n\n/**\n* @func rgb2hwb\n* @desc Return an HWB color from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @param {Number} f - Hue Fallback (0 - 360)\n* @return {ArrayHWB}\n* @example\n* rgb2hwb(100, 0, 0) // => [0, 0, 0]\n* @link https://www.w3.org/TR/css-color-4/#hwb-to-rgb\n* @link http://alvyray.com/Papers/CG/hwb2rgb.htm\n*/\n\nexport function rgb2hwb(rgbR, rgbG, rgbB, fallbackhue) {\n\tconst hwbH = rgb2hue(rgbR, rgbG, rgbB, fallbackhue);\n\tconst hwbW = rgb2whiteness(rgbR, rgbG, rgbB);\n\tconst hwbV = rgb2value(rgbR, rgbG, rgbB);\n\tconst hwbB = 100 - hwbV;\n\n\treturn [hwbH, hwbW, hwbB];\n}\n\n/**\n* @func hwb2rgb\n* @desc Return an RGB color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayRGB}\n* @example\n* hwb2rgb(0, 0, 0) // => [100, 0, 0]\n* @link https://www.w3.org/TR/css-color-4/#hwb-to-rgb\n* @link http://alvyray.com/Papers/CG/hwb2rgb.htm\n*/\n\nexport function hwb2rgb(hwbH, hwbW, hwbB, fallbackhue) {\n\tconst [ rgbR, rgbG, rgbB ] = hsl2rgb(hwbH, 100, 50, fallbackhue).map(\n\t\tv => v * (100 - hwbW - hwbB) / 100 + hwbW,\n\t);\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n","import { floor, rgb2value, rgb2whiteness, rgb2hue } from './util';\n\n/**\n* @func rgb2hsv\n* @desc Return an HSV color from an RGB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @param {Number=} f - Hue Fallback (0 - 360)\n* @return {ArrayHSV}\n* @example\n* rgb2hsv(100, 0, 0) // => [0, 100, 100]\n* @link http://alvyray.com/Papers/CG/hsv2rgb.htm\n*/\n\nexport function rgb2hsv(rgbR, rgbG, rgbB, fallbackhue) {\n\tconst hsvV = rgb2value(rgbR, rgbG, rgbB);\n\tconst hsvW = rgb2whiteness(rgbR, rgbG, rgbB);\n\tconst hsvH = rgb2hue(rgbR, rgbG, rgbB, fallbackhue);\n\n\t// calculate saturation\n\tconst hsvS = hsvV === hsvW ? 0 : (hsvV - hsvW) / hsvV * 100;\n\n\treturn [ hsvH, hsvS, hsvV ];\n}\n\n/**\n* @func hsv2rgb\n* @desc Return an RGB color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayRGB}\n* @example\n* hsv2rgb(100, 0, 0) // => [100, 0, 0]\n* @link http://alvyray.com/Papers/CG/hsv2rgb.htm\n*/\n\nexport function hsv2rgb(hsvH, hsvS, hsvV) {\n\tconst rgbI = floor(hsvH / 60);\n\n\t// calculate rgb parts\n\tconst rgbF = hsvH / 60 - rgbI & 1 ? hsvH / 60 - rgbI : 1 - hsvH / 60 - rgbI;\n\tconst rgbM = hsvV * (100 - hsvS) / 100;\n\tconst rgbN = hsvV * (100 - hsvS * rgbF) / 100;\n\tconst rgbT = hsvV * (100 - (100 - rgbF) * hsvS / 100) / 100;\n\n\tconst [ rgbR, rgbG, rgbB ] = rgbI === 5\n\t\t? [ hsvV, rgbM, rgbN ]\n\t: rgbI === 4\n\t\t? [ rgbT, rgbM, hsvV ]\n\t: rgbI === 3\n\t\t? [ rgbM, rgbN, hsvV ]\n\t: rgbI === 2\n\t\t? [ rgbM, hsvV, rgbT ]\n\t: rgbI === 1\n\t\t? [ rgbN, hsvV, rgbM ]\n\t: [ hsvV, rgbT, rgbM ];\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n","import { matrix, pow } from './util';\n\n/**\n* @func rgb2xyz\n* @desc Return an XYZ color from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @return {ArrayXYZ}\n* @example\n* rgb2xyz(100, 0, 0) // => [41.25, 21.27, 1.93]\n* @link https://www.w3.org/TR/css-color-4/#rgb-to-lab\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n*/\n\nexport function rgb2xyz(rgbR, rgbG, rgbB) {\n\tconst [ lrgbR, lrgbB, lrgbG ] = [ rgbR, rgbG, rgbB ].map(\n\t\tv => v > 4.045 ? pow((v + 5.5) / 105.5, 2.4) * 100 : v / 12.92,\n\t);\n\n\tconst [ xyzX, xyzY, xyzZ ] = matrix([ lrgbR, lrgbB, lrgbG ], [\n\t\t[0.4124564, 0.3575761, 0.1804375],\n\t\t[0.2126729, 0.7151522, 0.0721750],\n\t\t[0.0193339, 0.1191920, 0.9503041],\n\t]);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/**\n* @func xyz2rgb\n* @desc Return an XYZ color from an RGB color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayRGB}\n* @example\n* xyz2rgb(41.25, 21.27, 1.93) // => [100, 0, 0]\n* @link https://www.w3.org/TR/css-color-4/#rgb-to-lab\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n*/\n\nexport function xyz2rgb(xyzX, xyzY, xyzZ) {\n\tconst [ lrgbR, lrgbB, lrgbG ] = matrix([ xyzX, xyzY, xyzZ ], [\n\t\t[ 3.2404542, -1.5371385, -0.4985314],\n\t\t[-0.9692660,  1.8760108,  0.0415560],\n\t\t[ 0.0556434, -0.2040259,  1.0572252],\n\t]);\n\n\tconst [ rgbR, rgbG, rgbB ] = [ lrgbR, lrgbB, lrgbG ].map(\n\t\tv => v > 0.31308 ? 1.055 * pow(v / 100, 1 / 2.4) * 100 - 5.5 : 12.92 * v,\n\t);\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n","/**\n* @func hsl2hsv\n* @desc Return an HSV color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayHSV}\n* @example\n* hsl2hsv(0, 100, 50)\n* @link https://gist.github.com/defims/0ca2ef8832833186ed396a2f8a204117\n*/\n\nexport function hsl2hsv(hslH, hslS, hslL) {\n\tconst hsv1 = hslS * (hslL < 50 ? hslL : 100 - hslL) / 100;\n\tconst hsvS = hsv1 === 0 ? 0 : 2 * hsv1 / (hslL + hsv1) * 100;\n\tconst hsvV = hslL + hsv1;\n\n\treturn [ hslH, hsvS, hsvV ];\n}\n\n/**\n* @func hsv2hsl\n* @desc Return an HSL color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayHSL}\n* @example\n* hsv2hsl(0, 0, 0) // => [0, 100, 50]\n* @link https://gist.github.com/defims/0ca2ef8832833186ed396a2f8a204117\n*/\n\nexport function hsv2hsl(hsvH, hsvS, hsvV) {\n\tconst hslL = (200 - hsvS) * hsvV / 100;\n\n\tconst [ hslS, hslV ] = [\n\t\thslL === 0 || hslL === 200 ? 0 : hsvS * hsvV / 100 / (hslL <= 100 ? hslL : 200 - hslL) * 100,\n\t\thslL * 5 / 10,\n\t];\n\n\treturn [ hsvH, hslS, hslV ];\n}\n","/**\n* @func hwb2hsv\n* @desc Return an HSV color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayHSV}\n* @example\n* hwb2hsv(0, 0, 0) // => [0, 100, 100]\n* @link https://en.wikipedia.org/wiki/HWB_color_model#Converting_to_and_from_HSV\n*/\n\nexport function hwb2hsv(hwbH, hwbW, hwbB) {\n\tconst [ hsvH, hsvS, hsvV ] = [\n\t\thwbH,\n\t\thwbB === 100 ? 0 : 100 - hwbW / (100 - hwbB) * 100,\n\t\t100 - hwbB,\n\t];\n\n\treturn [ hsvH, hsvS, hsvV ];\n}\n\n\n/**\n* @func hsv2hwb\n* @desc Return an HWB color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayHWB}\n* @example\n* hsv2hwb(0, 100, 100) // => [0, 0, 0]\n* @link https://en.wikipedia.org/wiki/HWB_color_model#Converting_to_and_from_HSV\n*/\n\nexport function hsv2hwb(hsvH, hsvS, hsvV) {\n\tconst [ hwbH, hwbW, hwbB ] = [\n\t\thsvH,\n\t\t(100 - hsvS) * hsvV / 100,\n\t\t100 - hsvV,\n\t];\n\n\treturn [ hwbH, hwbW, hwbB ];\n}\n","import { cbrt, epsilon, kappa, pow, wd50X, wd50Y, wd50Z, matrix } from './util';\n\n/**\n* @func lab2xyz\n* @desc Return an XYZ color from a LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {ArrayXYZ}\n* @example\n* lab2xyz(54.29, 80.82, 69.88) // => 41.25, 21.27, 1.93\n* @link https://www.w3.org/TR/css-color-4/#rgb-to-lab\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n* @link https://www.easyrgb.com/en/math.php\n*/\n\nexport function lab2xyz(labL, labA, labB) {\n\t// compute f, starting with the luminance-related term\n\tconst f2 = (labL + 16) / 116;\n\tconst f1 = labA / 500 + f2;\n\tconst f3 = f2 - labB / 200;\n\n\t// compute pre-scaled XYZ\n\tconst [ initX, initY, initZ ] = [\n\t\tpow(f1, 3) > epsilon   ? pow(f1, 3)                : (116 * f1 - 16) / kappa,\n\t\tlabL > kappa * epsilon ? pow((labL + 16) / 116, 3) : labL / kappa,\n\t\tpow(f3, 3) > epsilon   ? pow(f3, 3)                : (116 * f3 - 16) / kappa,\n\t];\n\n\tconst [ xyzX, xyzY, xyzZ ] = matrix(\n\t\t// compute XYZ by scaling pre-scaled XYZ by reference white\n\t\t[ initX * wd50X, initY * wd50Y, initZ * wd50Z ],\n\t\t// calculate D65 XYZ from D50 XYZ\n\t\t[\n\t\t\t[ 0.9555766, -0.0230393,  0.0631636],\n\t\t\t[-0.0282895,  1.0099416,  0.0210077],\n\t\t\t[ 0.0122982, -0.0204830,  1.3299098],\n\t\t],\n\t);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/**\n* @func xyz2lab\n* @desc Return an LAB color from a XYZ color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayLAB}\n* @example\n* xyz2lab(41.25, 21.27, 1.93) // => [54.29, 80.82, 69.88]\n* @link https://www.w3.org/TR/css-color-4/#rgb-to-lab\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n* @link https://www.easyrgb.com/en/math.php\n*/\n\nexport function xyz2lab(xyzX, xyzY, xyzZ) {\n\t// calculate D50 XYZ from D65 XYZ\n\tconst [ d50X, d50Y, d50Z ] = matrix([ xyzX, xyzY, xyzZ ], [\n\t\t[ 1.0478112,  0.0228866, -0.0501270],\n\t\t[ 0.0295424,  0.9904844, -0.0170491],\n\t\t[-0.0092345,  0.0150436,  0.7521316],\n\t]);\n\n\t// calculate f\n\tconst [ f1, f2, f3 ] = [\n\t\td50X / wd50X,\n\t\td50Y / wd50Y,\n\t\td50Z / wd50Z,\n\t].map(\n\t\tvalue => value > epsilon ? cbrt(value) : (kappa * value + 16) / 116,\n\t);\n\n\tconst [ labL, labA, labB ] = [\n\t\t116 * f2 - 16,\n\t\t500 * (f1 - f2),\n\t\t200 * (f2 - f3),\n\t];\n\n\treturn [ labL, labA, labB ];\n}\n","import { atan2, cosd, pow, rad2deg, sind, sqrt } from './util';\n\n/**\n* @func lab2lch\n* @desc Return an LCH color from a LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {ArrayLAB}\n* @example\n* lab2lch(54.29, 80.82, 69.88) // => [54.29, 106.84, 40.85]\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n* @link https://www.w3.org/TR/css-color-4/#lch-to-lab\n*/\n\nexport function lab2lch(labL, labA, labB) {\n\tconst [ lchC, lchH ] = [\n\t\tsqrt(pow(labA, 2) + pow(labB, 2)), // convert to chroma\n\t\trad2deg(atan2(labB, labA)), // convert to hue, in degrees\n\t];\n\n\treturn [ labL, lchC, lchH ];\n}\n\n/**\n* @func lch2lab\n* @desc Return a LAB color from an LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {ArrayLCH}\n* @example\n* lch2lab(54.29, 106.84, 40.85) // => [54.29, 80.82, 69.88]\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n* @link https://www.w3.org/TR/css-color-4/#lch-to-lab\n*/\n\nexport function lch2lab(lchL, lchC, lchH) {\n\t// convert to Lab a and b from the polar form\n\tconst [ labA, labB ] = [\n\t\tlchC * cosd(lchH),\n\t\tlchC * sind(lchH),\n\t];\n\n\treturn [ lchL, labA, labB ];\n}\n","import { luminance2contrast, pow, precision } from './util';\n\n/**\n* @func rgb2contrast\n* @desc Return the contrast ratio of of RGB colors\n* @param {ArrayRGB} rgb1 - RGB Color Array\n* @param {ArrayRGB} rgb2 - RGB Color Array\n* @return {NumberContrast}\n* @example\n* rgb2contrast([100, 0, 0], [0, 0, 0]) // => 5.252\n* @link https://www.w3.org/TR/WCAG21/#dfn-contrast-ratio\n*/\n\nexport default function rgb2contrast(rgb1, rgb2) {\n\tconst luminance1 = rgb2luminance(...rgb1);\n\tconst luminance2 = rgb2luminance(...rgb2);\n\n\treturn luminance2contrast(luminance1, luminance2);\n}\n\n/**\n* @private\n* @func rgb2luminance\n* @desc Return the relative brightness of RGB\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @return {Number} Relative luminance of the color\n* @example\n* rgb2luminance(100, 0, 0) // => 0.2126\n* @link https://www.w3.org/TR/WCAG21/#dfn-relative-luminance\n*/\n\nexport function rgb2luminance(rgbR, rgbG, rgbB) {\n\treturn (adjustChannel(rgbR) * coefficientR + adjustChannel(rgbG) * coefficientG + adjustChannel(rgbB) * coefficientB) / precision;\n}\n\n// low-gamma adjust coefficients\nconst adjustChannel = x => x <= 3.928 ? x / lowc : adjustGamma(x);\nconst adjustGamma = x => pow((x + 5.5) / 105.5, 2.4);\nconst lowc = 1292;\n\n// red/green/blue coefficients\nconst coefficientR = 0.2126 * precision;\nconst coefficientG = 0.7152 * precision;\nconst coefficientB = 0.0722 * precision;\n","/**\n* @func hex2rgb\n* @desc Return an RGBA color from a Hex color.\n* @param {StringHex} hex\n* @return {ArrayRGBA}\n* @example\n* hex2rgb(\"#f00\") // => [100, 0, 0, 100]\n* hex2rgb(\"#f00f\") // => [100, 0, 0, 100]\n* @example\n* hex2rgb(\"#ff0000\") // => [100, 0, 0, 100]\n* hex2rgb(\"#ff0000ff\") // => [100, 0, 0, 100]\n*/\n\nexport function hex2rgb(hex) {\n\t// #<hex-color>{3,4,6,8}\n\tconst [, r, g, b, a, rr, gg, bb, aa] = hex.match(hexColorMatch) || [];\n\n\tif (rr !== undefined || r !== undefined) {\n\t\tconst red   = rr !== undefined ? parseInt(rr, 16) : parseInt(r + r, 16);\n\t\tconst green = gg !== undefined ? parseInt(gg, 16) : parseInt(g + g, 16);\n\t\tconst blue  = bb !== undefined ? parseInt(bb, 16) : parseInt(b + b, 16);\n\t\tconst alpha = aa !== undefined ? parseInt(aa, 16) : a !== undefined ? parseInt(a + a, 16) : 255;\n\n\t\treturn [red, green, blue, alpha].map(c => c * 100 / 255);\n\t}\n\n\treturn undefined;\n}\n\n/**\n* @func rgb2hex\n* @desc Return a HEX color from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @return {StringHex}\n* @example\n* rgb2hex(100, 0, 0) // => \"#ff0000\"\n*/\n\nexport function rgb2hex(rgbR, rgbG, rgbB) {\n\treturn `#${((1 << 24) + (Math.round(rgbR * 255 / 100) << 16) + (Math.round(rgbG * 255 / 100) << 8) + Math.round(rgbB * 255 / 100)).toString(16).slice(1)}`;\n}\n\nconst hexColorMatch = /^#?(?:([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])?|([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})?)$/i;\n","/**\n* @func keyword2rgb\n* @desc Return an RGB color from a CSS keyword color\n* @param {StringKeyword} keyword\n* @return {ArrayRGB}\n* @example\n* keyword2rgb('red') // => [100, 0, 0]\n*/\n\nexport default function keyword2rgb(keyword) {\n\tconst rgb255 = keywords[String(keyword).toLowerCase()];\n\n\treturn rgb255 ? rgb255.map(x => x * 100 / 255) : null;\n}\n\nconst keywords = {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\ttransparent: [0, 0, 0],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50],\n};\n","import { abs, atan2d, cosd, exp, pow, sind, sqrt, precision } from './util';\n\n/* Return\n/* ========================================================================== */\n\n/**\n* @func lab2ciede\n* @desc Return the CIEDE2000 difference between 2 CIE LAB colors (International Commission on Illumination, Delta E).\n* @param {Array} lab1 - CIE LAB color\n* @param {Number} lab1.0 - Lightness\n* @param {Number} lab1.1 - Red/Green Coordinate\n* @param {Number} lab1.2 - Yellow/Blue Coordinate\n* @param {Array} lab2 - CIE LAB color\n* @param {Number} lab2.0 - Lightness\n* @param {Number} lab2.1 - Red/Green Coordinate\n* @param {Number} lab2.2 - Yellow/Blue Coordinate\n* @return {NumberCIEDE}\n* @example\n* lab2ciede([97.14, -21.56, 94.48], [0, 0, 0]) // => 100\n* @link https://en.wikipedia.org/wiki/Color_difference#CIEDE2000\n*/\n\nexport default function lab2ciede([L1, a1, b1], [L2, a2, b2]) {\n\tconst c1 = sqrt(pow(a1, 2) + pow(b1, 2));\n\tconst c2 = sqrt(pow(a2, 2) + pow(b2, 2));\n\n\tconst deltaLPrime = L2 - L1;\n\n\tconst lBar = (L1 + L2) / 2;\n\tconst cBar = (c1 + c2) / 2;\n\n\tconst cBarPow7 = pow(cBar, 7);\n\tconst cCoeff = sqrt(cBarPow7 / (cBarPow7 + pow(25, 7)));\n\tconst a1Prime = a1 + a1 / 2 * (1 - cCoeff);\n\tconst a2Prime = a2 + a2 / 2 * (1 - cCoeff);\n\n\tconst c1Prime = sqrt(a1Prime * a1Prime + b1 * b1);\n\tconst c2Prime = sqrt(a2Prime * a2Prime + b2 * b2);\n\tconst cBarPrime = (c1Prime + c2Prime) / 2;\n\tconst deltaCPrime = c2Prime - c1Prime;\n\n\tconst h1Prime = a1Prime === 0 && b1 === 0 ? 0 : atan2d(b1, a1Prime) % 360;\n\tconst h2Prime = a2Prime === 0 && b2 === 0 ? 0 : atan2d(b2, a2Prime) % 360;\n\n\tlet deltaSmallHPrime;\n\tlet deltaBigHPrime;\n\tlet hBarPrime;\n\n\tif (c1Prime === 0 || c2Prime === 0) {\n\t\tdeltaSmallHPrime = 0;\n\t\tdeltaBigHPrime = 0;\n\t\thBarPrime = h1Prime + h2Prime;\n\t} else {\n\t\tdeltaSmallHPrime = abs(h1Prime - h2Prime) <= 180\n\t\t\t? h2Prime - h1Prime\n\t\t: h2Prime <= h1Prime\n\t\t\t? h2Prime - h1Prime + 360\n\t\t: h2Prime - h1Prime - 360;\n\n\t\tdeltaBigHPrime = 2 * sqrt(c1Prime * c2Prime) * sind(deltaSmallHPrime / 2);\n\n\t\thBarPrime = abs(h1Prime - h2Prime) <= 180\n\t\t\t? (h1Prime + h2Prime) / 2\n\t\t: h1Prime + h2Prime < 360\n\t\t\t? (h1Prime + h2Prime + 360) / 2\n\t\t: (h1Prime + h2Prime - 360) / 2;\n\t}\n\n\tconst T = 1 - 0.17 * precision * cosd(hBarPrime - 30) + 0.24 * precision * cosd(2 * hBarPrime) + 0.32 * precision * cosd(3 * hBarPrime + 6) - 0.2 * precision * cosd(4 * hBarPrime - 63) / precision / precision;\n\n\tconst slCoeff = (lBar - 50) * (lBar - 50);\n\tconst sl = 1 + 0.015 * precision * slCoeff / sqrt(20 + slCoeff) / precision;\n\tconst sc = 1 + 0.045 * precision * cBarPrime / precision;\n\tconst sh = 1 + 0.015 * precision * cBarPrime * T / precision;\n\n\tconst RtCoeff = 60 * exp(-((hBarPrime - 275) / 25) * ((hBarPrime - 275) / 25));\n\tconst Rt = -2 * cCoeff * sind(RtCoeff);\n\n\tconst term1 = deltaLPrime / (kl * sl);\n\tconst term2 = deltaCPrime / (kc * sc);\n\tconst term3 = deltaBigHPrime / (kh * sh);\n\tconst term4 = Rt * term2 * term3;\n\n\treturn sqrt(term1 * term1 + term2 * term2 + term3 * term3 + term4);\n}\n\n// weight factors\nconst kl = 1;\nconst kc = 1;\nconst kh = 1;\n","import { rgb2hsl, hsl2rgb } from './rgb-hsl';\nimport { rgb2hwb, hwb2rgb } from './rgb-hwb';\nimport { rgb2hsv, hsv2rgb } from './rgb-hsv';\nimport { rgb2xyz, xyz2rgb } from './rgb-xyz';\nimport { hsl2hsv, hsv2hsl } from './hsl-hsv';\nimport { hwb2hsv, hsv2hwb } from './hwb-hsv';\nimport { lab2xyz, xyz2lab } from './lab-xyz';\nimport { lab2lch, lch2lab } from './lab-lch';\nimport rgb2contrast from './rgb-contrast';\nimport { hex2rgb, rgb2hex } from './hex-rgb';\nimport keyword2rgb from './keyword-rgb';\nimport lab2ciede from './lab-ciede';\n\n/* Convert between RGB and Lab\n/* ========================================================================== */\n\n/**\n* @func rgb2lab\n* @desc Return a CIE LAB color from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @return {ArrayLAB}\n* @example\n* rgb2lab(100, 0, 0) // => [54.29, 80.82, 69.88]\n*/\n\nfunction rgb2lab(rgbR, rgbG, rgbB) {\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\n\treturn [ labL, labA, labB ];\n}\n\n/**\n* @func lab2rgb\n* @desc Return an RGB color from a CIE LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {ArrayRGBA}\n* @example\n* lab2rgb(54.29, 80.82, 69.88) // => [100, 0, 0]\n*/\n\nfunction lab2rgb(labL, labA, labB) {\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n\n/* Convert between RGB and LCH\n/* ========================================================================== */\n\n/**\n* @func rgb2lch\n* @desc Return a CIE LAB color from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @return {ArrayLCH}\n* @example\n* rgb2lch(100, 0, 0) // => [54.29, 106.84, 40.85]\n*/\n\nfunction rgb2lch(rgbR, rgbG, rgbB) {\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\tconst [ lchL, lchC, lchH ] = lab2lch(labL, labA, labB);\n\n\treturn [ lchL, lchC, lchH ];\n}\n\n/**\n* @func lch2rgb\n* @desc Return an RGB color from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue\n* @return {ArrayRGBA}\n* @example\n* lch2rgb(54.29, 106.84, 40.85) // => [100, 0, 0]\n*/\n\nfunction lch2rgb(lchL, lchC, lchH) {\n\tconst [ labL, labA, labB ] = lch2lab(lchL, lchC, lchH);\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n\n/* Convert between HSL and HWB\n/* ========================================================================== */\n\n/**\n* @func hwb2hsl\n* @desc Return an HSV color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayHSL}\n* @example\n* hwb2hsl(0, 0, 0) // => [0, 0, 100]\n*/\n\nfunction hwb2hsl(hwbH, hwbW, hwbB) {\n\tconst [ hsvH, hsvS, hsvV ] = hwb2hsv(hwbH, hwbW, hwbB);\n\tconst [ hslH, hslS, hslL ] = hsv2hsl(hsvH, hsvS, hsvV);\n\n\treturn [ hslH, hslS, hslL ];\n}\n\n/**\n* @func hsl2hwb\n* @desc Return an HWB color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayHWB}\n* @example\n* hsl2hwb(0, 0, 100) // => [0, 0, 0]\n*/\n\nfunction hsl2hwb(hslH, hslS, hslL) {\n\tconst [ , hsvS, hsvV ] = hsl2hsv(hslH, hslS, hslL);\n\tconst [ , hwbW, hwbB ] = hsv2hwb(hslH, hsvS, hsvV);\n\n\treturn [ hslH, hwbW, hwbB ];\n}\n\n/* Convert between HSL and Lab\n/* ========================================================================== */\n\n/**\n* @func hsl2lab\n* @desc Return a CIE LAB color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayLAB}\n* @example\n* hsl2lab(0, 100, 50) // => [54.29, 80.82, 69.88]\n*/\n\nfunction hsl2lab(hslH, hslS, hslL) {\n\tconst [ rgbR, rgbG, rgbB ] = hsl2rgb(hslH, hslS, hslL);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\n\treturn [ labL, labA, labB ];\n}\n\n/**\n* @func lab2hsl\n* @desc Return a HSL color from a CIE LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @param {Number=} f - Hue Fallback (0 - 360)\n* @return {ArrayHSL}\n* @example\n* lab2hsl(54.29, 80.82, 69.88) // => [0, 100, 50]\n*/\n\nfunction lab2hsl(labL, labA, labB, fallbackhue) {\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hslH, hslS, hslL ] = rgb2hsl(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hslH, hslS, hslL ];\n}\n\n/* Convert between HSL and LCH\n/* ========================================================================== */\n\n/**\n* @func hsl2lch\n* @desc Return a CIE LCH color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayLCH}\n* @example\n* hsl2lch(0, 100, 50) // => [54.29, 106.84, 40.85]\n*/\n\nfunction hsl2lch(hslH, hslS, hslL) {\n\tconst [ rgbR, rgbG, rgbB ] = hsl2rgb(hslH, hslS, hslL);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\tconst [ lchL, lchC, lchH ] = lab2lch(labL, labA, labB);\n\n\treturn [ lchL, lchC, lchH ];\n}\n\n/**\n* @func lch2hsl\n* @desc Return an HSL from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {ArrayLCH}\n* @example\n* lch2hsl(54.29, 106.84, 40.85) // => [0, 100, 50]\n*/\n\nfunction lch2hsl(lchL, lchC, lchH, fallbackhue) {\n\tconst [ labL, labA, labB ] = lch2lab(lchL, lchC, lchH);\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hslH, hslS, hslL ] = rgb2hsl(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hslH, hslS, hslL ];\n}\n\n/* Convert between HSL and XYZ\n/* ========================================================================== */\n\n/**\n* @func hsl2xyz\n* @desc Return an XYZ color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayXYZ}\n* @example\n* hsl2xyz(0, 100, 50) // => [41.25, 21.27, 1.93]\n*/\n\nfunction hsl2xyz(hslH, hslS, hslL) {\n\tconst [ rgbR, rgbG, rgbB ] = hsl2rgb(hslH, hslS, hslL);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/**\n* @func xyz2hsl\n* @desc Return an HSL color from an XYZ color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayHSL}\n* @example\n* xyz2hsl(0, 100, 50) // => [41.25, 21.27, 1.93]\n*/\n\nfunction xyz2hsl(xyzX, xyzY, xyzZ, fallbackhue) {\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hslH, hslS, hslL ] = rgb2hsl(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hslH, hslS, hslL ];\n}\n\n/* Convert between HWB and Lab\n/* ========================================================================== */\n\n/**\n* @func hwb2lab\n* @desc Return a CIE LAB color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayLAB}\n* @example\n* hwb2lab(0, 0, 0) // => [54.29, 80.82, 69.88]\n*/\n\nfunction hwb2lab(hwbH, hwbW, hwbB) {\n\tconst [ rgbR, rgbG, rgbB ] = hwb2rgb(hwbH, hwbW, hwbB);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\n\treturn [ labL, labA, labB ];\n}\n\n/**\n* @func lab2hwb\n* @desc Return an HWB color from a CIE LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {ArrayHWB}\n* @example\n* lab2hwb(54.29, 80.82, 69.88) // => [0, 0, 0]\n*/\n\nfunction lab2hwb(labL, labA, labB, fallbackhue) {\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hwbH, hwbW, hwbB ] = rgb2hwb(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hwbH, hwbW, hwbB ];\n}\n\n/* Convert between HWB and LCH\n/* ========================================================================== */\n\n/**\n* @func hwb2lch\n* @desc Return a CIE LCH color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayLCH}\n* @example\n* hwb2lch(0, 0, 0) // => [54.29, 106.84, 40.85]\n*/\n\nfunction hwb2lch(hwbH, hwbW, hwbB) {\n\tconst [ rgbR, rgbG, rgbB ] = hwb2rgb(hwbH, hwbW, hwbB);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\tconst [ lchL, lchC, lchH ] = lab2lch(labL, labA, labB);\n\n\treturn [ lchL, lchC, lchH ];\n}\n\n/**\n* @func lch2hwb\n* @desc Return an HWB color from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {ArrayLCH}\n* @example\n* lch2hwb(54.29, 106.84, 40.85) // => [0, 0, 0]\n*/\n\nfunction lch2hwb(lchL, lchC, lchH, fallbackhue) {\n\tconst [ labL, labA, labB ] = lch2lab(lchL, lchC, lchH);\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hwbH, hwbW, hwbB ] = rgb2hwb(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hwbH, hwbW, hwbB ];\n}\n\n/* Convert between HWB and XYZ\n/* ========================================================================== */\n\n/**\n* @func hwb2xyz\n* @desc Return an XYZ color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayXYZ}\n* @example\n* hwb2xyz(0, 0, 0) // => [41.25, 21.27, 1.93]\n*/\n\nfunction hwb2xyz(hwbH, hwbW, hwbB) {\n\tconst [ rgbR, rgbG, rgbB ] = hwb2rgb(hwbH, hwbW, hwbB);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/**\n* @func xyz2hwb\n* @desc Return an HWB color from an XYZ color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayXYZ}\n* @example\n* xyz2hwb(0, 0, 0) // => [41.25, 21.27, 1.93]\n*/\n\nfunction xyz2hwb(xyzX, xyzY, xyzZ, fallbackhue) {\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hwbH, hwbW, hwbB ] = rgb2hwb(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hwbH, hwbW, hwbB ];\n}\n\n/* Convert between HSV and Lab\n/* ========================================================================== */\n\n/**\n* @func hsv2lab\n* @desc Return a CIE LAB color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayLAB}\n* @example\n* hsv2lab(0, 100, 100) // => [54.29, 80.82, 69.88]\n*/\n\nfunction hsv2lab(hsvH, hsvS, hsvV) {\n\tconst [ rgbR, rgbG, rgbB ] = hsv2rgb(hsvH, hsvS, hsvV);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\n\treturn [ labL, labA, labB ];\n}\n\n/**\n* @func lab2hsv\n* @desc Return an HSV color from a CIE LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {ArrayHSV}\n* @example\n* lab2hsv(54.29, 80.82, 69.88) // => [0, 100, 100]\n*/\n\nfunction lab2hsv(labL, labA, labB, fallbackhue) {\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hsvH, hsvS, hsvV ] = rgb2hsv(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hsvH, hsvS, hsvV ];\n}\n\n/* Convert between HSV and LCH\n/* ========================================================================== */\n\n/**\n* @func hsv2lch\n* @desc Return a CIE LCH color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayLCH}\n* @example\n* hsv2lch(0, 100, 100) // => [54.29, 106.84, 40.85]\n*/\n\nfunction hsv2lch(hsvH, hsvS, hsvV) {\n\tconst [ rgbR, rgbG, rgbB ] = hsv2rgb(hsvH, hsvS, hsvV);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\tconst [ lchL, lchC, lchH ] = lab2lch(labL, labA, labB);\n\n\treturn [ lchL, lchC, lchH ];\n}\n\n/**\n* @func lch2hsv\n* @desc Return an HSV color from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {ArrayHSV}\n* @example\n* lch2hsv(54.29, 106.84, 40.85) // => [0, 100, 100]\n*/\n\nfunction lch2hsv(lchL, lchC, lchH, fallbackhue) {\n\tconst [ labL, labA, labB ] = lch2lab(lchL, lchC, lchH);\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hsvH, hsvS, hsvV ] = rgb2hsv(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hsvH, hsvS, hsvV ];\n}\n\n/* Convert between HSV and XYZ\n/* ========================================================================== */\n\n/**\n* @func hsv2xyz\n* @desc Return an XYZ color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayXYZ}\n* @example\n* hsv2xyz(0, 100, 100) // => [41.25, 21.27, 1.93]\n*/\n\nfunction hsv2xyz(hsvH, hsvS, hsvV) {\n\tconst [ rgbR, rgbG, rgbB ] = hsv2rgb(hsvH, hsvS, hsvV);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/**\n* @func xyz2hsv\n* @desc Return an XYZ color from an HSV color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayHSV}\n* @example\n* xyz2hsv(41.25, 21.27, 1.93) // => [0, 100, 100]\n*/\n\nfunction xyz2hsv(xyzX, xyzY, xyzZ, fallbackhue) {\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hsvH, hsvS, hsvV ] = rgb2hsv(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hsvH, hsvS, hsvV ];\n}\n\n/* Convert between XYZ and LCH\n/* ========================================================================== */\n\n/**\n* @func xyz2lch\n* @desc Return a CIE LCH color from an XYZ color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayLCH}\n* @example\n* xyz2lch(41.25, 21.27, 1.93) // => [54.29, 106.84, 40.85]\n*/\n\nfunction xyz2lch(xyzX, xyzY, xyzZ) {\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\tconst [ lchL, lchC, lchH ] = lab2lch(labL, labA, labB);\n\n\treturn [ lchL, lchC, lchH ];\n}\n\n/**\n* @func lch2xyz\n* @desc Return an XYZ color from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {ArrayXYZ}\n* @example\n* lch2xyz(54.29, 106.84, 40.85) // => [41.25, 21.27, 1.93]\n*/\n\nfunction lch2xyz(lchL, lchC, lchH) {\n\tconst [ labL, labA, labB ] = lch2lab(lchL, lchC, lchH);\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/* Hex input conversions\n/* ========================================================================== */\n\n/**\n* @func hex2hsl\n* @desc Return an HSL color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayHSL}\n* @example\n* hex2hsl(\"#f00\") // => [0, 100, 50]\n*/\n\nfunction hex2hsl(hex) {\n\treturn rgb2hsl(...hex2rgb(hex));\n}\n\n/**\n* @func hex2hsv\n* @desc Return an HSL color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayHSV}\n* @example\n* hex2hsv(\"#f00\") // => [0, 100, 100]\n*/\n\nfunction hex2hsv(hex) {\n\treturn rgb2hsv(...hex2rgb(hex));\n}\n\n/**\n* @func hex2hwb\n* @desc Return an HWB color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayHWB}\n* @example\n* hex2hwb(\"#f00\") // => [0, 0, 0]\n*/\n\nfunction hex2hwb(hex) {\n\treturn rgb2hwb(...hex2rgb(hex));\n}\n\n/**\n* @func hex2lab\n* @desc Return a CIE LAB color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayLAB}\n* @example\n* hex2lab(\"#f00\") // => [54.29, 80.82, 69.88]\n*/\n\nfunction hex2lab(hex) {\n\treturn rgb2lab(...hex2rgb(hex));\n}\n\n/**\n* @func hex2lch\n* @desc Return a CIE LCH color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayLCH}\n* @example\n* hex2lch(\"#f00\") // => [54.29, 106.84, 40.85]\n*/\n\nfunction hex2lch(hex) {\n\treturn rgb2lch(...hex2rgb(hex));\n}\n\n/**\n* @func hex2xyz\n* @desc Return an XYZ color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayXYZ}\n* @example\n* hex2xyz(\"#f00\") // => [41.25, 21.27, 1.93]\n*/\n\nfunction hex2xyz(hex) {\n\treturn rgb2xyz(...hex2rgb(hex));\n}\n\n/* Hex output conversions\n/* ========================================================================== */\n\n/**\n* @func hsl2hex\n* @desc Return a Hex color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {StringHex}\n* @example\n* hsl2hex(0, 100, 50) // => \"#f00\"\n*/\n\nfunction hsl2hex(hslH, hslS, hslL) {\n\treturn rgb2hex(...hsl2rgb(hslH, hslS, hslL));\n}\n\n/**\n* @func hsv2hex\n* @desc Return a Hex color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {StringHex}\n* @example\n* hsv2hex(0, 100, 100) // => \"#f00\"\n*/\n\nfunction hsv2hex(hsvH, hsvS, hsvV) {\n\treturn rgb2hex(...hsl2rgb(hsvH, hsvS, hsvV));\n}\n\n/**\n* @func hwb2hex\n* @desc Return a Hex color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {StringHex}\n* @example\n* hwb2hex(0, 0, 0) // => \"#f00\"\n*/\n\nfunction hwb2hex(hwbH, hwbW, hwbB) {\n\treturn rgb2hex(...hwb2rgb(hwbH, hwbW, hwbB));\n}\n\n/**\n* @func lch2hex\n* @desc Return a Hex color from a CIE LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {StringHex}\n* @example\n* lch2hex(54.29, 80.82, 69.88) // => \"#f00\"\n*/\n\nfunction lab2hex(labL, labA, labB) {\n\treturn rgb2hex(...lab2rgb(labL, labA, labB));\n}\n\n/**\n* @func lch2hex\n* @desc Return a Hex color from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {StringHex}\n* @example\n* lch2hex(54.29, 106.84, 40.85) // => \"#f00\"\n*/\n\nfunction lch2hex(lchL, lchC, lchH) {\n\treturn rgb2hex(...lch2rgb(lchL, lchC, lchH));\n}\n\n/**\n* @func xyz2hex\n* @desc Return a Hex color from an XYZ color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {StringHex}\n* @example\n* xyz2hex(41.25, 21.27, 1.93) // => \"#f00\"\n*/\n\nfunction xyz2hex(xyzX, xyzY, xyzZ) {\n\treturn rgb2hex(...xyz2rgb(xyzX, xyzY, xyzZ));\n}\n\n/* CIEDE conversions\n/* ========================================================================== */\n\n/**\n* @func hex2ciede\n* @desc Return the CIEDE2000 difference between 2 HEX colors\n* @param {StringHex} hex1\n* @param {StringHex} hex2\n* @return {NumberCIEDE}\n* @example\n* hex2ciede('#fff', '#000') // => 100\n*/\n\nfunction hex2ciede(hex1, hex2) {\n\treturn lab2ciede(hex2lab(hex1), hex2lab(hex2));\n}\n\n/**\n* @func hsl2ciede\n* @desc Return the CIEDE2000 difference between 2 HSL colors\n* @param {ArrayHSL} hsl1\n* @param {ArrayHSL} hsl2\n* @return {NumberCIEDE}\n* @example\n* hsl2ciede([0, 0, 100], [0, 0, 0]) // => 100\n*/\n\nfunction hsl2ciede(hsl1, hsl2) {\n\treturn lab2ciede(hsl2lab(...hsl1), hsl2lab(...hsl2));\n}\n\n/**\n* @func hsv2ciede\n* @desc Return the CIEDE2000 difference between 2 HSV colors\n* @param {ArrayHSV} hsl1\n* @param {ArrayHSV} hsl2\n* @return {NumberCIEDE}.\n* @example\n* hsv2ciede([0, 0, 40], [0, 0, 0]) // => 100\n*/\n\nfunction hsv2ciede(hsv1, hsv2) {\n\treturn lab2ciede(hsv2lab(...hsv1), hsv2lab(...hsv2));\n}\n\n/**\n* @func hwb2ciede\n* @desc Return the CIEDE2000 difference between 2 HWB colors\n* @param {ArrayHWB} hwb1\n* @param {ArrayHWB} hwb2\n* @return {NumberCIEDE}.\n* @example\n* hwb2ciede([0, 0, 40], [0, 0, 0]) // => 100\n*/\n\nfunction hwb2ciede(hwb1, hwb2) {\n\treturn lab2ciede(hwb2lab(...hwb1), hwb2lab(...hwb2));\n}\n\n/**\n* @func keyword2ciede\n* @desc Return the CIEDE2000 difference between 2 keyword colors\n* @param {StringKeyword} keyword1\n* @param {StringKeyword} keyword2\n* @return {NumberCIEDE}.\n* @example\n* keyword2ciede('white', 'black') // => 100\n*/\n\nfunction keyword2ciede(keyword1, keyword2) {\n\treturn lab2ciede(keyword2lab(keyword1), keyword2lab(keyword2));\n}\n\n/**\n* @func lch2ciede\n* @desc Return the CIEDE2000 difference between 2 LCH colors\n* @param {ArrayLCH} lch1\n* @param {ArrayLCH} lch2\n* @return {NumberCIEDE}.\n* @example\n* lch2ciede([100, 0.03, -82.2], [0, 0, 0]) // => 100\n*/\n\nfunction lch2ciede(lch1, lch2) {\n\treturn lab2ciede(lch2lab(...lch1), lch2lab(...lch2));\n}\n\n/**\n* @func rgb2ciede\n* @desc Return the CIEDE2000 difference between 2 RGB colors\n* @param {ArrayRGB} rgb1\n* @param {ArrayRGB} rgb2\n* @return {NumberCIEDE}.\n* @example\n* rgb2ciede([100, 100, 100], [0, 0, 0]) // => 100\n*/\n\nfunction rgb2ciede(rgb1, rgb2) {\n\treturn lab2ciede(rgb2lab(...rgb1), rgb2lab(...rgb2));\n}\n\n/**\n* @func xyz2ciede\n* @desc Return the CIEDE2000 difference between 2 XYZ colors\n* @param {ArrayXYZ} xyz1\n* @param {ArrayXYZ} xyz2\n* @return {NumberCIEDE}.\n* @example\n* xyz2ciede([95.05, 100, 108.88], [0, 0, 0]) // => 100\n*/\n\nfunction xyz2ciede(xyz1, xyz2) {\n\treturn lab2ciede(xyz2lab(...xyz1), xyz2lab(...xyz2));\n}\n\n/* Contrast conversions\n/* ========================================================================== */\n\n/**\n* @func hex2contrast\n* @desc Return the contrast ratio of 2 HEX colors\n* @param {StringHex} hex1\n* @param {StringHex} hex2\n* @return {NumberContrast}\n* @example\n* rgb2contrast(\"#fff\", '#000') // => 21\n*/\n\nfunction hex2contrast(hex1, hex2) {\n\treturn rgb2contrast(hex2rgb(hex1), hex2rgb(hex2));\n}\n\n/**\n* @func hsl2contrast\n* @desc Return the contrast ratio of 2 HSL colors\n* @param {ArrayHSL} hsl1\n* @param {ArrayHSL} hsl2\n* @return {NumberContrast}\n* @example\n* hsl2contrast([0, 0, 100], [0, 0, 0]) // => 21\n*/\n\nfunction hsl2contrast(hsl1, hsl2) {\n\treturn rgb2contrast(hsl2rgb(...hsl1), hsl2rgb(...hsl2));\n}\n\n/**\n* @func hsv2contrast\n* @desc Return the contrast ratio of 2 HSV colors\n* @param {ArrayHSV} hsv1\n* @param {ArrayHSV} hsv2\n* @return {NumberContrast}\n* @example\n* hsv2contrast([0, 0, 100], [0, 0, 0]) // => 21\n*/\n\nfunction hsv2contrast(hsv1, hsv2) {\n\treturn rgb2contrast(hsv2rgb(...hsv1), hsv2rgb(...hsv2));\n}\n\n/**\n* @func hwb2contrast\n* @desc Return the contrast ratio of 2 HWB colors\n* @param {ArrayHWB} hwb1\n* @param {ArrayHWB} hwb2\n* @return {NumberContrast}\n* @example\n* hwb2contrast([0, 100, 0], [0, 0, 100]) // => 21\n*/\n\nfunction hwb2contrast(hwb1, hwb2) {\n\treturn rgb2contrast(hwb2rgb(...hwb1), hwb2rgb(...hwb2));\n}\n\n/**\n* @func keyword2contrast\n* @desc Return the contrast ratio of 2 keyword colors\n* @param {StringKeyword} keyword1\n* @param {StringKeyword} keyword2\n* @return {NumberContrast}\n* @example\n* keyword2contrast('white', 'black') // => 21\n*/\n\nfunction keyword2contrast(keyword1, keyword2) {\n\treturn rgb2contrast(keyword2rgb(keyword1), keyword2rgb(keyword2));\n}\n\n/**\n* @func lab2contrast\n* @desc Return the contrast ratio of 2 LAB colors\n* @param {ArrayLAB} lab1\n* @param {ArrayLAB} lab2\n* @return {NumberContrast}\n* @example\n* lab2contrast([100, 0.003, -0.025], [0, 0, 0]) // => 21\n*/\n\nfunction lab2contrast(lab1, lab2) {\n\treturn rgb2contrast(lab2rgb(...lab1), lab2rgb(...lab2));\n}\n\n/**\n* @func lch2contrast\n* @desc Return the contrast ratio of 2 LCH colors\n* @param {ArrayLCH} lch1\n* @param {ArrayLCH} lch2\n* @return {NumberContrast}\n* @example\n* lch2contrast([100, 0.025, -82.2], [0, 0, 0]) // => 21\n*/\n\nfunction lch2contrast(lch1, lch2) {\n\treturn rgb2contrast(lch2rgb(...lch1), lch2rgb(...lch2));\n}\n\n/**\n* @func xyz2contrast\n* @desc Return the contrast ratio of 2 XYZ colors\n* @param {ArrayXYZ} xyz1\n* @param {ArrayXYZ} xyz2\n* @return {NumberContrast}\n* @example\n* xyz2contrast([95.05, 100, 108.88], [0, 0, 0]) // => 21\n*/\n\nfunction xyz2contrast(xyz1, xyz2) {\n\treturn rgb2contrast(xyz2rgb(...xyz1), xyz2rgb(...xyz2));\n}\n\n/* Keyword Conversions\n/* ========================================================================== */\n\n/**\n* @func keyword2hex\n* @desc Return an RGB color from a keyword color\n* @param {StringKeyword} keyword - CSS Color Keyword\n* @return {String}\n* @example\n* keyword2hex('white') // => \"#ffffff\"\n*/\n\nfunction keyword2hex(keyword) {\n\treturn rgb2hex(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2hsl\n* @desc Return an HSL color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayHSL}\n* @example\n* keyword2hsl('white') // => [0, 0, 100]\n*/\n\nfunction keyword2hsl(keyword) {\n\treturn rgb2hsl(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2hsv\n* @desc Return an HSV color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayHSV}\n* @example\n* keyword2hsv('white') // => [0, 0, 100]\n*/\n\nfunction keyword2hsv(keyword) {\n\treturn rgb2hsv(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2hwb\n* @desc Return an HWB color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayHWB}\n* @example\n* keyword2hwb('red') // => [0, 0, 0]\n*/\n\nfunction keyword2hwb(keyword) {\n\treturn rgb2hwb(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2lab\n* @desc Return a CIE LAB color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayLAB}\n* @example\n* keyword2lab('red') // => [54.29, 80.82, 69.88]\n*/\n\nfunction keyword2lab(keyword) {\n\treturn rgb2lab(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2lch\n* @desc Return a CIE LCH color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayLCH}\n* @example\n* keyword2lch('red') // => [54.29, 106.84, 40.85]\n*/\n\nfunction keyword2lch(keyword) {\n\treturn rgb2lch(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2lch\n* @desc Return an XYZ color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayXYZ}\n* @example\n* keyword2lch('red') // => [41.25, 21.27, 1.93]\n*/\n\nfunction keyword2xyz(keyword) {\n\treturn rgb2xyz(...keyword2rgb(keyword));\n}\n\n/* All Conversions\n/* ========================================================================== */\n\nexport {\n\thex2ciede,\n\thex2contrast,\n\thex2hsl,\n\thex2hsv,\n\thex2hwb,\n\thex2lab,\n\thex2lch,\n\thex2rgb,\n\thex2xyz,\n\n\thsl2ciede,\n\thsl2contrast,\n\thsl2hex,\n\thsl2hsv,\n\thsl2hwb,\n\thsl2lab,\n\thsl2lch,\n\thsl2rgb,\n\thsl2xyz,\n\n\thsv2ciede,\n\thsv2contrast,\n\thsv2hex,\n\thsv2hsl,\n\thsv2hwb,\n\thsv2lab,\n\thsv2lch,\n\thsv2rgb,\n\thsv2xyz,\n\n\thwb2ciede,\n\thwb2contrast,\n\thwb2hex,\n\thwb2hsl,\n\thwb2hsv,\n\thwb2lab,\n\thwb2lch,\n\thwb2rgb,\n\thwb2xyz,\n\n\tkeyword2ciede,\n\tkeyword2contrast,\n\tkeyword2hex,\n\tkeyword2hsl,\n\tkeyword2hsv,\n\tkeyword2hwb,\n\tkeyword2lab,\n\tkeyword2lch,\n\tkeyword2rgb,\n\tkeyword2xyz,\n\n\tlab2ciede,\n\tlab2contrast,\n\tlab2hex,\n\tlab2hsl,\n\tlab2hsv,\n\tlab2hwb,\n\tlab2lch,\n\tlab2rgb,\n\tlab2xyz,\n\n\tlch2ciede,\n\tlch2contrast,\n\tlch2hex,\n\tlch2hsl,\n\tlch2hsv,\n\tlch2hwb,\n\tlch2lab,\n\tlch2rgb,\n\tlch2xyz,\n\n\trgb2ciede,\n\trgb2contrast,\n\trgb2hex,\n\trgb2hsl,\n\trgb2hsv,\n\trgb2hwb,\n\trgb2lab,\n\trgb2lch,\n\trgb2xyz,\n\n\txyz2ciede,\n\txyz2contrast,\n\txyz2hex,\n\txyz2hsl,\n\txyz2hsv,\n\txyz2hwb,\n\txyz2lab,\n\txyz2lch,\n\txyz2rgb,\n};\n\n/**\n* @typedef {Array} ArrayRGB\n* An array of red, green, and blue channels.\n* @property {Number} 0 - Red (0 - 100)\n* @property {Number} 1 - Green (0 - 100)\n* @property {Number} 2 - Blue (0 - 100)\n*\n*/\n/**\n* @typedef {Array} ArrayRGBA\n* An array of red, green, blue, and alpha channels.\n* @property {Number} 0 - Red (0 - 100)\n* @property {Number} 1 - Green (0 - 100)\n* @property {Number} 2 - Blue (0 - 100)\n* @property {Number} 3 - Alpha (0 - 100)\n*/\n/**\n* @typedef {Array} ArrayHSL\n* An array of hue, saturation, and lightness channels.\n* @property {Number} 0 - Hue Angle (0 - 360)\n* @property {Number} 1 - Saturation (0 - 100)\n* @property {Number} 2 - Lightness (0 - 100)\n*/\n/**\n* @typedef {Array} ArrayHSV\n* An array of hue, saturation, and value channels.\n* @property {Number} 0 - Hue Angle (0 - 360)\n* @property {Number} 1 - Saturation (0 - 100)\n* @property {Number} 2 - Value (0 - 100)\n*/\n/**\n* @typedef {Array} ArrayLAB\n* An array of CIELAB lightness, red/green, and yellow/blue.\n* @property {Number} 0 - CIE Lightness\n* @property {Number} 1 - Red/Green Coordinate\n* @property {Number} 2 - Yellow/Blue Coordinate\n*/\n/**\n* @typedef {Array} ArrayLCH\n* An array of CIELAB lightness, chroma, and hue.\n* @property {Number} 0 - CIE Lightness\n* @property {Number} 1 - CIE Chroma\n* @property {Number} 2 - CIE Hue\n*/\n/**\n* @typedef {Array} ArrayHWB\n* An array of hue, whiteness, and blackness channels.\n* @property {Number} 0 - Hue Angle (0 - 360)\n* @property {Number} 1 - Whiteness (0 - 100)\n* @property {Number} 2 - Blackness (0 - 100)\n*/\n/**\n* @typedef {Array} ArrayXYZ\n* An array of CIELAB chromacity.\n* @property {Number} 0 - X Chromacity\n* @property {Number} 1 - Y Chromacity\n* @property {Number} 2 - Z Chromacity\n* @example\n* [95.05, 100, 108.88]\n* @example\n* [0, 0, 0]\n*/\n/**\n* @typedef {String} StringHex\n* A string representing the 3, 4, 6, or 8 digit hexidecimal color.\n* @example\n* \"#f00\"\n* \"#f00f\"\n* @example\n* \"#ff0000\"\n* \"#ff0000ff\"\n*/\n/**\n* @typedef {String} StringKeyword\n* A case-insensitive string identifier that represents a specific color.\n* @example\n* \"#f00\"\n* \"#f00f\"\n* @example\n* \"#ff0000\"\n* \"#ff0000ff\"\n*/\n/**\n* @typedef {Number} NumberContrast\n* A contrast ratio of the colors (0 - 21)\n* @example\n* 0\n* @example\n* 21\n*/\n/**\n* @typedef {Number} NumberCIEDE\n* A CIEDE2000 difference between 2 colors (0 - 100)\n* @example\n* 0\n* @example\n* 100\n*/\n"],"names":["rgb2hue","rgbR","rgbG","rgbB","fallbackhue","value","rgb2value","delta","rgb2whiteness","segment","hue2rgb","t1","t2","hue","rhue","max","min","matrix","params","mats","map","mat","reduce","acc","index","precision","wd50X","wd50Y","wd50Z","atan2d","y","x","rad2deg","atan2","cosd","cos","deg2rad","PI","sind","sin","abs","Math","cbrt","exp","floor","pow","sqrt","epsilon","kappa","rgb2hsl","hslH","hslV","hslW","hslD","hslL","hsl2rgb","hslS","rgb2hwb","hwb2rgb","hwbH","hwbW","hwbB","v","rgb2hsv","hsvV","hsvW","hsv2rgb","hsvH","hsvS","rgbI","rgbF","rgbM","rgbN","rgbT","rgb2xyz","lrgbR","lrgbB","lrgbG","xyzX","xyzY","xyzZ","xyz2rgb","hsl2hsv","hsv1","hsv2hsl","hwb2hsv","hsv2hwb","lab2xyz","labL","labA","labB","f2","f1","f3","initX","initY","initZ","xyz2lab","d50X","d50Y","d50Z","lab2lch","lchC","lchH","lch2lab","lchL","rgb2contrast","rgb1","rgb2","relativeLuminance1","relativeLuminance2","l1","l2","luminance2contrast","rgb2luminance","adjustChannel","coefficientR","coefficientG","coefficientB","lowc","adjustGamma","hex2rgb","hex","r","g","b","a","rr","gg","bb","aa","match","hexColorMatch","undefined","parseInt","c","rgb2hex","round","toString","slice","keyword2rgb","keyword","rgb255","keywords","String","toLowerCase","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","transparent","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","lab2ciede","L1","a1","b1","L2","a2","b2","c1","c2","deltaLPrime","lBar","cBarPow7","cCoeff","a1Prime","a2Prime","c1Prime","c2Prime","cBarPrime","deltaCPrime","h1Prime","h2Prime","deltaSmallHPrime","deltaBigHPrime","hBarPrime","T","slCoeff","sl","sc","sh","RtCoeff","Rt","term1","kl","term2","kc","term3","kh","rgb2lab","lab2rgb","rgb2lch","lch2rgb","hwb2hsl","hsl2hwb","hsl2lab","lab2hsl","hsl2lch","lch2hsl","hsl2xyz","xyz2hsl","hwb2lab","lab2hwb","hwb2lch","lch2hwb","hwb2xyz","xyz2hwb","hsv2lab","lab2hsv","hsv2lch","lch2hsv","hsv2xyz","xyz2hsv","xyz2lch","lch2xyz","hex2hsl","hex2hsv","hex2hwb","hex2lab","hex2lch","hex2xyz","hsl2hex","hsv2hex","hwb2hex","lab2hex","lch2hex","xyz2hex","hex2ciede","hex1","hex2","hsl2ciede","hsl1","hsl2","hsv2ciede","hsv2","hwb2ciede","hwb1","hwb2","keyword2ciede","keyword1","keyword2","keyword2lab","lch2ciede","lch1","lch2","rgb2ciede","xyz2ciede","xyz1","xyz2","hex2contrast","hsl2contrast","hsv2contrast","hwb2contrast","keyword2contrast","lab2contrast","lab1","lab2","lch2contrast","xyz2contrast","keyword2hex","keyword2hsl","keyword2hsv","keyword2hwb","keyword2lch","keyword2xyz"],"mappings":"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"}
\ No newline at end of file
diff --git a/packages/convert-colors/src/index.js b/packages/convert-colors/src/index.js
index fefb0d5..e7e5aa7 100644
--- a/packages/convert-colors/src/index.js
+++ b/packages/convert-colors/src/index.js
@@ -1,15 +1,16 @@
-import { rgb2hsl, hsl2rgb } from './rgb-hsl';
-import { rgb2hwb, hwb2rgb } from './rgb-hwb';
-import { rgb2hsv, hsv2rgb } from './rgb-hsv';
-import { rgb2xyz, xyz2rgb } from './rgb-xyz';
+import keyword2rgb from './keyword-rgb';
+import lab2ciede from './lab-ciede';
+import rgb2contrast from './rgb-contrast';
+import { hex2rgb, rgb2hex } from './hex-rgb';
 import { hsl2hsv, hsv2hsl } from './hsl-hsv';
 import { hwb2hsv, hsv2hwb } from './hwb-hsv';
-import { lab2xyz, xyz2lab } from './lab-xyz';
 import { lab2lch, lch2lab } from './lab-lch';
-import rgb2contrast from './rgb-contrast';
-import { hex2rgb, rgb2hex } from './hex-rgb';
-import keyword2rgb from './keyword-rgb';
-import lab2ciede from './lab-ciede';
+import { lab2xyz, xyz2lab } from './lab-xyz';
+import { rgb2hsl, hsl2rgb } from './rgb-hsl';
+import { rgb2hsv, hsv2rgb } from './rgb-hsv';
+import { rgb2hwb, hwb2rgb } from './rgb-hwb';
+import { rgb2xyz, xyz2rgb } from './rgb-xyz';
+import { xyz2p3 } from './xyz-p3';
 
 /* Convert between RGB and Lab
 /* ========================================================================== */
@@ -669,14 +670,14 @@ function hwb2hex(hwbH, hwbW, hwbB) {
 }
 
 /**
-* @func lch2hex
+* @func lab2hex
 * @desc Return a Hex color from a CIE LAB color
 * @param {Number} l - CIE Lightness
 * @param {Number} a - Red/Green Coordinate
 * @param {Number} b - Yellow/Blue Coordinate
 * @return {StringHex}
 * @example
-* lch2hex(54.29, 80.82, 69.88) // => "#f00"
+* lab2hex(54.29, 80.82, 69.88) // => "#f00"
 */
 
 function lab2hex(labL, labA, labB) {
@@ -1131,6 +1132,8 @@ export {
 	xyz2lab,
 	xyz2lch,
 	xyz2rgb,
+
+	xyz2p3,
 };
 
 /**
diff --git a/packages/convert-colors/src/xyz-p3.js b/packages/convert-colors/src/xyz-p3.js
new file mode 100644
index 0000000..91fe90f
--- /dev/null
+++ b/packages/convert-colors/src/xyz-p3.js
@@ -0,0 +1,23 @@
+import { matrix, pow } from './util';
+
+/**
+* @func xyz2p3
+* @desc Return an RGB gamma-corrected P3 color from an XYZ color
+* @param {Number} x - Chromaticity of X
+* @param {Number} y - Chromaticity of Y
+* @param {Number} z - Chromaticity of Z
+* @return {ArrayRGB}
+* @example
+* xyz2p3(41.25, 21.27, 1.93) // => [100, 0, 0]
+* @link https://www.w3.org/TR/css-color-4/#color-conversion-code
+*/
+
+export function xyz2p3(xyzX, xyzY, xyzZ) {
+	const [p3R, p3G, p3B] = matrix([xyzX, xyzY, xyzZ], [
+		[2.493496911941425, -0.9313836179191239, -0.40271078445071684],
+		[-0.8294889695615747, 1.7626640603183463, 0.023624685841943577],
+		[0.03584583024378447, -0.07617238926804182, 0.9568845240076872],
+	]).map(c => c > 0.0031308 ? 1.055 * pow(c, 1 / 2.4) - 0.055 : c * 12.92);
+
+	return [p3R, p3G, p3B];
+}
-- 
2.33.1

